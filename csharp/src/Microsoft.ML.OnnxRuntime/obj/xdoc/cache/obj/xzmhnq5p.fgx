id: Microsoft.ML.OnnxRuntime
language: CSharp
name:
  Default: Microsoft.ML.OnnxRuntime
qualifiedName:
  Default: Microsoft.ML.OnnxRuntime
type: Assembly
modifiers: {}
items:
- id: Microsoft.ML.OnnxRuntime
  commentId: N:Microsoft.ML.OnnxRuntime
  language: CSharp
  name:
    CSharp: Microsoft.ML.OnnxRuntime
    VB: Microsoft.ML.OnnxRuntime
  nameWithType:
    CSharp: Microsoft.ML.OnnxRuntime
    VB: Microsoft.ML.OnnxRuntime
  qualifiedName:
    CSharp: Microsoft.ML.OnnxRuntime
    VB: Microsoft.ML.OnnxRuntime
  type: Namespace
  assemblies:
  - Microsoft.ML.OnnxRuntime
  modifiers: {}
  items:
  - id: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1
    commentId: T:Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1
    language: CSharp
    name:
      CSharp: IDisposableReadOnlyCollection<T>
      VB: IDisposableReadOnlyCollection(Of T)
    nameWithType:
      CSharp: IDisposableReadOnlyCollection<T>
      VB: IDisposableReadOnlyCollection(Of T)
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection<T>
      VB: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection(Of T)
    type: Interface
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: IDisposableReadOnlyCollection
      path: ../src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
      startLine: 10
    syntax:
      content:
        CSharp: public interface IDisposableReadOnlyCollection<T>
        VB: >-
          Public Interface IDisposableReadOnlyCollection(Of T)

              Inherits IReadOnlyCollection(Of T), IDisposable
      typeParameters:
      - id: T
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items: []
  - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
    commentId: T:Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
    language: CSharp
    name:
      CSharp: DisposableNamedOnnxValue
      VB: DisposableNamedOnnxValue
    nameWithType:
      CSharp: DisposableNamedOnnxValue
      VB: DisposableNamedOnnxValue
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
      VB: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: DisposableNamedOnnxValue
      path: ../src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
      startLine: 60
    summary: "\nThis class serves as a container for model run output values including\ntensors, sequences of tensors, sequences and maps.\nIt extends NamedOnnxValue, exposes the OnnxValueType and Tensor type\nThe class must be disposed of.\nIt disposes of _ortValueHolder that owns the underlying Ort output value and\nanything else that would need to be disposed by the instance of the class.\nUse factory method CreateFromOrtValue to obtain an instance of the class.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DisposableNamedOnnxValue : NamedOnnxValue'
        VB: >-
          Public Class DisposableNamedOnnxValue

              Inherits NamedOnnxValue
    inheritance:
    - System.Object
    - Microsoft.ML.OnnxRuntime.NamedOnnxValue
    implements:
    - IDisposable
    inheritedMembers:
    - Microsoft.ML.OnnxRuntime.NamedOnnxValue._value
    - Microsoft.ML.OnnxRuntime.NamedOnnxValue._name
    - Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}})
    - Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
    - Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
    - Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor``1
    - Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable``1
    - Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary``2
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ValueType
      commentId: P:Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ValueType
      language: CSharp
      name:
        CSharp: ValueType
        VB: ValueType
      nameWithType:
        CSharp: DisposableNamedOnnxValue.ValueType
        VB: DisposableNamedOnnxValue.ValueType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ValueType
        VB: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ValueType
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ValueType
        path: ../src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
        startLine: 89
      summary: "\nReturns OnnxValueType\n"
      example: []
      syntax:
        content:
          CSharp: public OnnxValueType ValueType { get; }
          VB: Public ReadOnly Property ValueType As OnnxValueType
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.OnnxValueType
      overload: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ValueType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ElementType
      commentId: P:Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ElementType
      language: CSharp
      name:
        CSharp: ElementType
        VB: ElementType
      nameWithType:
        CSharp: DisposableNamedOnnxValue.ElementType
        VB: DisposableNamedOnnxValue.ElementType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ElementType
        VB: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ElementType
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ElementType
        path: ../src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
        startLine: 94
      summary: "\nOnly valid if ValueType is Tensor\n"
      example: []
      syntax:
        content:
          CSharp: public TensorElementType ElementType { get; }
          VB: Public ReadOnly Property ElementType As TensorElementType
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      overload: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ElementType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose(System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose(System.Boolean)
      language: CSharp
      name:
        CSharp: Dispose(Boolean)
        VB: Dispose(Boolean)
      nameWithType:
        CSharp: DisposableNamedOnnxValue.Dispose(Boolean)
        VB: DisposableNamedOnnxValue.Dispose(Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose(System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose(System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Dispose
        path: ../src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
        startLine: 425
      summary: "\nIDisposable implementation\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Dispose(bool disposing)
          VB: Protected Overridable Sub Dispose(disposing As Boolean)
        parameters:
        - id: disposing
          type: System.Boolean
          description: true if invoked by Dispose()
      overload: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose
      commentId: M:Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: DisposableNamedOnnxValue.Dispose()
        VB: DisposableNamedOnnxValue.Dispose()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose()
        VB: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Dispose
        path: ../src/Microsoft.ML.OnnxRuntime/DisposableNamedOnnxValue.shared.cs
        startLine: 448
      summary: "\nIDisposable implementation\n"
      example: []
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.ML.OnnxRuntime.OnnxRuntimeException
    commentId: T:Microsoft.ML.OnnxRuntime.OnnxRuntimeException
    language: CSharp
    name:
      CSharp: OnnxRuntimeException
      VB: OnnxRuntimeException
    nameWithType:
      CSharp: OnnxRuntimeException
      VB: OnnxRuntimeException
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OnnxRuntimeException
      VB: Microsoft.ML.OnnxRuntime.OnnxRuntimeException
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/Exceptions.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OnnxRuntimeException
      path: ../src/Microsoft.ML.OnnxRuntime/Exceptions.shared.cs
      startLine: 33
    summary: "\nThe Exception that is thrown for errors related ton OnnxRuntime\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OnnxRuntimeException : Exception'
        VB: >-
          Public Class OnnxRuntimeException

              Inherits Exception
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
    commentId: T:Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
    language: CSharp
    name:
      CSharp: FixedBufferOnnxValue
      VB: FixedBufferOnnxValue
    nameWithType:
      CSharp: FixedBufferOnnxValue
      VB: FixedBufferOnnxValue
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
      VB: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/FixedBufferOnnxValue.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: FixedBufferOnnxValue
      path: ../src/Microsoft.ML.OnnxRuntime/FixedBufferOnnxValue.shared.cs
      startLine: 12
    summary: "\nRepresents an OrtValue with its underlying buffer pinned\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FixedBufferOnnxValue : IDisposable'
        VB: >-
          Public Class FixedBufferOnnxValue

              Inherits IDisposable
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromTensor``1(Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
      commentId: M:Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromTensor``1(Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
      language: CSharp
      name:
        CSharp: CreateFromTensor<T>(Tensor<T>)
        VB: CreateFromTensor(Of T)(Tensor(Of T))
      nameWithType:
        CSharp: FixedBufferOnnxValue.CreateFromTensor<T>(Tensor<T>)
        VB: FixedBufferOnnxValue.CreateFromTensor(Of T)(Tensor(Of T))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromTensor<T>(Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>)
        VB: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromTensor(Of T)(Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/FixedBufferOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateFromTensor
        path: ../src/Microsoft.ML.OnnxRuntime/FixedBufferOnnxValue.shared.cs
        startLine: 34
      summary: "\nCreates a <xref href=\"Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue\" data-throw-if-not-resolved=\"false\"></xref> object from the tensor and pins its underlying buffer.\n"
      example: []
      syntax:
        content:
          CSharp: public static FixedBufferOnnxValue CreateFromTensor<T>(Tensor<T> value)
          VB: Public Shared Function CreateFromTensor(Of T)(value As Tensor(Of T)) As FixedBufferOnnxValue
        parameters:
        - id: value
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: ''
        typeParameters:
        - id: T
          description: ''
        return:
          type: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
          description: a disposable instance of FixedBufferOnnxValue
      overload: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromTensor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromMemory``1(Microsoft.ML.OnnxRuntime.OrtMemoryInfo,Memory{``0},Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int64[],System.Int64)
      commentId: M:Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromMemory``1(Microsoft.ML.OnnxRuntime.OrtMemoryInfo,Memory{``0},Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int64[],System.Int64)
      language: CSharp
      name:
        CSharp: CreateFromMemory<T>(OrtMemoryInfo, Memory<T>, TensorElementType, Int64[], Int64)
        VB: CreateFromMemory(Of T)(OrtMemoryInfo, Memory(Of T), TensorElementType, Int64(), Int64)
      nameWithType:
        CSharp: FixedBufferOnnxValue.CreateFromMemory<T>(OrtMemoryInfo, Memory<T>, TensorElementType, Int64[], Int64)
        VB: FixedBufferOnnxValue.CreateFromMemory(Of T)(OrtMemoryInfo, Memory(Of T), TensorElementType, Int64(), Int64)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromMemory<T>(Microsoft.ML.OnnxRuntime.OrtMemoryInfo, Memory<T>, Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, System.Int64[], System.Int64)
        VB: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromMemory(Of T)(Microsoft.ML.OnnxRuntime.OrtMemoryInfo, Memory(Of T), Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, System.Int64(), System.Int64)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/FixedBufferOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateFromMemory
        path: ../src/Microsoft.ML.OnnxRuntime/FixedBufferOnnxValue.shared.cs
        startLine: 100
      syntax:
        content:
          CSharp: public static FixedBufferOnnxValue CreateFromMemory<T>(OrtMemoryInfo memoryInfo, Memory<T> memory, TensorElementType elementType, long[] shape, long bytesSize)
          VB: Public Shared Function CreateFromMemory(Of T)(memoryInfo As OrtMemoryInfo, memory As Memory(Of T), elementType As TensorElementType, shape As Long(), bytesSize As Long) As FixedBufferOnnxValue
        parameters:
        - id: memoryInfo
          type: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
        - id: memory
          type: Memory{{T}}
        - id: elementType
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
        - id: shape
          type: System.Int64[]
        - id: bytesSize
          type: System.Int64
        typeParameters:
        - id: T
        return:
          type: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
      overload: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromMemory*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose(System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose(System.Boolean)
      language: CSharp
      name:
        CSharp: Dispose(Boolean)
        VB: Dispose(Boolean)
      nameWithType:
        CSharp: FixedBufferOnnxValue.Dispose(Boolean)
        VB: FixedBufferOnnxValue.Dispose(Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose(System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose(System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/FixedBufferOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Dispose
        path: ../src/Microsoft.ML.OnnxRuntime/FixedBufferOnnxValue.shared.cs
        startLine: 135
      summary: "\nIDisposable implementation\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Dispose(bool disposing)
          VB: Protected Overridable Sub Dispose(disposing As Boolean)
        parameters:
        - id: disposing
          type: System.Boolean
          description: true if invoked from Dispose()
      overload: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose
      commentId: M:Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: FixedBufferOnnxValue.Dispose()
        VB: FixedBufferOnnxValue.Dispose()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose()
        VB: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/FixedBufferOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Dispose
        path: ../src/Microsoft.ML.OnnxRuntime/FixedBufferOnnxValue.shared.cs
        startLine: 153
      summary: "\nIDisposable implementation\n"
      example: []
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.ML.OnnxRuntime.InferenceSession
    commentId: T:Microsoft.ML.OnnxRuntime.InferenceSession
    language: CSharp
    name:
      CSharp: InferenceSession
      VB: InferenceSession
    nameWithType:
      CSharp: InferenceSession
      VB: InferenceSession
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.InferenceSession
      VB: Microsoft.ML.OnnxRuntime.InferenceSession
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: InferenceSession
      path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
      startLine: 21
    summary: "\nRepresents an Inference Session on an ONNX Model.\nThis is a IDisposable class and it must be disposed of\nusing either a explicit call to Dispose() method or\na pattern of using() block. If this is a member of another\nclass that class must also become IDisposable and it must\ndispose of InferfenceSession in its Dispose() method.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class InferenceSession : IDisposable'
        VB: >-
          Public Class InferenceSession

              Inherits IDisposable
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.String)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.String)
      language: CSharp
      name:
        CSharp: InferenceSession(String)
        VB: InferenceSession(String)
      nameWithType:
        CSharp: InferenceSession.InferenceSession(String)
        VB: InferenceSession.InferenceSession(String)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.String)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.String)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 55
      summary: "\nConstructs an InferenceSession from a model file\n"
      example: []
      syntax:
        content:
          CSharp: public InferenceSession(string modelPath)
          VB: Public Sub New(modelPath As String)
        parameters:
        - id: modelPath
          type: System.String
          description: ''
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.String,Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.String,Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      language: CSharp
      name:
        CSharp: InferenceSession(String, PrePackedWeightsContainer)
        VB: InferenceSession(String, PrePackedWeightsContainer)
      nameWithType:
        CSharp: InferenceSession.InferenceSession(String, PrePackedWeightsContainer)
        VB: InferenceSession.InferenceSession(String, PrePackedWeightsContainer)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.String, Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.String, Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 70
      summary: "\nConstructs an InferenceSession from a model file and it will use \nthe provided pre-packed weights container to store and share pre-packed buffers \nof shared initializers across sessions if any.\n"
      example: []
      syntax:
        content:
          CSharp: public InferenceSession(string modelPath, PrePackedWeightsContainer prepackedWeightsContainer)
          VB: Public Sub New(modelPath As String, prepackedWeightsContainer As PrePackedWeightsContainer)
        parameters:
        - id: modelPath
          type: System.String
          description: Model path
        - id: prepackedWeightsContainer
          type: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
          description: "Instance of PrepackedWeightsContainer. \nLifetime of &apos;prepackedWeightsContainer&apos; must be\nmanaged by the user and it must outlive any sessions reliant on it"
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.String,Microsoft.ML.OnnxRuntime.SessionOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.String,Microsoft.ML.OnnxRuntime.SessionOptions)
      language: CSharp
      name:
        CSharp: InferenceSession(String, SessionOptions)
        VB: InferenceSession(String, SessionOptions)
      nameWithType:
        CSharp: InferenceSession.InferenceSession(String, SessionOptions)
        VB: InferenceSession.InferenceSession(String, SessionOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.String, Microsoft.ML.OnnxRuntime.SessionOptions)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.String, Microsoft.ML.OnnxRuntime.SessionOptions)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 82
      summary: "\nConstructs an InferenceSession from a model file, with some additional session options\n"
      example: []
      syntax:
        content:
          CSharp: public InferenceSession(string modelPath, SessionOptions options)
          VB: Public Sub New(modelPath As String, options As SessionOptions)
        parameters:
        - id: modelPath
          type: System.String
          description: ''
        - id: options
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: ''
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.String,Microsoft.ML.OnnxRuntime.SessionOptions,Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.String,Microsoft.ML.OnnxRuntime.SessionOptions,Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      language: CSharp
      name:
        CSharp: InferenceSession(String, SessionOptions, PrePackedWeightsContainer)
        VB: InferenceSession(String, SessionOptions, PrePackedWeightsContainer)
      nameWithType:
        CSharp: InferenceSession.InferenceSession(String, SessionOptions, PrePackedWeightsContainer)
        VB: InferenceSession.InferenceSession(String, SessionOptions, PrePackedWeightsContainer)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.String, Microsoft.ML.OnnxRuntime.SessionOptions, Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.String, Microsoft.ML.OnnxRuntime.SessionOptions, Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 98
      summary: "\nConstructs an InferenceSession from a model file, with some additional session options\nand it will use the provided pre-packed weights container to store and share pre-packed buffers \nof shared initializers across sessions if any.\n"
      example: []
      syntax:
        content:
          CSharp: public InferenceSession(string modelPath, SessionOptions options, PrePackedWeightsContainer prepackedWeightsContainer)
          VB: Public Sub New(modelPath As String, options As SessionOptions, prepackedWeightsContainer As PrePackedWeightsContainer)
        parameters:
        - id: modelPath
          type: System.String
          description: Model path
        - id: options
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: Session options
        - id: prepackedWeightsContainer
          type: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
          description: "Instance of PrepackedWeightsContainer. \nLifetime of &apos;prepackedWeightsContainer&apos; must be\nmanaged by the user and it must outlive any sessions reliant on it"
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.Byte[])
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.Byte[])
      language: CSharp
      name:
        CSharp: InferenceSession(Byte[])
        VB: InferenceSession(Byte())
      nameWithType:
        CSharp: InferenceSession.InferenceSession(Byte[])
        VB: InferenceSession.InferenceSession(Byte())
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.Byte[])
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.Byte())
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 108
      summary: "\nConstructs an InferenceSession from a model data in byte array\n"
      example: []
      syntax:
        content:
          CSharp: public InferenceSession(byte[] model)
          VB: Public Sub New(model As Byte())
        parameters:
        - id: model
          type: System.Byte[]
          description: ''
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.Byte[],Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.Byte[],Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      language: CSharp
      name:
        CSharp: InferenceSession(Byte[], PrePackedWeightsContainer)
        VB: InferenceSession(Byte(), PrePackedWeightsContainer)
      nameWithType:
        CSharp: InferenceSession.InferenceSession(Byte[], PrePackedWeightsContainer)
        VB: InferenceSession.InferenceSession(Byte(), PrePackedWeightsContainer)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.Byte[], Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.Byte(), Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 123
      summary: "\nConstructs an InferenceSession from a model data (in byte array) and it will use \nthe provided pre-packed weights container to store and share pre-packed buffers \nof shared initializers across sessions if any.\n"
      example: []
      syntax:
        content:
          CSharp: public InferenceSession(byte[] model, PrePackedWeightsContainer prepackedWeightsContainer)
          VB: Public Sub New(model As Byte(), prepackedWeightsContainer As PrePackedWeightsContainer)
        parameters:
        - id: model
          type: System.Byte[]
          description: Model as byte array
        - id: prepackedWeightsContainer
          type: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
          description: "Instance of PrepackedWeightsContainer. \nLifetime of &apos;prepackedWeightsContainer&apos; must be\nmanaged by the user and it must outlive any sessions reliant on it"
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.Byte[],Microsoft.ML.OnnxRuntime.SessionOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.Byte[],Microsoft.ML.OnnxRuntime.SessionOptions)
      language: CSharp
      name:
        CSharp: InferenceSession(Byte[], SessionOptions)
        VB: InferenceSession(Byte(), SessionOptions)
      nameWithType:
        CSharp: InferenceSession.InferenceSession(Byte[], SessionOptions)
        VB: InferenceSession.InferenceSession(Byte(), SessionOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.Byte[], Microsoft.ML.OnnxRuntime.SessionOptions)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.Byte(), Microsoft.ML.OnnxRuntime.SessionOptions)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 134
      summary: "\nConstructs an InferenceSession from a model data in byte array, with some additional session options\n"
      example: []
      syntax:
        content:
          CSharp: public InferenceSession(byte[] model, SessionOptions options)
          VB: Public Sub New(model As Byte(), options As SessionOptions)
        parameters:
        - id: model
          type: System.Byte[]
          description: ''
        - id: options
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: ''
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.Byte[],Microsoft.ML.OnnxRuntime.SessionOptions,Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.#ctor(System.Byte[],Microsoft.ML.OnnxRuntime.SessionOptions,Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      language: CSharp
      name:
        CSharp: InferenceSession(Byte[], SessionOptions, PrePackedWeightsContainer)
        VB: InferenceSession(Byte(), SessionOptions, PrePackedWeightsContainer)
      nameWithType:
        CSharp: InferenceSession.InferenceSession(Byte[], SessionOptions, PrePackedWeightsContainer)
        VB: InferenceSession.InferenceSession(Byte(), SessionOptions, PrePackedWeightsContainer)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.Byte[], Microsoft.ML.OnnxRuntime.SessionOptions, Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession(System.Byte(), Microsoft.ML.OnnxRuntime.SessionOptions, Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 149
      summary: "\nConstructs an InferenceSession from a model data (in byte array) with some additional\nsession options and it will use the provided pre-packed weights container to store\nand share pre-packed buffers of shared initializers across sessions if any.\n"
      example: []
      syntax:
        content:
          CSharp: public InferenceSession(byte[] model, SessionOptions options, PrePackedWeightsContainer prepackedWeightsContainer)
          VB: Public Sub New(model As Byte(), options As SessionOptions, prepackedWeightsContainer As PrePackedWeightsContainer)
        parameters:
        - id: model
          type: System.Byte[]
          description: Model as byte array
        - id: options
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: Session Options
        - id: prepackedWeightsContainer
          type: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
          description: "Instance of PrepackedWeightsContainer. \nLifetime of &apos;prepackedWeightsContainer&apos; must be\nmanaged by the user and it must outlive any sessions reliant on it"
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.InputMetadata
      commentId: P:Microsoft.ML.OnnxRuntime.InferenceSession.InputMetadata
      language: CSharp
      name:
        CSharp: InputMetadata
        VB: InputMetadata
      nameWithType:
        CSharp: InferenceSession.InputMetadata
        VB: InferenceSession.InputMetadata
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.InputMetadata
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.InputMetadata
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: InputMetadata
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 157
      summary: "\nMeta data regarding the input nodes, keyed by input names\n"
      example: []
      syntax:
        content:
          CSharp: public IReadOnlyDictionary<string, NodeMetadata> InputMetadata { get; }
          VB: Public ReadOnly Property InputMetadata As IReadOnlyDictionary(Of String, NodeMetadata)
        parameters: []
        return:
          type: IReadOnlyDictionary{System.String,Microsoft.ML.OnnxRuntime.NodeMetadata}
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.InputMetadata*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.OutputMetadata
      commentId: P:Microsoft.ML.OnnxRuntime.InferenceSession.OutputMetadata
      language: CSharp
      name:
        CSharp: OutputMetadata
        VB: OutputMetadata
      nameWithType:
        CSharp: InferenceSession.OutputMetadata
        VB: InferenceSession.OutputMetadata
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.OutputMetadata
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.OutputMetadata
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: OutputMetadata
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 168
      summary: "\nMetadata regarding the output nodes, keyed by output names\n"
      example: []
      syntax:
        content:
          CSharp: public IReadOnlyDictionary<string, NodeMetadata> OutputMetadata { get; }
          VB: Public ReadOnly Property OutputMetadata As IReadOnlyDictionary(Of String, NodeMetadata)
        parameters: []
        return:
          type: IReadOnlyDictionary{System.String,Microsoft.ML.OnnxRuntime.NodeMetadata}
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.OutputMetadata*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.OverridableInitializerMetadata
      commentId: P:Microsoft.ML.OnnxRuntime.InferenceSession.OverridableInitializerMetadata
      language: CSharp
      name:
        CSharp: OverridableInitializerMetadata
        VB: OverridableInitializerMetadata
      nameWithType:
        CSharp: InferenceSession.OverridableInitializerMetadata
        VB: InferenceSession.OverridableInitializerMetadata
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.OverridableInitializerMetadata
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.OverridableInitializerMetadata
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: OverridableInitializerMetadata
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 179
      summary: "\nMetadata regarding the overridable initializers, keyed by node names\n"
      example: []
      syntax:
        content:
          CSharp: public IReadOnlyDictionary<string, NodeMetadata> OverridableInitializerMetadata { get; }
          VB: Public ReadOnly Property OverridableInitializerMetadata As IReadOnlyDictionary(Of String, NodeMetadata)
        parameters: []
        return:
          type: IReadOnlyDictionary{System.String,Microsoft.ML.OnnxRuntime.NodeMetadata}
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.OverridableInitializerMetadata*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue})
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue})
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<NamedOnnxValue>)
        VB: Run(IReadOnlyCollection(Of NamedOnnxValue))
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<NamedOnnxValue>)
        VB: InferenceSession.Run(IReadOnlyCollection(Of NamedOnnxValue))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<Microsoft.ML.OnnxRuntime.NamedOnnxValue>)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.NamedOnnxValue))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 192
      summary: "\nRuns the loaded model for the given inputs, and fetches all the outputs.\n"
      example: []
      syntax:
        content:
          CSharp: public IDisposableReadOnlyCollection<DisposableNamedOnnxValue> Run(IReadOnlyCollection<NamedOnnxValue> inputs)
          VB: Public Function Run(inputs As IReadOnlyCollection(Of NamedOnnxValue)) As IDisposableReadOnlyCollection(Of DisposableNamedOnnxValue)
        parameters:
        - id: inputs
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}
          description: specify a collection of <xref href="Microsoft.ML.OnnxRuntime.NamedOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        return:
          type: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue}
          description: Output Tensors in a Collection of NamedOnnxValue. User must dispose the output.
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.NamedOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{System.String})
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{System.String})
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<String>)
        VB: Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of String))
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<String>)
        VB: InferenceSession.Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of String))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<Microsoft.ML.OnnxRuntime.NamedOnnxValue>, IReadOnlyCollection<System.String>)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.NamedOnnxValue), IReadOnlyCollection(Of System.String))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 205
      summary: "\nRuns the loaded model for the given inputs, and fetches the outputs specified in <code data-dev-comment-type=\"paramref\" class=\"paramref\">outputNames</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public IDisposableReadOnlyCollection<DisposableNamedOnnxValue> Run(IReadOnlyCollection<NamedOnnxValue> inputs, IReadOnlyCollection<string> outputNames)
          VB: Public Function Run(inputs As IReadOnlyCollection(Of NamedOnnxValue), outputNames As IReadOnlyCollection(Of String)) As IDisposableReadOnlyCollection(Of DisposableNamedOnnxValue)
        parameters:
        - id: inputs
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.NamedOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the output names to fetch.
        return:
          type: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue}
          description: Output Tensors in a Collection of NamedOnnxValue. User must dispose the output.
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.NamedOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{System.String},Microsoft.ML.OnnxRuntime.RunOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{System.String},Microsoft.ML.OnnxRuntime.RunOptions)
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<String>, RunOptions)
        VB: Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of String), RunOptions)
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<String>, RunOptions)
        VB: InferenceSession.Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of String), RunOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<Microsoft.ML.OnnxRuntime.NamedOnnxValue>, IReadOnlyCollection<System.String>, Microsoft.ML.OnnxRuntime.RunOptions)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.NamedOnnxValue), IReadOnlyCollection(Of System.String), Microsoft.ML.OnnxRuntime.RunOptions)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 217
      summary: "\nRuns the loaded model for the given inputs, and fetches the specified outputs in <code data-dev-comment-type=\"paramref\" class=\"paramref\">outputNames</code>. Uses the given RunOptions for this run.\n"
      example: []
      syntax:
        content:
          CSharp: public IDisposableReadOnlyCollection<DisposableNamedOnnxValue> Run(IReadOnlyCollection<NamedOnnxValue> inputs, IReadOnlyCollection<string> outputNames, RunOptions options)
          VB: Public Function Run(inputs As IReadOnlyCollection(Of NamedOnnxValue), outputNames As IReadOnlyCollection(Of String), options As RunOptions) As IDisposableReadOnlyCollection(Of DisposableNamedOnnxValue)
        parameters:
        - id: inputs
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.NamedOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the output names to fetch.
        - id: options
          type: Microsoft.ML.OnnxRuntime.RunOptions
          description: ''
        return:
          type: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue}
          description: Output Tensors in a Collection of NamedOnnxValue. User must dispose the output.
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.NamedOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue})
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue})
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>)
        VB: Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue))
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>)
        VB: InferenceSession.Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<System.String>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue>)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of System.String), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 236
      summary: "\nRuns the loaded model for the given inputs, and fetches all the outputs.\n"
      example: []
      syntax:
        content:
          CSharp: public IDisposableReadOnlyCollection<DisposableNamedOnnxValue> Run(IReadOnlyCollection<string> inputNames, IReadOnlyCollection<FixedBufferOnnxValue> inputValues)
          VB: Public Function Run(inputNames As IReadOnlyCollection(Of String), inputValues As IReadOnlyCollection(Of FixedBufferOnnxValue)) As IDisposableReadOnlyCollection(Of DisposableNamedOnnxValue)
        parameters:
        - id: inputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the input names. Should match <code data-dev-comment-type="paramref" class="paramref">inputValues</code>.
        - id: inputValues
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        return:
          type: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue}
          description: Output Tensors in a Collection of NamedOnnxValue. User must dispose the output.
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{System.String})
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{System.String})
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<String>)
        VB: Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of String))
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<String>)
        VB: InferenceSession.Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of String))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<System.String>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue>, IReadOnlyCollection<System.String>)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of System.String), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue), IReadOnlyCollection(Of System.String))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 252
      summary: "\nRuns the loaded model for the given inputs, and fetches the outputs specified in <code data-dev-comment-type=\"paramref\" class=\"paramref\">outputNames</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public IDisposableReadOnlyCollection<DisposableNamedOnnxValue> Run(IReadOnlyCollection<string> inputNames, IReadOnlyCollection<FixedBufferOnnxValue> inputValues, IReadOnlyCollection<string> outputNames)
          VB: Public Function Run(inputNames As IReadOnlyCollection(Of String), inputValues As IReadOnlyCollection(Of FixedBufferOnnxValue), outputNames As IReadOnlyCollection(Of String)) As IDisposableReadOnlyCollection(Of DisposableNamedOnnxValue)
        parameters:
        - id: inputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the input names. Should match <code data-dev-comment-type="paramref" class="paramref">inputValues</code>.
        - id: inputValues
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the output names to fetch.
        return:
          type: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue}
          description: Output Tensors in a Collection of NamedOnnxValue. User must dispose the output.
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{System.String},Microsoft.ML.OnnxRuntime.RunOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{System.String},Microsoft.ML.OnnxRuntime.RunOptions)
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<String>, RunOptions)
        VB: Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of String), RunOptions)
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<String>, RunOptions)
        VB: InferenceSession.Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of String), RunOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<System.String>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue>, IReadOnlyCollection<System.String>, Microsoft.ML.OnnxRuntime.RunOptions)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of System.String), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue), IReadOnlyCollection(Of System.String), Microsoft.ML.OnnxRuntime.RunOptions)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 268
      summary: "\nRuns the loaded model for the given inputs, and fetches the specified outputs in <code data-dev-comment-type=\"paramref\" class=\"paramref\">outputNames</code>. Uses the given RunOptions for this run.\n"
      example: []
      syntax:
        content:
          CSharp: public IDisposableReadOnlyCollection<DisposableNamedOnnxValue> Run(IReadOnlyCollection<string> inputNames, IReadOnlyCollection<FixedBufferOnnxValue> inputValues, IReadOnlyCollection<string> outputNames, RunOptions options)
          VB: Public Function Run(inputNames As IReadOnlyCollection(Of String), inputValues As IReadOnlyCollection(Of FixedBufferOnnxValue), outputNames As IReadOnlyCollection(Of String), options As RunOptions) As IDisposableReadOnlyCollection(Of DisposableNamedOnnxValue)
        parameters:
        - id: inputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the input names. Should match <code data-dev-comment-type="paramref" class="paramref">inputValues</code>.
        - id: inputValues
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the output names to fetch.
        - id: options
          type: Microsoft.ML.OnnxRuntime.RunOptions
          description: ''
        return:
          type: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue}
          description: Output Tensors in a Collection of NamedOnnxValue. User must dispose the output.
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue})
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue})
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>)
        VB: Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue))
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>)
        VB: InferenceSession.Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<System.String>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue>, IReadOnlyCollection<System.String>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue>)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of System.String), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue), IReadOnlyCollection(Of System.String), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 300
      summary: "\nRuns the loaded model for the given inputs and outputs.\n\nOutputs need to be created with correct type and dimension to accept the fetched data.\n"
      example: []
      syntax:
        content:
          CSharp: public void Run(IReadOnlyCollection<string> inputNames, IReadOnlyCollection<FixedBufferOnnxValue> inputValues, IReadOnlyCollection<string> outputNames, IReadOnlyCollection<FixedBufferOnnxValue> outputValues)
          VB: Public Sub Run(inputNames As IReadOnlyCollection(Of String), inputValues As IReadOnlyCollection(Of FixedBufferOnnxValue), outputNames As IReadOnlyCollection(Of String), outputValues As IReadOnlyCollection(Of FixedBufferOnnxValue))
        parameters:
        - id: inputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the input names. Should match <code data-dev-comment-type="paramref" class="paramref">inputValues</code>.
        - id: inputValues
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the output names. Should match <code data-dev-comment-type="paramref" class="paramref">outputValues</code>.
        - id: outputValues
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the output values.
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},Microsoft.ML.OnnxRuntime.RunOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},Microsoft.ML.OnnxRuntime.RunOptions)
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, RunOptions)
        VB: Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), RunOptions)
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, RunOptions)
        VB: InferenceSession.Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), RunOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<System.String>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue>, IReadOnlyCollection<System.String>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue>, Microsoft.ML.OnnxRuntime.RunOptions)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of System.String), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue), IReadOnlyCollection(Of System.String), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue), Microsoft.ML.OnnxRuntime.RunOptions)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 319
      summary: "\nRuns the loaded model for the given inputs and outputs. Uses the given RunOptions for this run.\n\nOutputs need to be created with correct type and dimension to accept the fetched data.\n"
      example: []
      syntax:
        content:
          CSharp: public void Run(IReadOnlyCollection<string> inputNames, IReadOnlyCollection<FixedBufferOnnxValue> inputValues, IReadOnlyCollection<string> outputNames, IReadOnlyCollection<FixedBufferOnnxValue> outputValues, RunOptions options)
          VB: Public Sub Run(inputNames As IReadOnlyCollection(Of String), inputValues As IReadOnlyCollection(Of FixedBufferOnnxValue), outputNames As IReadOnlyCollection(Of String), outputValues As IReadOnlyCollection(Of FixedBufferOnnxValue), options As RunOptions)
        parameters:
        - id: inputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the input names. Should match <code data-dev-comment-type="paramref" class="paramref">inputValues</code>.
        - id: inputValues
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the output names. Should match <code data-dev-comment-type="paramref" class="paramref">outputValues</code>.
        - id: outputValues
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the output values.
        - id: options
          type: Microsoft.ML.OnnxRuntime.RunOptions
          description: ''
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue})
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue})
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<NamedOnnxValue>)
        VB: Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of NamedOnnxValue))
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<NamedOnnxValue>)
        VB: InferenceSession.Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of NamedOnnxValue))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<Microsoft.ML.OnnxRuntime.NamedOnnxValue>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.NamedOnnxValue>)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.NamedOnnxValue), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.NamedOnnxValue))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 365
      summary: "\nRuns the loaded model for the given inputs and outputs.\n\nOutputs need to be created with correct type and dimension to receive the fetched data.\n"
      example: []
      syntax:
        content:
          CSharp: public void Run(IReadOnlyCollection<NamedOnnxValue> inputs, IReadOnlyCollection<NamedOnnxValue> outputs)
          VB: Public Sub Run(inputs As IReadOnlyCollection(Of NamedOnnxValue), outputs As IReadOnlyCollection(Of NamedOnnxValue))
        parameters:
        - id: inputs
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.NamedOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputs
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.NamedOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the output values.
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.NamedOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},Microsoft.ML.OnnxRuntime.RunOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},Microsoft.ML.OnnxRuntime.RunOptions)
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<NamedOnnxValue>, RunOptions)
        VB: Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of NamedOnnxValue), RunOptions)
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<NamedOnnxValue>, RunOptions)
        VB: InferenceSession.Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of NamedOnnxValue), RunOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<Microsoft.ML.OnnxRuntime.NamedOnnxValue>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.NamedOnnxValue>, Microsoft.ML.OnnxRuntime.RunOptions)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.NamedOnnxValue), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.NamedOnnxValue), Microsoft.ML.OnnxRuntime.RunOptions)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 381
      summary: "\n\nRuns the loaded model for the given inputs and outputs. Uses the given RunOptions for this run.\n\nOutputs need to be created with correct type and dimension to receive the fetched data.\n"
      example: []
      syntax:
        content:
          CSharp: public void Run(IReadOnlyCollection<NamedOnnxValue> inputs, IReadOnlyCollection<NamedOnnxValue> outputs, RunOptions options)
          VB: Public Sub Run(inputs As IReadOnlyCollection(Of NamedOnnxValue), outputs As IReadOnlyCollection(Of NamedOnnxValue), options As RunOptions)
        parameters:
        - id: inputs
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.NamedOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputs
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.NamedOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the output values.
        - id: options
          type: Microsoft.ML.OnnxRuntime.RunOptions
          description: ''
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.NamedOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue})
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue})
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>)
        VB: Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue))
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>)
        VB: InferenceSession.Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<Microsoft.ML.OnnxRuntime.NamedOnnxValue>, IReadOnlyCollection<System.String>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue>)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.NamedOnnxValue), IReadOnlyCollection(Of System.String), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 415
      summary: "\nRuns the loaded model for the given inputs and outputs.\n\nOutputs need to be created with correct type and dimension to receive the fetched data.\n"
      example: []
      syntax:
        content:
          CSharp: public void Run(IReadOnlyCollection<NamedOnnxValue> inputs, IReadOnlyCollection<string> outputNames, IReadOnlyCollection<FixedBufferOnnxValue> outputValues)
          VB: Public Sub Run(inputs As IReadOnlyCollection(Of NamedOnnxValue), outputNames As IReadOnlyCollection(Of String), outputValues As IReadOnlyCollection(Of FixedBufferOnnxValue))
        parameters:
        - id: inputs
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.NamedOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the output names. Should match <code data-dev-comment-type="paramref" class="paramref">outputValues</code>.
        - id: outputValues
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the output values.
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.NamedOnnxValue: 
        Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},Microsoft.ML.OnnxRuntime.RunOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},Microsoft.ML.OnnxRuntime.RunOptions)
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, RunOptions)
        VB: Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), RunOptions)
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<NamedOnnxValue>, IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, RunOptions)
        VB: InferenceSession.Run(IReadOnlyCollection(Of NamedOnnxValue), IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), RunOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<Microsoft.ML.OnnxRuntime.NamedOnnxValue>, IReadOnlyCollection<System.String>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue>, Microsoft.ML.OnnxRuntime.RunOptions)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.NamedOnnxValue), IReadOnlyCollection(Of System.String), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue), Microsoft.ML.OnnxRuntime.RunOptions)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 432
      summary: "\nRuns the loaded model for the given inputs and outputs. Uses the given RunOptions for this run.\n\nOutputs need to be created with correct type and dimension to receive the fetched data.\n"
      example: []
      syntax:
        content:
          CSharp: public void Run(IReadOnlyCollection<NamedOnnxValue> inputs, IReadOnlyCollection<string> outputNames, IReadOnlyCollection<FixedBufferOnnxValue> outputValues, RunOptions options)
          VB: Public Sub Run(inputs As IReadOnlyCollection(Of NamedOnnxValue), outputNames As IReadOnlyCollection(Of String), outputValues As IReadOnlyCollection(Of FixedBufferOnnxValue), options As RunOptions)
        parameters:
        - id: inputs
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.NamedOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the output names. Should match <code data-dev-comment-type="paramref" class="paramref">outputValues</code>.
        - id: outputValues
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the output values.
        - id: options
          type: Microsoft.ML.OnnxRuntime.RunOptions
          description: ''
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.NamedOnnxValue: 
        Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue})
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue})
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<NamedOnnxValue>)
        VB: Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of NamedOnnxValue))
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<NamedOnnxValue>)
        VB: InferenceSession.Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of NamedOnnxValue))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<System.String>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.NamedOnnxValue>)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of System.String), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.NamedOnnxValue))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 475
      summary: "\n\nRuns the loaded model for the given inputs and outputs.\n\nOutputs need to be created with correct type and dimension to receive the fetched data.\n"
      example: []
      syntax:
        content:
          CSharp: public void Run(IReadOnlyCollection<string> inputNames, IReadOnlyCollection<FixedBufferOnnxValue> inputValues, IReadOnlyCollection<NamedOnnxValue> outputs)
          VB: Public Sub Run(inputNames As IReadOnlyCollection(Of String), inputValues As IReadOnlyCollection(Of FixedBufferOnnxValue), outputs As IReadOnlyCollection(Of NamedOnnxValue))
        parameters:
        - id: inputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the input names. Should match <code data-dev-comment-type="paramref" class="paramref">inputValues</code>.
        - id: inputValues
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputs
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.NamedOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the output values.
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue: 
        Microsoft.ML.OnnxRuntime.NamedOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},Microsoft.ML.OnnxRuntime.RunOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection{System.String},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue},IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue},Microsoft.ML.OnnxRuntime.RunOptions)
      language: CSharp
      name:
        CSharp: Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<NamedOnnxValue>, RunOptions)
        VB: Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of NamedOnnxValue), RunOptions)
      nameWithType:
        CSharp: InferenceSession.Run(IReadOnlyCollection<String>, IReadOnlyCollection<FixedBufferOnnxValue>, IReadOnlyCollection<NamedOnnxValue>, RunOptions)
        VB: InferenceSession.Run(IReadOnlyCollection(Of String), IReadOnlyCollection(Of FixedBufferOnnxValue), IReadOnlyCollection(Of NamedOnnxValue), RunOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection<System.String>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue>, IReadOnlyCollection<Microsoft.ML.OnnxRuntime.NamedOnnxValue>, Microsoft.ML.OnnxRuntime.RunOptions)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Run(IReadOnlyCollection(Of System.String), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue), IReadOnlyCollection(Of Microsoft.ML.OnnxRuntime.NamedOnnxValue), Microsoft.ML.OnnxRuntime.RunOptions)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 493
      summary: "\n\nRuns the loaded model for the given inputs and outputs. Uses the given RunOptions for this run.\n\nOutputs need to be created with correct type and dimension to receive the fetched data.\n"
      example: []
      syntax:
        content:
          CSharp: public void Run(IReadOnlyCollection<string> inputNames, IReadOnlyCollection<FixedBufferOnnxValue> inputValues, IReadOnlyCollection<NamedOnnxValue> outputs, RunOptions options)
          VB: Public Sub Run(inputNames As IReadOnlyCollection(Of String), inputValues As IReadOnlyCollection(Of FixedBufferOnnxValue), outputs As IReadOnlyCollection(Of NamedOnnxValue), options As RunOptions)
        parameters:
        - id: inputNames
          type: IReadOnlyCollection{System.String}
          description: Specify a collection of string that indicates the input names. Should match <code data-dev-comment-type="paramref" class="paramref">inputValues</code>.
        - id: inputValues
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the input values.
        - id: outputs
          type: IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}
          description: Specify a collection of <xref href="Microsoft.ML.OnnxRuntime.NamedOnnxValue" data-throw-if-not-resolved="false"></xref> that indicates the output values.
        - id: options
          type: Microsoft.ML.OnnxRuntime.RunOptions
          description: ''
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue: 
        Microsoft.ML.OnnxRuntime.NamedOnnxValue: 
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.CreateIoBinding
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.CreateIoBinding
      language: CSharp
      name:
        CSharp: CreateIoBinding()
        VB: CreateIoBinding()
      nameWithType:
        CSharp: InferenceSession.CreateIoBinding()
        VB: InferenceSession.CreateIoBinding()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.CreateIoBinding()
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.CreateIoBinding()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateIoBinding
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 532
      summary: "\nCreate OrtIoBinding instance to bind pre-allocated buffers\nto input/output\n"
      example: []
      syntax:
        content:
          CSharp: public OrtIoBinding CreateIoBinding()
          VB: Public Function CreateIoBinding As OrtIoBinding
        return:
          type: Microsoft.ML.OnnxRuntime.OrtIoBinding
          description: A new instance of OrtIoBinding
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.CreateIoBinding*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBinding(Microsoft.ML.OnnxRuntime.RunOptions,Microsoft.ML.OnnxRuntime.OrtIoBinding)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBinding(Microsoft.ML.OnnxRuntime.RunOptions,Microsoft.ML.OnnxRuntime.OrtIoBinding)
      language: CSharp
      name:
        CSharp: RunWithBinding(RunOptions, OrtIoBinding)
        VB: RunWithBinding(RunOptions, OrtIoBinding)
      nameWithType:
        CSharp: InferenceSession.RunWithBinding(RunOptions, OrtIoBinding)
        VB: InferenceSession.RunWithBinding(RunOptions, OrtIoBinding)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBinding(Microsoft.ML.OnnxRuntime.RunOptions, Microsoft.ML.OnnxRuntime.OrtIoBinding)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBinding(Microsoft.ML.OnnxRuntime.RunOptions, Microsoft.ML.OnnxRuntime.OrtIoBinding)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RunWithBinding
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 547
      summary: "\nThis method runs inference on the OrtIoBinding instance\nThe method does not return anything. This is a lightweight version of \nRunWithBindingAndNames(). When you bind pre-allocated buffers to the output values\nyou may not want to fetch the outputs since you already have access to them so you can spare\nthe expense of fetching them and pairing with names.\nYou can still fetch the outputs by calling OrtIOBinding.GetOutputValues()\n"
      example: []
      syntax:
        content:
          CSharp: public void RunWithBinding(RunOptions runOptions, OrtIoBinding ioBinding)
          VB: Public Sub RunWithBinding(runOptions As RunOptions, ioBinding As OrtIoBinding)
        parameters:
        - id: runOptions
          type: Microsoft.ML.OnnxRuntime.RunOptions
          description: runOptions
        - id: ioBinding
          type: Microsoft.ML.OnnxRuntime.OrtIoBinding
          description: ioBinding instance to use
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBinding*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBindingAndNames(Microsoft.ML.OnnxRuntime.RunOptions,Microsoft.ML.OnnxRuntime.OrtIoBinding,System.String[])
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBindingAndNames(Microsoft.ML.OnnxRuntime.RunOptions,Microsoft.ML.OnnxRuntime.OrtIoBinding,System.String[])
      language: CSharp
      name:
        CSharp: RunWithBindingAndNames(RunOptions, OrtIoBinding, String[])
        VB: RunWithBindingAndNames(RunOptions, OrtIoBinding, String())
      nameWithType:
        CSharp: InferenceSession.RunWithBindingAndNames(RunOptions, OrtIoBinding, String[])
        VB: InferenceSession.RunWithBindingAndNames(RunOptions, OrtIoBinding, String())
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBindingAndNames(Microsoft.ML.OnnxRuntime.RunOptions, Microsoft.ML.OnnxRuntime.OrtIoBinding, System.String[])
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBindingAndNames(Microsoft.ML.OnnxRuntime.RunOptions, Microsoft.ML.OnnxRuntime.OrtIoBinding, System.String())
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RunWithBindingAndNames
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 565
      summary: "\nThis method return a collection of DisposableNamedOnnxValue as in other interfaces\nQuery names from OrtIoBinding object and pair then with the array of OrtValues returned\nfrom OrtIoBinding.GetOutputValues()\n\n"
      example: []
      syntax:
        content:
          CSharp: public IDisposableReadOnlyCollection<DisposableNamedOnnxValue> RunWithBindingAndNames(RunOptions runOptions, OrtIoBinding ioBinding, string[] names = null)
          VB: Public Function RunWithBindingAndNames(runOptions As RunOptions, ioBinding As OrtIoBinding, names As String() = Nothing) As IDisposableReadOnlyCollection(Of DisposableNamedOnnxValue)
        parameters:
        - id: runOptions
          type: Microsoft.ML.OnnxRuntime.RunOptions
          description: RunOptions
        - id: ioBinding
          type: Microsoft.ML.OnnxRuntime.OrtIoBinding
          description: OrtIoBinding instance with bindings
        - id: names
          type: System.String[]
          description: >-
            optional parameter. If you already know the names of the outputs you can save a native

            call to retrieve output names. They will be paired with the returned OrtValues and combined into DisposbleNamedOnnxValues.

            Otherwise, the method will retrieve output names from the OrtIoBinding instance.

            It is an error if you supply a different number of names than the returned outputs
        return:
          type: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue}
          description: A disposable collection of DisposableNamedOnnxValue that encapsulate output OrtValues
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBindingAndNames*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.EndProfiling
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.EndProfiling
      language: CSharp
      name:
        CSharp: EndProfiling()
        VB: EndProfiling()
      nameWithType:
        CSharp: InferenceSession.EndProfiling()
        VB: InferenceSession.EndProfiling()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.EndProfiling()
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.EndProfiling()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: EndProfiling
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 605
      summary: "\nEnds profiling for the session.\n"
      example: []
      syntax:
        content:
          CSharp: public string EndProfiling()
          VB: Public Function EndProfiling As String
        return:
          type: System.String
          description: Returns the profile file name.
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.EndProfiling*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.ModelMetadata
      commentId: P:Microsoft.ML.OnnxRuntime.InferenceSession.ModelMetadata
      language: CSharp
      name:
        CSharp: ModelMetadata
        VB: ModelMetadata
      nameWithType:
        CSharp: InferenceSession.ModelMetadata
        VB: InferenceSession.ModelMetadata
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.ModelMetadata
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.ModelMetadata
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ModelMetadata
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 736
      summary: "\nThis property queries model metadata, constructs\nan instance of ModelMetadata and caches it\n"
      example: []
      syntax:
        content:
          CSharp: public ModelMetadata ModelMetadata { get; }
          VB: Public ReadOnly Property ModelMetadata As ModelMetadata
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.ModelMetadata
          description: Instance of ModelMetdata
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.ModelMetadata*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.ProfilingStartTimeNs
      commentId: P:Microsoft.ML.OnnxRuntime.InferenceSession.ProfilingStartTimeNs
      language: CSharp
      name:
        CSharp: ProfilingStartTimeNs
        VB: ProfilingStartTimeNs
      nameWithType:
        CSharp: InferenceSession.ProfilingStartTimeNs
        VB: InferenceSession.ProfilingStartTimeNs
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.ProfilingStartTimeNs
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.ProfilingStartTimeNs
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ProfilingStartTimeNs
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 755
      summary: "\nReturn the nanoseconds of profiling&apos;s start time\nOn some platforms, this timer may not be as precise as nanoseconds\nFor instance, on Windows and MacOS, the precision will be ~100ns\n"
      example: []
      syntax:
        content:
          CSharp: public ulong ProfilingStartTimeNs { get; }
          VB: Public ReadOnly Property ProfilingStartTimeNs As ULong
        parameters: []
        return:
          type: System.UInt64
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.ProfilingStartTimeNs*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Finalize
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Finalize
      language: CSharp
      name:
        CSharp: Finalize()
        VB: Finalize()
      nameWithType:
        CSharp: InferenceSession.Finalize()
        VB: InferenceSession.Finalize()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Finalize()
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Finalize()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Finalize
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1052
      summary: "\nFinalizer. to cleanup session in case it runs\nand the user forgets to Dispose() of the session\n"
      example: []
      syntax:
        content:
          CSharp: protected void Finalize()
          VB: Protected Sub Finalize
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Finalize*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: InferenceSession.Dispose()
        VB: InferenceSession.Dispose()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose()
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Dispose
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1060
      summary: "\nIDisposable implementation\n"
      example: []
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose(System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.InferenceSession.Dispose(System.Boolean)
      language: CSharp
      name:
        CSharp: Dispose(Boolean)
        VB: Dispose(Boolean)
      nameWithType:
        CSharp: InferenceSession.Dispose(Boolean)
        VB: InferenceSession.Dispose(Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose(System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose(System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Dispose
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1070
      summary: "\nIDisposable implementation\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Dispose(bool disposing)
          VB: Protected Overridable Sub Dispose(disposing As Boolean)
        parameters:
        - id: disposing
          type: System.Boolean
          description: true if invoked from Dispose() method
      overload: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: Microsoft.ML.OnnxRuntime.NodeMetadata
    commentId: T:Microsoft.ML.OnnxRuntime.NodeMetadata
    language: CSharp
    name:
      CSharp: NodeMetadata
      VB: NodeMetadata
    nameWithType:
      CSharp: NodeMetadata
      VB: NodeMetadata
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.NodeMetadata
      VB: Microsoft.ML.OnnxRuntime.NodeMetadata
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: NodeMetadata
      path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
      startLine: 1109
    summary: "\nResembles type and shape information of session-graph nodes, used for communicating the shape/type of input/output nodes\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NodeMetadata : object'
        VB: >-
          Public Class NodeMetadata

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.NodeMetadata.OnnxValueType
      commentId: P:Microsoft.ML.OnnxRuntime.NodeMetadata.OnnxValueType
      language: CSharp
      name:
        CSharp: OnnxValueType
        VB: OnnxValueType
      nameWithType:
        CSharp: NodeMetadata.OnnxValueType
        VB: NodeMetadata.OnnxValueType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NodeMetadata.OnnxValueType
        VB: Microsoft.ML.OnnxRuntime.NodeMetadata.OnnxValueType
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: OnnxValueType
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1123
      summary: "\nType value of the node\n"
      example: []
      syntax:
        content:
          CSharp: public OnnxValueType OnnxValueType { get; }
          VB: Public ReadOnly Property OnnxValueType As OnnxValueType
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.OnnxValueType
          description: A value of OnnxValueType enum
      overload: Microsoft.ML.OnnxRuntime.NodeMetadata.OnnxValueType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.NodeMetadata.Dimensions
      commentId: P:Microsoft.ML.OnnxRuntime.NodeMetadata.Dimensions
      language: CSharp
      name:
        CSharp: Dimensions
        VB: Dimensions
      nameWithType:
        CSharp: NodeMetadata.Dimensions
        VB: NodeMetadata.Dimensions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NodeMetadata.Dimensions
        VB: Microsoft.ML.OnnxRuntime.NodeMetadata.Dimensions
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Dimensions
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1129
      summary: "\nShape\n"
      example: []
      syntax:
        content:
          CSharp: public int[] Dimensions { get; }
          VB: Public ReadOnly Property Dimensions As Integer()
        parameters: []
        return:
          type: System.Int32[]
          description: Array of dimensions
      overload: Microsoft.ML.OnnxRuntime.NodeMetadata.Dimensions*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.NodeMetadata.SymbolicDimensions
      commentId: P:Microsoft.ML.OnnxRuntime.NodeMetadata.SymbolicDimensions
      language: CSharp
      name:
        CSharp: SymbolicDimensions
        VB: SymbolicDimensions
      nameWithType:
        CSharp: NodeMetadata.SymbolicDimensions
        VB: NodeMetadata.SymbolicDimensions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NodeMetadata.SymbolicDimensions
        VB: Microsoft.ML.OnnxRuntime.NodeMetadata.SymbolicDimensions
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SymbolicDimensions
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1135
      summary: "\nSymbolic dimensions\n"
      example: []
      syntax:
        content:
          CSharp: public string[] SymbolicDimensions { get; }
          VB: Public ReadOnly Property SymbolicDimensions As String()
        parameters: []
        return:
          type: System.String[]
          description: Array of symbolic dimensions if present.
      overload: Microsoft.ML.OnnxRuntime.NodeMetadata.SymbolicDimensions*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.NodeMetadata.ElementType
      commentId: P:Microsoft.ML.OnnxRuntime.NodeMetadata.ElementType
      language: CSharp
      name:
        CSharp: ElementType
        VB: ElementType
      nameWithType:
        CSharp: NodeMetadata.ElementType
        VB: NodeMetadata.ElementType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NodeMetadata.ElementType
        VB: Microsoft.ML.OnnxRuntime.NodeMetadata.ElementType
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ElementType
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1141
      summary: "\n.NET type that corresponds to this Node.\n"
      example: []
      syntax:
        content:
          CSharp: public System.Type ElementType { get; }
          VB: Public ReadOnly Property ElementType As System.Type
        parameters: []
        return:
          type: System.Type
          description: System.Type
      overload: Microsoft.ML.OnnxRuntime.NodeMetadata.ElementType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.NodeMetadata.IsTensor
      commentId: P:Microsoft.ML.OnnxRuntime.NodeMetadata.IsTensor
      language: CSharp
      name:
        CSharp: IsTensor
        VB: IsTensor
      nameWithType:
        CSharp: NodeMetadata.IsTensor
        VB: NodeMetadata.IsTensor
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NodeMetadata.IsTensor
        VB: Microsoft.ML.OnnxRuntime.NodeMetadata.IsTensor
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsTensor
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1147
      summary: "\nWhether it is a Tensor\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsTensor { get; }
          VB: Public ReadOnly Property IsTensor As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: currently always returns true
      overload: Microsoft.ML.OnnxRuntime.NodeMetadata.IsTensor*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.ML.OnnxRuntime.ModelMetadata
    commentId: T:Microsoft.ML.OnnxRuntime.ModelMetadata
    language: CSharp
    name:
      CSharp: ModelMetadata
      VB: ModelMetadata
    nameWithType:
      CSharp: ModelMetadata
      VB: ModelMetadata
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.ModelMetadata
      VB: Microsoft.ML.OnnxRuntime.ModelMetadata
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: ModelMetadata
      path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
      startLine: 1161
    summary: "\nA class that queries and caches model metadata and exposes\nit as properties\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ModelMetadata : object'
        VB: >-
          Public Class ModelMetadata

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.ModelMetadata.ProducerName
      commentId: P:Microsoft.ML.OnnxRuntime.ModelMetadata.ProducerName
      language: CSharp
      name:
        CSharp: ProducerName
        VB: ProducerName
      nameWithType:
        CSharp: ModelMetadata.ProducerName
        VB: ModelMetadata.ProducerName
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.ModelMetadata.ProducerName
        VB: Microsoft.ML.OnnxRuntime.ModelMetadata.ProducerName
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ProducerName
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1279
      summary: "\nProducer name string\n"
      example: []
      syntax:
        content:
          CSharp: public string ProducerName { get; }
          VB: Public ReadOnly Property ProducerName As String
        parameters: []
        return:
          type: System.String
          description: producer name string
      overload: Microsoft.ML.OnnxRuntime.ModelMetadata.ProducerName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphName
      commentId: P:Microsoft.ML.OnnxRuntime.ModelMetadata.GraphName
      language: CSharp
      name:
        CSharp: GraphName
        VB: GraphName
      nameWithType:
        CSharp: ModelMetadata.GraphName
        VB: ModelMetadata.GraphName
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphName
        VB: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphName
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GraphName
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1291
      summary: "\nGraph name for this model\n"
      example: []
      syntax:
        content:
          CSharp: public string GraphName { get; }
          VB: Public ReadOnly Property GraphName As String
        parameters: []
        return:
          type: System.String
          description: graph name string
      overload: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.ModelMetadata.Domain
      commentId: P:Microsoft.ML.OnnxRuntime.ModelMetadata.Domain
      language: CSharp
      name:
        CSharp: Domain
        VB: Domain
      nameWithType:
        CSharp: ModelMetadata.Domain
        VB: ModelMetadata.Domain
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.ModelMetadata.Domain
        VB: Microsoft.ML.OnnxRuntime.ModelMetadata.Domain
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Domain
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1303
      summary: "\nDomain for this model\n"
      example: []
      syntax:
        content:
          CSharp: public string Domain { get; }
          VB: Public ReadOnly Property Domain As String
        parameters: []
        return:
          type: System.String
          description: domain name string
      overload: Microsoft.ML.OnnxRuntime.ModelMetadata.Domain*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.ModelMetadata.Description
      commentId: P:Microsoft.ML.OnnxRuntime.ModelMetadata.Description
      language: CSharp
      name:
        CSharp: Description
        VB: Description
      nameWithType:
        CSharp: ModelMetadata.Description
        VB: ModelMetadata.Description
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.ModelMetadata.Description
        VB: Microsoft.ML.OnnxRuntime.ModelMetadata.Description
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Description
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1315
      summary: "\nUnstructured model description\n"
      example: []
      syntax:
        content:
          CSharp: public string Description { get; }
          VB: Public ReadOnly Property Description As String
        parameters: []
        return:
          type: System.String
          description: description string
      overload: Microsoft.ML.OnnxRuntime.ModelMetadata.Description*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphDescription
      commentId: P:Microsoft.ML.OnnxRuntime.ModelMetadata.GraphDescription
      language: CSharp
      name:
        CSharp: GraphDescription
        VB: GraphDescription
      nameWithType:
        CSharp: ModelMetadata.GraphDescription
        VB: ModelMetadata.GraphDescription
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphDescription
        VB: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphDescription
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GraphDescription
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1327
      summary: "\nUnstructured graph description\n"
      example: []
      syntax:
        content:
          CSharp: public string GraphDescription { get; }
          VB: Public ReadOnly Property GraphDescription As String
        parameters: []
        return:
          type: System.String
          description: description string
      overload: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphDescription*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.ModelMetadata.Version
      commentId: P:Microsoft.ML.OnnxRuntime.ModelMetadata.Version
      language: CSharp
      name:
        CSharp: Version
        VB: Version
      nameWithType:
        CSharp: ModelMetadata.Version
        VB: ModelMetadata.Version
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.ModelMetadata.Version
        VB: Microsoft.ML.OnnxRuntime.ModelMetadata.Version
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Version
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1339
      summary: "\nVersion number\n"
      example: []
      syntax:
        content:
          CSharp: public long Version { get; }
          VB: Public ReadOnly Property Version As Long
        parameters: []
        return:
          type: System.Int64
          description: long version integer
      overload: Microsoft.ML.OnnxRuntime.ModelMetadata.Version*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.ModelMetadata.CustomMetadataMap
      commentId: P:Microsoft.ML.OnnxRuntime.ModelMetadata.CustomMetadataMap
      language: CSharp
      name:
        CSharp: CustomMetadataMap
        VB: CustomMetadataMap
      nameWithType:
        CSharp: ModelMetadata.CustomMetadataMap
        VB: ModelMetadata.CustomMetadataMap
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.ModelMetadata.CustomMetadataMap
        VB: Microsoft.ML.OnnxRuntime.ModelMetadata.CustomMetadataMap
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CustomMetadataMap
        path: ../src/Microsoft.ML.OnnxRuntime/InferenceSession.shared.cs
        startLine: 1351
      syntax:
        content:
          CSharp: public Dictionary<string, string> CustomMetadataMap { get; }
          VB: Public ReadOnly Property CustomMetadataMap As Dictionary(Of String, String)
        parameters: []
        return:
          type: Dictionary{System.String,System.String}
      overload: Microsoft.ML.OnnxRuntime.ModelMetadata.CustomMetadataMap*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue
    commentId: T:Microsoft.ML.OnnxRuntime.NamedOnnxValue
    language: CSharp
    name:
      CSharp: NamedOnnxValue
      VB: NamedOnnxValue
    nameWithType:
      CSharp: NamedOnnxValue
      VB: NamedOnnxValue
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.NamedOnnxValue
      VB: Microsoft.ML.OnnxRuntime.NamedOnnxValue
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: NamedOnnxValue
      path: ../src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
      startLine: 15
    syntax:
      content:
        CSharp: 'public class NamedOnnxValue : object'
        VB: >-
          Public Class NamedOnnxValue

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue._value
      commentId: F:Microsoft.ML.OnnxRuntime.NamedOnnxValue._value
      language: CSharp
      name:
        CSharp: _value
        VB: _value
      nameWithType:
        CSharp: NamedOnnxValue._value
        VB: NamedOnnxValue._value
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NamedOnnxValue._value
        VB: Microsoft.ML.OnnxRuntime.NamedOnnxValue._value
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: _value
        path: ../src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
        startLine: 20
      summary: "\nManaged Tensor, Dictionary or IList\n"
      example: []
      syntax:
        content:
          CSharp: protected Object _value
          VB: Protected _value As Object
        return:
          type: Object
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue._name
      commentId: F:Microsoft.ML.OnnxRuntime.NamedOnnxValue._name
      language: CSharp
      name:
        CSharp: _name
        VB: _name
      nameWithType:
        CSharp: NamedOnnxValue._name
        VB: NamedOnnxValue._name
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NamedOnnxValue._name
        VB: Microsoft.ML.OnnxRuntime.NamedOnnxValue._name
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: _name
        path: ../src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
        startLine: 24
      summary: "\nName of the instance, model input/output\n"
      example: []
      syntax:
        content:
          CSharp: protected string _name
          VB: Protected _name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.#ctor(System.String,Object)
      commentId: M:Microsoft.ML.OnnxRuntime.NamedOnnxValue.#ctor(System.String,Object)
      language: CSharp
      name:
        CSharp: NamedOnnxValue(String, Object)
        VB: NamedOnnxValue(String, Object)
      nameWithType:
        CSharp: NamedOnnxValue.NamedOnnxValue(String, Object)
        VB: NamedOnnxValue.NamedOnnxValue(String, Object)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NamedOnnxValue.NamedOnnxValue(System.String, Object)
        VB: Microsoft.ML.OnnxRuntime.NamedOnnxValue.NamedOnnxValue(System.String, Object)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
        startLine: 33
      summary: "\nConstructs an instance of NamedOnnxValue and represents\na model input to an inference session. It also represents a modle output\nwhen serves as a base for DisposablenamedOnnxvalue\n"
      example: []
      syntax:
        content:
          CSharp: protected NamedOnnxValue(string name, Object value)
          VB: Protected Sub New(name As String, value As Object)
        parameters:
        - id: name
          type: System.String
          description: input/output name
        - id: value
          type: Object
          description: Object that may be a tensor, Dictionary, IList
      overload: Microsoft.ML.OnnxRuntime.NamedOnnxValue.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
      commentId: M:Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
      language: CSharp
      name:
        CSharp: CreateFromTensor<T>(String, Tensor<T>)
        VB: CreateFromTensor(Of T)(String, Tensor(Of T))
      nameWithType:
        CSharp: NamedOnnxValue.CreateFromTensor<T>(String, Tensor<T>)
        VB: NamedOnnxValue.CreateFromTensor(Of T)(String, Tensor(Of T))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor<T>(System.String, Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>)
        VB: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor(Of T)(System.String, Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateFromTensor
        path: ../src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
        startLine: 47
      summary: "\nThis is a factory method that instantiates NamedOnnxValue\nand associated name with an instance of a Tensor<code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code>\n"
      example: []
      syntax:
        content:
          CSharp: public static NamedOnnxValue CreateFromTensor<T>(string name, Tensor<T> value)
          VB: Public Shared Function CreateFromTensor(Of T)(name As String, value As Tensor(Of T)) As NamedOnnxValue
        parameters:
        - id: name
          type: System.String
          description: name
        - id: value
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: Tensor<code data-dev-comment-type="typeparamref" class="typeparamref">T</code>
        typeParameters:
        - id: T
          description: ''
        return:
          type: Microsoft.ML.OnnxRuntime.NamedOnnxValue
          description: ''
      overload: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
      commentId: P:Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: NamedOnnxValue.Name
        VB: NamedOnnxValue.Name
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
        VB: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Name
        path: ../src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
        startLine: 56
      summary: "\nExposes the name of the of the model input/output\n"
      example: []
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
          description: name string
      overload: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
      commentId: P:Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: NamedOnnxValue.Value
        VB: NamedOnnxValue.Value
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
        VB: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Value
        path: ../src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
        startLine: 61
      summary: "\nExposes the underlying managed object\n"
      example: []
      syntax:
        content:
          CSharp: public Object Value { get; set; }
          VB: Public Property Value As Object
        parameters: []
        return:
          type: Object
          description: object
      overload: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor``1
      commentId: M:Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor``1
      language: CSharp
      name:
        CSharp: AsTensor<T>()
        VB: AsTensor(Of T)()
      nameWithType:
        CSharp: NamedOnnxValue.AsTensor<T>()
        VB: NamedOnnxValue.AsTensor(Of T)()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor<T>()
        VB: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor(Of T)()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AsTensor
        path: ../src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
        startLine: 68
      summary: "\nTry-get value as a Tensor&lt;T>.\n"
      example: []
      syntax:
        content:
          CSharp: public Tensor<T> AsTensor<T>()
          VB: Public Function AsTensor(Of T) As Tensor(Of T)
        typeParameters:
        - id: T
          description: Type
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: Tensor object if contained value is a Tensor. Null otherwise
      overload: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable``1
      commentId: M:Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable``1
      language: CSharp
      name:
        CSharp: AsEnumerable<T>()
        VB: AsEnumerable(Of T)()
      nameWithType:
        CSharp: NamedOnnxValue.AsEnumerable<T>()
        VB: NamedOnnxValue.AsEnumerable(Of T)()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable<T>()
        VB: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable(Of T)()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AsEnumerable
        path: ../src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
        startLine: 78
      summary: "\nTry-get value as an Enumerable&lt;T>.\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<T> AsEnumerable<T>()
          VB: Public Function AsEnumerable(Of T) As IEnumerable(Of T)
        typeParameters:
        - id: T
          description: Type
        return:
          type: IEnumerable{{T}}
          description: Enumerable object if contained value is a Enumerable. Null otherwise
      overload: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary``2
      commentId: M:Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary``2
      language: CSharp
      name:
        CSharp: AsDictionary<K, V>()
        VB: AsDictionary(Of K, V)()
      nameWithType:
        CSharp: NamedOnnxValue.AsDictionary<K, V>()
        VB: NamedOnnxValue.AsDictionary(Of K, V)()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary<K, V>()
        VB: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary(Of K, V)()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AsDictionary
        path: ../src/Microsoft.ML.OnnxRuntime/NamedOnnxValue.shared.cs
        startLine: 90
      summary: "\nTry-get value as an Dictionary&lt;K,V>.\n"
      example: []
      syntax:
        content:
          CSharp: public IDictionary<K, V> AsDictionary<K, V>()
          VB: Public Function AsDictionary(Of K, V) As IDictionary(Of K, V)
        typeParameters:
        - id: K
          description: Key type
        - id: V
          description: Value type
        return:
          type: IDictionary{{K},{V}}
          description: Dictionary object if contained value is a Dictionary. Null otherwise
      overload: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.ML.OnnxRuntime.OrtApiBase
    commentId: T:Microsoft.ML.OnnxRuntime.OrtApiBase
    language: CSharp
    name:
      CSharp: OrtApiBase
      VB: OrtApiBase
    nameWithType:
      CSharp: OrtApiBase
      VB: OrtApiBase
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtApiBase
      VB: Microsoft.ML.OnnxRuntime.OrtApiBase
    type: Struct
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtApiBase
      path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
      startLine: 8
    syntax:
      content:
        CSharp: public struct OrtApiBase
        VB: Public Structure OrtApiBase
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtApiBase.GetApi
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApiBase.GetApi
      language: CSharp
      name:
        CSharp: GetApi
        VB: GetApi
      nameWithType:
        CSharp: OrtApiBase.GetApi
        VB: OrtApiBase.GetApi
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApiBase.GetApi
        VB: Microsoft.ML.OnnxRuntime.OrtApiBase.GetApi
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetApi
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 11
      syntax:
        content:
          CSharp: public IntPtr GetApi
          VB: Public GetApi As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApiBase.GetVersionString
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApiBase.GetVersionString
      language: CSharp
      name:
        CSharp: GetVersionString
        VB: GetVersionString
      nameWithType:
        CSharp: OrtApiBase.GetVersionString
        VB: OrtApiBase.GetVersionString
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApiBase.GetVersionString
        VB: Microsoft.ML.OnnxRuntime.OrtApiBase.GetVersionString
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetVersionString
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 12
      syntax:
        content:
          CSharp: public IntPtr GetVersionString
          VB: Public GetVersionString As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.ML.OnnxRuntime.OrtApi
    commentId: T:Microsoft.ML.OnnxRuntime.OrtApi
    language: CSharp
    name:
      CSharp: OrtApi
      VB: OrtApi
    nameWithType:
      CSharp: OrtApi
      VB: OrtApi
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtApi
      VB: Microsoft.ML.OnnxRuntime.OrtApi
    type: Struct
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtApi
      path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
      startLine: 17
    syntax:
      content:
        CSharp: public struct OrtApi
        VB: Public Structure OrtApi
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateStatus
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateStatus
      language: CSharp
      name:
        CSharp: CreateStatus
        VB: CreateStatus
      nameWithType:
        CSharp: OrtApi.CreateStatus
        VB: OrtApi.CreateStatus
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateStatus
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateStatus
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateStatus
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 20
      syntax:
        content:
          CSharp: public IntPtr CreateStatus
          VB: Public CreateStatus As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetErrorCode
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetErrorCode
      language: CSharp
      name:
        CSharp: GetErrorCode
        VB: GetErrorCode
      nameWithType:
        CSharp: OrtApi.GetErrorCode
        VB: OrtApi.GetErrorCode
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetErrorCode
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetErrorCode
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetErrorCode
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 21
      syntax:
        content:
          CSharp: public IntPtr GetErrorCode
          VB: Public GetErrorCode As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetErrorMessage
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetErrorMessage
      language: CSharp
      name:
        CSharp: GetErrorMessage
        VB: GetErrorMessage
      nameWithType:
        CSharp: OrtApi.GetErrorMessage
        VB: OrtApi.GetErrorMessage
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetErrorMessage
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetErrorMessage
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetErrorMessage
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 22
      syntax:
        content:
          CSharp: public IntPtr GetErrorMessage
          VB: Public GetErrorMessage As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnv
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateEnv
      language: CSharp
      name:
        CSharp: CreateEnv
        VB: CreateEnv
      nameWithType:
        CSharp: OrtApi.CreateEnv
        VB: OrtApi.CreateEnv
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnv
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnv
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateEnv
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 23
      syntax:
        content:
          CSharp: public IntPtr CreateEnv
          VB: Public CreateEnv As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithCustomLogger
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithCustomLogger
      language: CSharp
      name:
        CSharp: CreateEnvWithCustomLogger
        VB: CreateEnvWithCustomLogger
      nameWithType:
        CSharp: OrtApi.CreateEnvWithCustomLogger
        VB: OrtApi.CreateEnvWithCustomLogger
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithCustomLogger
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithCustomLogger
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateEnvWithCustomLogger
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 24
      syntax:
        content:
          CSharp: public IntPtr CreateEnvWithCustomLogger
          VB: Public CreateEnvWithCustomLogger As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.EnableTelemetryEvents
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.EnableTelemetryEvents
      language: CSharp
      name:
        CSharp: EnableTelemetryEvents
        VB: EnableTelemetryEvents
      nameWithType:
        CSharp: OrtApi.EnableTelemetryEvents
        VB: OrtApi.EnableTelemetryEvents
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.EnableTelemetryEvents
        VB: Microsoft.ML.OnnxRuntime.OrtApi.EnableTelemetryEvents
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: EnableTelemetryEvents
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 25
      syntax:
        content:
          CSharp: public IntPtr EnableTelemetryEvents
          VB: Public EnableTelemetryEvents As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.DisableTelemetryEvents
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.DisableTelemetryEvents
      language: CSharp
      name:
        CSharp: DisableTelemetryEvents
        VB: DisableTelemetryEvents
      nameWithType:
        CSharp: OrtApi.DisableTelemetryEvents
        VB: OrtApi.DisableTelemetryEvents
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.DisableTelemetryEvents
        VB: Microsoft.ML.OnnxRuntime.OrtApi.DisableTelemetryEvents
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: DisableTelemetryEvents
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 26
      syntax:
        content:
          CSharp: public IntPtr DisableTelemetryEvents
          VB: Public DisableTelemetryEvents As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateSession
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateSession
      language: CSharp
      name:
        CSharp: CreateSession
        VB: CreateSession
      nameWithType:
        CSharp: OrtApi.CreateSession
        VB: OrtApi.CreateSession
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateSession
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateSession
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateSession
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 27
      syntax:
        content:
          CSharp: public IntPtr CreateSession
          VB: Public CreateSession As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionFromArray
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionFromArray
      language: CSharp
      name:
        CSharp: CreateSessionFromArray
        VB: CreateSessionFromArray
      nameWithType:
        CSharp: OrtApi.CreateSessionFromArray
        VB: OrtApi.CreateSessionFromArray
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionFromArray
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionFromArray
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateSessionFromArray
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 28
      syntax:
        content:
          CSharp: public IntPtr CreateSessionFromArray
          VB: Public CreateSessionFromArray As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.Run
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.Run
      language: CSharp
      name:
        CSharp: Run
        VB: Run
      nameWithType:
        CSharp: OrtApi.Run
        VB: OrtApi.Run
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.Run
        VB: Microsoft.ML.OnnxRuntime.OrtApi.Run
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Run
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 29
      syntax:
        content:
          CSharp: public IntPtr Run
          VB: Public Run As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionOptions
      language: CSharp
      name:
        CSharp: CreateSessionOptions
        VB: CreateSessionOptions
      nameWithType:
        CSharp: OrtApi.CreateSessionOptions
        VB: OrtApi.CreateSessionOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateSessionOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 31
      syntax:
        content:
          CSharp: public IntPtr CreateSessionOptions
          VB: Public CreateSessionOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetOptimizedModelFilePath
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetOptimizedModelFilePath
      language: CSharp
      name:
        CSharp: SetOptimizedModelFilePath
        VB: SetOptimizedModelFilePath
      nameWithType:
        CSharp: OrtApi.SetOptimizedModelFilePath
        VB: OrtApi.SetOptimizedModelFilePath
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetOptimizedModelFilePath
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetOptimizedModelFilePath
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetOptimizedModelFilePath
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 32
      syntax:
        content:
          CSharp: public IntPtr SetOptimizedModelFilePath
          VB: Public SetOptimizedModelFilePath As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CloneSessionOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CloneSessionOptions
      language: CSharp
      name:
        CSharp: CloneSessionOptions
        VB: CloneSessionOptions
      nameWithType:
        CSharp: OrtApi.CloneSessionOptions
        VB: OrtApi.CloneSessionOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CloneSessionOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CloneSessionOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CloneSessionOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 33
      syntax:
        content:
          CSharp: public IntPtr CloneSessionOptions
          VB: Public CloneSessionOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionExecutionMode
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetSessionExecutionMode
      language: CSharp
      name:
        CSharp: SetSessionExecutionMode
        VB: SetSessionExecutionMode
      nameWithType:
        CSharp: OrtApi.SetSessionExecutionMode
        VB: OrtApi.SetSessionExecutionMode
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionExecutionMode
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionExecutionMode
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetSessionExecutionMode
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 34
      syntax:
        content:
          CSharp: public IntPtr SetSessionExecutionMode
          VB: Public SetSessionExecutionMode As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.EnableProfiling
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.EnableProfiling
      language: CSharp
      name:
        CSharp: EnableProfiling
        VB: EnableProfiling
      nameWithType:
        CSharp: OrtApi.EnableProfiling
        VB: OrtApi.EnableProfiling
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.EnableProfiling
        VB: Microsoft.ML.OnnxRuntime.OrtApi.EnableProfiling
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: EnableProfiling
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 35
      syntax:
        content:
          CSharp: public IntPtr EnableProfiling
          VB: Public EnableProfiling As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.DisableProfiling
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.DisableProfiling
      language: CSharp
      name:
        CSharp: DisableProfiling
        VB: DisableProfiling
      nameWithType:
        CSharp: OrtApi.DisableProfiling
        VB: OrtApi.DisableProfiling
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.DisableProfiling
        VB: Microsoft.ML.OnnxRuntime.OrtApi.DisableProfiling
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: DisableProfiling
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 36
      syntax:
        content:
          CSharp: public IntPtr DisableProfiling
          VB: Public DisableProfiling As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.EnableMemPattern
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.EnableMemPattern
      language: CSharp
      name:
        CSharp: EnableMemPattern
        VB: EnableMemPattern
      nameWithType:
        CSharp: OrtApi.EnableMemPattern
        VB: OrtApi.EnableMemPattern
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.EnableMemPattern
        VB: Microsoft.ML.OnnxRuntime.OrtApi.EnableMemPattern
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: EnableMemPattern
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 37
      syntax:
        content:
          CSharp: public IntPtr EnableMemPattern
          VB: Public EnableMemPattern As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.DisableMemPattern
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.DisableMemPattern
      language: CSharp
      name:
        CSharp: DisableMemPattern
        VB: DisableMemPattern
      nameWithType:
        CSharp: OrtApi.DisableMemPattern
        VB: OrtApi.DisableMemPattern
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.DisableMemPattern
        VB: Microsoft.ML.OnnxRuntime.OrtApi.DisableMemPattern
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: DisableMemPattern
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 38
      syntax:
        content:
          CSharp: public IntPtr DisableMemPattern
          VB: Public DisableMemPattern As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.EnableCpuMemArena
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.EnableCpuMemArena
      language: CSharp
      name:
        CSharp: EnableCpuMemArena
        VB: EnableCpuMemArena
      nameWithType:
        CSharp: OrtApi.EnableCpuMemArena
        VB: OrtApi.EnableCpuMemArena
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.EnableCpuMemArena
        VB: Microsoft.ML.OnnxRuntime.OrtApi.EnableCpuMemArena
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: EnableCpuMemArena
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 39
      syntax:
        content:
          CSharp: public IntPtr EnableCpuMemArena
          VB: Public EnableCpuMemArena As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.DisableCpuMemArena
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.DisableCpuMemArena
      language: CSharp
      name:
        CSharp: DisableCpuMemArena
        VB: DisableCpuMemArena
      nameWithType:
        CSharp: OrtApi.DisableCpuMemArena
        VB: OrtApi.DisableCpuMemArena
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.DisableCpuMemArena
        VB: Microsoft.ML.OnnxRuntime.OrtApi.DisableCpuMemArena
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: DisableCpuMemArena
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 40
      syntax:
        content:
          CSharp: public IntPtr DisableCpuMemArena
          VB: Public DisableCpuMemArena As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogId
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogId
      language: CSharp
      name:
        CSharp: SetSessionLogId
        VB: SetSessionLogId
      nameWithType:
        CSharp: OrtApi.SetSessionLogId
        VB: OrtApi.SetSessionLogId
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogId
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogId
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetSessionLogId
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 41
      syntax:
        content:
          CSharp: public IntPtr SetSessionLogId
          VB: Public SetSessionLogId As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogVerbosityLevel
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogVerbosityLevel
      language: CSharp
      name:
        CSharp: SetSessionLogVerbosityLevel
        VB: SetSessionLogVerbosityLevel
      nameWithType:
        CSharp: OrtApi.SetSessionLogVerbosityLevel
        VB: OrtApi.SetSessionLogVerbosityLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogVerbosityLevel
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogVerbosityLevel
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetSessionLogVerbosityLevel
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 42
      syntax:
        content:
          CSharp: public IntPtr SetSessionLogVerbosityLevel
          VB: Public SetSessionLogVerbosityLevel As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogSeverityLevel
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogSeverityLevel
      language: CSharp
      name:
        CSharp: SetSessionLogSeverityLevel
        VB: SetSessionLogSeverityLevel
      nameWithType:
        CSharp: OrtApi.SetSessionLogSeverityLevel
        VB: OrtApi.SetSessionLogSeverityLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogSeverityLevel
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionLogSeverityLevel
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetSessionLogSeverityLevel
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 43
      syntax:
        content:
          CSharp: public IntPtr SetSessionLogSeverityLevel
          VB: Public SetSessionLogSeverityLevel As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionGraphOptimizationLevel
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetSessionGraphOptimizationLevel
      language: CSharp
      name:
        CSharp: SetSessionGraphOptimizationLevel
        VB: SetSessionGraphOptimizationLevel
      nameWithType:
        CSharp: OrtApi.SetSessionGraphOptimizationLevel
        VB: OrtApi.SetSessionGraphOptimizationLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionGraphOptimizationLevel
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetSessionGraphOptimizationLevel
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetSessionGraphOptimizationLevel
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 44
      syntax:
        content:
          CSharp: public IntPtr SetSessionGraphOptimizationLevel
          VB: Public SetSessionGraphOptimizationLevel As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetIntraOpNumThreads
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetIntraOpNumThreads
      language: CSharp
      name:
        CSharp: SetIntraOpNumThreads
        VB: SetIntraOpNumThreads
      nameWithType:
        CSharp: OrtApi.SetIntraOpNumThreads
        VB: OrtApi.SetIntraOpNumThreads
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetIntraOpNumThreads
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetIntraOpNumThreads
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetIntraOpNumThreads
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 45
      syntax:
        content:
          CSharp: public IntPtr SetIntraOpNumThreads
          VB: Public SetIntraOpNumThreads As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetInterOpNumThreads
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetInterOpNumThreads
      language: CSharp
      name:
        CSharp: SetInterOpNumThreads
        VB: SetInterOpNumThreads
      nameWithType:
        CSharp: OrtApi.SetInterOpNumThreads
        VB: OrtApi.SetInterOpNumThreads
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetInterOpNumThreads
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetInterOpNumThreads
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetInterOpNumThreads
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 46
      syntax:
        content:
          CSharp: public IntPtr SetInterOpNumThreads
          VB: Public SetInterOpNumThreads As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateCustomOpDomain
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateCustomOpDomain
      language: CSharp
      name:
        CSharp: CreateCustomOpDomain
        VB: CreateCustomOpDomain
      nameWithType:
        CSharp: OrtApi.CreateCustomOpDomain
        VB: OrtApi.CreateCustomOpDomain
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateCustomOpDomain
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateCustomOpDomain
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateCustomOpDomain
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 48
      syntax:
        content:
          CSharp: public IntPtr CreateCustomOpDomain
          VB: Public CreateCustomOpDomain As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CustomOpDomain_Add
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CustomOpDomain_Add
      language: CSharp
      name:
        CSharp: CustomOpDomain_Add
        VB: CustomOpDomain_Add
      nameWithType:
        CSharp: OrtApi.CustomOpDomain_Add
        VB: OrtApi.CustomOpDomain_Add
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CustomOpDomain_Add
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CustomOpDomain_Add
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CustomOpDomain_Add
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 49
      syntax:
        content:
          CSharp: public IntPtr CustomOpDomain_Add
          VB: Public CustomOpDomain_Add As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.AddCustomOpDomain
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.AddCustomOpDomain
      language: CSharp
      name:
        CSharp: AddCustomOpDomain
        VB: AddCustomOpDomain
      nameWithType:
        CSharp: OrtApi.AddCustomOpDomain
        VB: OrtApi.AddCustomOpDomain
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.AddCustomOpDomain
        VB: Microsoft.ML.OnnxRuntime.OrtApi.AddCustomOpDomain
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AddCustomOpDomain
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 50
      syntax:
        content:
          CSharp: public IntPtr AddCustomOpDomain
          VB: Public AddCustomOpDomain As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.RegisterCustomOpsLibrary
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.RegisterCustomOpsLibrary
      language: CSharp
      name:
        CSharp: RegisterCustomOpsLibrary
        VB: RegisterCustomOpsLibrary
      nameWithType:
        CSharp: OrtApi.RegisterCustomOpsLibrary
        VB: OrtApi.RegisterCustomOpsLibrary
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.RegisterCustomOpsLibrary
        VB: Microsoft.ML.OnnxRuntime.OrtApi.RegisterCustomOpsLibrary
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RegisterCustomOpsLibrary
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 51
      syntax:
        content:
          CSharp: public IntPtr RegisterCustomOpsLibrary
          VB: Public RegisterCustomOpsLibrary As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputCount
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputCount
      language: CSharp
      name:
        CSharp: SessionGetInputCount
        VB: SessionGetInputCount
      nameWithType:
        CSharp: OrtApi.SessionGetInputCount
        VB: OrtApi.SessionGetInputCount
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputCount
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputCount
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionGetInputCount
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 53
      syntax:
        content:
          CSharp: public IntPtr SessionGetInputCount
          VB: Public SessionGetInputCount As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputCount
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputCount
      language: CSharp
      name:
        CSharp: SessionGetOutputCount
        VB: SessionGetOutputCount
      nameWithType:
        CSharp: OrtApi.SessionGetOutputCount
        VB: OrtApi.SessionGetOutputCount
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputCount
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputCount
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionGetOutputCount
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 54
      syntax:
        content:
          CSharp: public IntPtr SessionGetOutputCount
          VB: Public SessionGetOutputCount As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerCount
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerCount
      language: CSharp
      name:
        CSharp: SessionGetOverridableInitializerCount
        VB: SessionGetOverridableInitializerCount
      nameWithType:
        CSharp: OrtApi.SessionGetOverridableInitializerCount
        VB: OrtApi.SessionGetOverridableInitializerCount
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerCount
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerCount
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionGetOverridableInitializerCount
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 55
      syntax:
        content:
          CSharp: public IntPtr SessionGetOverridableInitializerCount
          VB: Public SessionGetOverridableInitializerCount As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputTypeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputTypeInfo
      language: CSharp
      name:
        CSharp: SessionGetInputTypeInfo
        VB: SessionGetInputTypeInfo
      nameWithType:
        CSharp: OrtApi.SessionGetInputTypeInfo
        VB: OrtApi.SessionGetInputTypeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputTypeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputTypeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionGetInputTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 56
      syntax:
        content:
          CSharp: public IntPtr SessionGetInputTypeInfo
          VB: Public SessionGetInputTypeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputTypeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputTypeInfo
      language: CSharp
      name:
        CSharp: SessionGetOutputTypeInfo
        VB: SessionGetOutputTypeInfo
      nameWithType:
        CSharp: OrtApi.SessionGetOutputTypeInfo
        VB: OrtApi.SessionGetOutputTypeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputTypeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputTypeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionGetOutputTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 57
      syntax:
        content:
          CSharp: public IntPtr SessionGetOutputTypeInfo
          VB: Public SessionGetOutputTypeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerTypeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerTypeInfo
      language: CSharp
      name:
        CSharp: SessionGetOverridableInitializerTypeInfo
        VB: SessionGetOverridableInitializerTypeInfo
      nameWithType:
        CSharp: OrtApi.SessionGetOverridableInitializerTypeInfo
        VB: OrtApi.SessionGetOverridableInitializerTypeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerTypeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerTypeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionGetOverridableInitializerTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 58
      syntax:
        content:
          CSharp: public IntPtr SessionGetOverridableInitializerTypeInfo
          VB: Public SessionGetOverridableInitializerTypeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputName
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputName
      language: CSharp
      name:
        CSharp: SessionGetInputName
        VB: SessionGetInputName
      nameWithType:
        CSharp: OrtApi.SessionGetInputName
        VB: OrtApi.SessionGetInputName
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputName
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetInputName
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionGetInputName
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 59
      syntax:
        content:
          CSharp: public IntPtr SessionGetInputName
          VB: Public SessionGetInputName As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputName
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputName
      language: CSharp
      name:
        CSharp: SessionGetOutputName
        VB: SessionGetOutputName
      nameWithType:
        CSharp: OrtApi.SessionGetOutputName
        VB: OrtApi.SessionGetOutputName
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputName
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOutputName
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionGetOutputName
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 60
      syntax:
        content:
          CSharp: public IntPtr SessionGetOutputName
          VB: Public SessionGetOutputName As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerName
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerName
      language: CSharp
      name:
        CSharp: SessionGetOverridableInitializerName
        VB: SessionGetOverridableInitializerName
      nameWithType:
        CSharp: OrtApi.SessionGetOverridableInitializerName
        VB: OrtApi.SessionGetOverridableInitializerName
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerName
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetOverridableInitializerName
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionGetOverridableInitializerName
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 61
      syntax:
        content:
          CSharp: public IntPtr SessionGetOverridableInitializerName
          VB: Public SessionGetOverridableInitializerName As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateRunOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateRunOptions
      language: CSharp
      name:
        CSharp: CreateRunOptions
        VB: CreateRunOptions
      nameWithType:
        CSharp: OrtApi.CreateRunOptions
        VB: OrtApi.CreateRunOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateRunOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateRunOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateRunOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 62
      syntax:
        content:
          CSharp: public IntPtr CreateRunOptions
          VB: Public CreateRunOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunLogVerbosityLevel
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunLogVerbosityLevel
      language: CSharp
      name:
        CSharp: RunOptionsSetRunLogVerbosityLevel
        VB: RunOptionsSetRunLogVerbosityLevel
      nameWithType:
        CSharp: OrtApi.RunOptionsSetRunLogVerbosityLevel
        VB: OrtApi.RunOptionsSetRunLogVerbosityLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunLogVerbosityLevel
        VB: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunLogVerbosityLevel
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RunOptionsSetRunLogVerbosityLevel
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 63
      syntax:
        content:
          CSharp: public IntPtr RunOptionsSetRunLogVerbosityLevel
          VB: Public RunOptionsSetRunLogVerbosityLevel As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunLogSeverityLevel
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunLogSeverityLevel
      language: CSharp
      name:
        CSharp: RunOptionsSetRunLogSeverityLevel
        VB: RunOptionsSetRunLogSeverityLevel
      nameWithType:
        CSharp: OrtApi.RunOptionsSetRunLogSeverityLevel
        VB: OrtApi.RunOptionsSetRunLogSeverityLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunLogSeverityLevel
        VB: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunLogSeverityLevel
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RunOptionsSetRunLogSeverityLevel
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 64
      syntax:
        content:
          CSharp: public IntPtr RunOptionsSetRunLogSeverityLevel
          VB: Public RunOptionsSetRunLogSeverityLevel As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunTag
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunTag
      language: CSharp
      name:
        CSharp: RunOptionsSetRunTag
        VB: RunOptionsSetRunTag
      nameWithType:
        CSharp: OrtApi.RunOptionsSetRunTag
        VB: OrtApi.RunOptionsSetRunTag
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunTag
        VB: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetRunTag
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RunOptionsSetRunTag
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 65
      syntax:
        content:
          CSharp: public IntPtr RunOptionsSetRunTag
          VB: Public RunOptionsSetRunTag As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunLogVerbosityLevel
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunLogVerbosityLevel
      language: CSharp
      name:
        CSharp: RunOptionsGetRunLogVerbosityLevel
        VB: RunOptionsGetRunLogVerbosityLevel
      nameWithType:
        CSharp: OrtApi.RunOptionsGetRunLogVerbosityLevel
        VB: OrtApi.RunOptionsGetRunLogVerbosityLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunLogVerbosityLevel
        VB: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunLogVerbosityLevel
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RunOptionsGetRunLogVerbosityLevel
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 66
      syntax:
        content:
          CSharp: public IntPtr RunOptionsGetRunLogVerbosityLevel
          VB: Public RunOptionsGetRunLogVerbosityLevel As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunLogSeverityLevel
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunLogSeverityLevel
      language: CSharp
      name:
        CSharp: RunOptionsGetRunLogSeverityLevel
        VB: RunOptionsGetRunLogSeverityLevel
      nameWithType:
        CSharp: OrtApi.RunOptionsGetRunLogSeverityLevel
        VB: OrtApi.RunOptionsGetRunLogSeverityLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunLogSeverityLevel
        VB: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunLogSeverityLevel
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RunOptionsGetRunLogSeverityLevel
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 67
      syntax:
        content:
          CSharp: public IntPtr RunOptionsGetRunLogSeverityLevel
          VB: Public RunOptionsGetRunLogSeverityLevel As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunTag
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunTag
      language: CSharp
      name:
        CSharp: RunOptionsGetRunTag
        VB: RunOptionsGetRunTag
      nameWithType:
        CSharp: OrtApi.RunOptionsGetRunTag
        VB: OrtApi.RunOptionsGetRunTag
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunTag
        VB: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsGetRunTag
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RunOptionsGetRunTag
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 68
      syntax:
        content:
          CSharp: public IntPtr RunOptionsGetRunTag
          VB: Public RunOptionsGetRunTag As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetTerminate
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetTerminate
      language: CSharp
      name:
        CSharp: RunOptionsSetTerminate
        VB: RunOptionsSetTerminate
      nameWithType:
        CSharp: OrtApi.RunOptionsSetTerminate
        VB: OrtApi.RunOptionsSetTerminate
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetTerminate
        VB: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsSetTerminate
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RunOptionsSetTerminate
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 69
      syntax:
        content:
          CSharp: public IntPtr RunOptionsSetTerminate
          VB: Public RunOptionsSetTerminate As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsUnsetTerminate
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsUnsetTerminate
      language: CSharp
      name:
        CSharp: RunOptionsUnsetTerminate
        VB: RunOptionsUnsetTerminate
      nameWithType:
        CSharp: OrtApi.RunOptionsUnsetTerminate
        VB: OrtApi.RunOptionsUnsetTerminate
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsUnsetTerminate
        VB: Microsoft.ML.OnnxRuntime.OrtApi.RunOptionsUnsetTerminate
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RunOptionsUnsetTerminate
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 70
      syntax:
        content:
          CSharp: public IntPtr RunOptionsUnsetTerminate
          VB: Public RunOptionsUnsetTerminate As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorAsOrtValue
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorAsOrtValue
      language: CSharp
      name:
        CSharp: CreateTensorAsOrtValue
        VB: CreateTensorAsOrtValue
      nameWithType:
        CSharp: OrtApi.CreateTensorAsOrtValue
        VB: OrtApi.CreateTensorAsOrtValue
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorAsOrtValue
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorAsOrtValue
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateTensorAsOrtValue
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 72
      syntax:
        content:
          CSharp: public IntPtr CreateTensorAsOrtValue
          VB: Public CreateTensorAsOrtValue As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorWithDataAsOrtValue
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorWithDataAsOrtValue
      language: CSharp
      name:
        CSharp: CreateTensorWithDataAsOrtValue
        VB: CreateTensorWithDataAsOrtValue
      nameWithType:
        CSharp: OrtApi.CreateTensorWithDataAsOrtValue
        VB: OrtApi.CreateTensorWithDataAsOrtValue
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorWithDataAsOrtValue
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorWithDataAsOrtValue
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateTensorWithDataAsOrtValue
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 73
      syntax:
        content:
          CSharp: public IntPtr CreateTensorWithDataAsOrtValue
          VB: Public CreateTensorWithDataAsOrtValue As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.IsTensor
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.IsTensor
      language: CSharp
      name:
        CSharp: IsTensor
        VB: IsTensor
      nameWithType:
        CSharp: OrtApi.IsTensor
        VB: OrtApi.IsTensor
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.IsTensor
        VB: Microsoft.ML.OnnxRuntime.OrtApi.IsTensor
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsTensor
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 74
      syntax:
        content:
          CSharp: public IntPtr IsTensor
          VB: Public IsTensor As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorMutableData
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetTensorMutableData
      language: CSharp
      name:
        CSharp: GetTensorMutableData
        VB: GetTensorMutableData
      nameWithType:
        CSharp: OrtApi.GetTensorMutableData
        VB: OrtApi.GetTensorMutableData
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorMutableData
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorMutableData
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTensorMutableData
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 75
      syntax:
        content:
          CSharp: public IntPtr GetTensorMutableData
          VB: Public GetTensorMutableData As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.FillStringTensor
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.FillStringTensor
      language: CSharp
      name:
        CSharp: FillStringTensor
        VB: FillStringTensor
      nameWithType:
        CSharp: OrtApi.FillStringTensor
        VB: OrtApi.FillStringTensor
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.FillStringTensor
        VB: Microsoft.ML.OnnxRuntime.OrtApi.FillStringTensor
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: FillStringTensor
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 76
      syntax:
        content:
          CSharp: public IntPtr FillStringTensor
          VB: Public FillStringTensor As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorDataLength
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorDataLength
      language: CSharp
      name:
        CSharp: GetStringTensorDataLength
        VB: GetStringTensorDataLength
      nameWithType:
        CSharp: OrtApi.GetStringTensorDataLength
        VB: OrtApi.GetStringTensorDataLength
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorDataLength
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorDataLength
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetStringTensorDataLength
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 78
      syntax:
        content:
          CSharp: public IntPtr GetStringTensorDataLength
          VB: Public GetStringTensorDataLength As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorContent
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorContent
      language: CSharp
      name:
        CSharp: GetStringTensorContent
        VB: GetStringTensorContent
      nameWithType:
        CSharp: OrtApi.GetStringTensorContent
        VB: OrtApi.GetStringTensorContent
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorContent
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorContent
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetStringTensorContent
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 79
      syntax:
        content:
          CSharp: public IntPtr GetStringTensorContent
          VB: Public GetStringTensorContent As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToTensorInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToTensorInfo
      language: CSharp
      name:
        CSharp: CastTypeInfoToTensorInfo
        VB: CastTypeInfoToTensorInfo
      nameWithType:
        CSharp: OrtApi.CastTypeInfoToTensorInfo
        VB: OrtApi.CastTypeInfoToTensorInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToTensorInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToTensorInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CastTypeInfoToTensorInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 81
      syntax:
        content:
          CSharp: public IntPtr CastTypeInfoToTensorInfo
          VB: Public CastTypeInfoToTensorInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetOnnxTypeFromTypeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetOnnxTypeFromTypeInfo
      language: CSharp
      name:
        CSharp: GetOnnxTypeFromTypeInfo
        VB: GetOnnxTypeFromTypeInfo
      nameWithType:
        CSharp: OrtApi.GetOnnxTypeFromTypeInfo
        VB: OrtApi.GetOnnxTypeFromTypeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetOnnxTypeFromTypeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetOnnxTypeFromTypeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetOnnxTypeFromTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 82
      syntax:
        content:
          CSharp: public IntPtr GetOnnxTypeFromTypeInfo
          VB: Public GetOnnxTypeFromTypeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorTypeAndShapeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorTypeAndShapeInfo
      language: CSharp
      name:
        CSharp: CreateTensorTypeAndShapeInfo
        VB: CreateTensorTypeAndShapeInfo
      nameWithType:
        CSharp: OrtApi.CreateTensorTypeAndShapeInfo
        VB: OrtApi.CreateTensorTypeAndShapeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorTypeAndShapeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorTypeAndShapeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateTensorTypeAndShapeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 83
      syntax:
        content:
          CSharp: public IntPtr CreateTensorTypeAndShapeInfo
          VB: Public CreateTensorTypeAndShapeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetTensorElementType
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetTensorElementType
      language: CSharp
      name:
        CSharp: SetTensorElementType
        VB: SetTensorElementType
      nameWithType:
        CSharp: OrtApi.SetTensorElementType
        VB: OrtApi.SetTensorElementType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetTensorElementType
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetTensorElementType
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetTensorElementType
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 84
      syntax:
        content:
          CSharp: public IntPtr SetTensorElementType
          VB: Public SetTensorElementType As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetDimensions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetDimensions
      language: CSharp
      name:
        CSharp: SetDimensions
        VB: SetDimensions
      nameWithType:
        CSharp: OrtApi.SetDimensions
        VB: OrtApi.SetDimensions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetDimensions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetDimensions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetDimensions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 86
      syntax:
        content:
          CSharp: public IntPtr SetDimensions
          VB: Public SetDimensions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorElementType
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetTensorElementType
      language: CSharp
      name:
        CSharp: GetTensorElementType
        VB: GetTensorElementType
      nameWithType:
        CSharp: OrtApi.GetTensorElementType
        VB: OrtApi.GetTensorElementType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorElementType
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorElementType
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTensorElementType
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 87
      syntax:
        content:
          CSharp: public IntPtr GetTensorElementType
          VB: Public GetTensorElementType As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetDimensionsCount
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetDimensionsCount
      language: CSharp
      name:
        CSharp: GetDimensionsCount
        VB: GetDimensionsCount
      nameWithType:
        CSharp: OrtApi.GetDimensionsCount
        VB: OrtApi.GetDimensionsCount
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetDimensionsCount
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetDimensionsCount
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetDimensionsCount
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 88
      syntax:
        content:
          CSharp: public IntPtr GetDimensionsCount
          VB: Public GetDimensionsCount As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetDimensions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetDimensions
      language: CSharp
      name:
        CSharp: GetDimensions
        VB: GetDimensions
      nameWithType:
        CSharp: OrtApi.GetDimensions
        VB: OrtApi.GetDimensions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetDimensions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetDimensions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetDimensions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 89
      syntax:
        content:
          CSharp: public IntPtr GetDimensions
          VB: Public GetDimensions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetSymbolicDimensions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetSymbolicDimensions
      language: CSharp
      name:
        CSharp: GetSymbolicDimensions
        VB: GetSymbolicDimensions
      nameWithType:
        CSharp: OrtApi.GetSymbolicDimensions
        VB: OrtApi.GetSymbolicDimensions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetSymbolicDimensions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetSymbolicDimensions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetSymbolicDimensions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 90
      syntax:
        content:
          CSharp: public IntPtr GetSymbolicDimensions
          VB: Public GetSymbolicDimensions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorShapeElementCount
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetTensorShapeElementCount
      language: CSharp
      name:
        CSharp: GetTensorShapeElementCount
        VB: GetTensorShapeElementCount
      nameWithType:
        CSharp: OrtApi.GetTensorShapeElementCount
        VB: OrtApi.GetTensorShapeElementCount
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorShapeElementCount
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorShapeElementCount
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTensorShapeElementCount
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 91
      syntax:
        content:
          CSharp: public IntPtr GetTensorShapeElementCount
          VB: Public GetTensorShapeElementCount As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorTypeAndShape
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetTensorTypeAndShape
      language: CSharp
      name:
        CSharp: GetTensorTypeAndShape
        VB: GetTensorTypeAndShape
      nameWithType:
        CSharp: OrtApi.GetTensorTypeAndShape
        VB: OrtApi.GetTensorTypeAndShape
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorTypeAndShape
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorTypeAndShape
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTensorTypeAndShape
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 92
      syntax:
        content:
          CSharp: public IntPtr GetTensorTypeAndShape
          VB: Public GetTensorTypeAndShape As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetTypeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetTypeInfo
      language: CSharp
      name:
        CSharp: GetTypeInfo
        VB: GetTypeInfo
      nameWithType:
        CSharp: OrtApi.GetTypeInfo
        VB: OrtApi.GetTypeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetTypeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetTypeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 93
      syntax:
        content:
          CSharp: public IntPtr GetTypeInfo
          VB: Public GetTypeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetValueType
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetValueType
      language: CSharp
      name:
        CSharp: GetValueType
        VB: GetValueType
      nameWithType:
        CSharp: OrtApi.GetValueType
        VB: OrtApi.GetValueType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetValueType
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetValueType
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetValueType
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 94
      syntax:
        content:
          CSharp: public IntPtr GetValueType
          VB: Public GetValueType As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateMemoryInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateMemoryInfo
      language: CSharp
      name:
        CSharp: CreateMemoryInfo
        VB: CreateMemoryInfo
      nameWithType:
        CSharp: OrtApi.CreateMemoryInfo
        VB: OrtApi.CreateMemoryInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateMemoryInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateMemoryInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateMemoryInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 95
      syntax:
        content:
          CSharp: public IntPtr CreateMemoryInfo
          VB: Public CreateMemoryInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateCpuMemoryInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateCpuMemoryInfo
      language: CSharp
      name:
        CSharp: CreateCpuMemoryInfo
        VB: CreateCpuMemoryInfo
      nameWithType:
        CSharp: OrtApi.CreateCpuMemoryInfo
        VB: OrtApi.CreateCpuMemoryInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateCpuMemoryInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateCpuMemoryInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateCpuMemoryInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 96
      syntax:
        content:
          CSharp: public IntPtr CreateCpuMemoryInfo
          VB: Public CreateCpuMemoryInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CompareMemoryInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CompareMemoryInfo
      language: CSharp
      name:
        CSharp: CompareMemoryInfo
        VB: CompareMemoryInfo
      nameWithType:
        CSharp: OrtApi.CompareMemoryInfo
        VB: OrtApi.CompareMemoryInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CompareMemoryInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CompareMemoryInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CompareMemoryInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 97
      syntax:
        content:
          CSharp: public IntPtr CompareMemoryInfo
          VB: Public CompareMemoryInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetName
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetName
      language: CSharp
      name:
        CSharp: MemoryInfoGetName
        VB: MemoryInfoGetName
      nameWithType:
        CSharp: OrtApi.MemoryInfoGetName
        VB: OrtApi.MemoryInfoGetName
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetName
        VB: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetName
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: MemoryInfoGetName
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 98
      syntax:
        content:
          CSharp: public IntPtr MemoryInfoGetName
          VB: Public MemoryInfoGetName As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetId
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetId
      language: CSharp
      name:
        CSharp: MemoryInfoGetId
        VB: MemoryInfoGetId
      nameWithType:
        CSharp: OrtApi.MemoryInfoGetId
        VB: OrtApi.MemoryInfoGetId
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetId
        VB: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetId
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: MemoryInfoGetId
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 99
      syntax:
        content:
          CSharp: public IntPtr MemoryInfoGetId
          VB: Public MemoryInfoGetId As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetMemType
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetMemType
      language: CSharp
      name:
        CSharp: MemoryInfoGetMemType
        VB: MemoryInfoGetMemType
      nameWithType:
        CSharp: OrtApi.MemoryInfoGetMemType
        VB: OrtApi.MemoryInfoGetMemType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetMemType
        VB: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetMemType
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: MemoryInfoGetMemType
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 100
      syntax:
        content:
          CSharp: public IntPtr MemoryInfoGetMemType
          VB: Public MemoryInfoGetMemType As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetType
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetType
      language: CSharp
      name:
        CSharp: MemoryInfoGetType
        VB: MemoryInfoGetType
      nameWithType:
        CSharp: OrtApi.MemoryInfoGetType
        VB: OrtApi.MemoryInfoGetType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetType
        VB: Microsoft.ML.OnnxRuntime.OrtApi.MemoryInfoGetType
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: MemoryInfoGetType
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 101
      syntax:
        content:
          CSharp: public IntPtr MemoryInfoGetType
          VB: Public MemoryInfoGetType As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.AllocatorAlloc
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.AllocatorAlloc
      language: CSharp
      name:
        CSharp: AllocatorAlloc
        VB: AllocatorAlloc
      nameWithType:
        CSharp: OrtApi.AllocatorAlloc
        VB: OrtApi.AllocatorAlloc
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.AllocatorAlloc
        VB: Microsoft.ML.OnnxRuntime.OrtApi.AllocatorAlloc
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AllocatorAlloc
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 102
      syntax:
        content:
          CSharp: public IntPtr AllocatorAlloc
          VB: Public AllocatorAlloc As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.AllocatorFree
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.AllocatorFree
      language: CSharp
      name:
        CSharp: AllocatorFree
        VB: AllocatorFree
      nameWithType:
        CSharp: OrtApi.AllocatorFree
        VB: OrtApi.AllocatorFree
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.AllocatorFree
        VB: Microsoft.ML.OnnxRuntime.OrtApi.AllocatorFree
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AllocatorFree
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 103
      syntax:
        content:
          CSharp: public IntPtr AllocatorFree
          VB: Public AllocatorFree As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.AllocatorGetInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.AllocatorGetInfo
      language: CSharp
      name:
        CSharp: AllocatorGetInfo
        VB: AllocatorGetInfo
      nameWithType:
        CSharp: OrtApi.AllocatorGetInfo
        VB: OrtApi.AllocatorGetInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.AllocatorGetInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.AllocatorGetInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AllocatorGetInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 104
      syntax:
        content:
          CSharp: public IntPtr AllocatorGetInfo
          VB: Public AllocatorGetInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetAllocatorWithDefaultOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetAllocatorWithDefaultOptions
      language: CSharp
      name:
        CSharp: GetAllocatorWithDefaultOptions
        VB: GetAllocatorWithDefaultOptions
      nameWithType:
        CSharp: OrtApi.GetAllocatorWithDefaultOptions
        VB: OrtApi.GetAllocatorWithDefaultOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetAllocatorWithDefaultOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetAllocatorWithDefaultOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetAllocatorWithDefaultOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 105
      syntax:
        content:
          CSharp: public IntPtr GetAllocatorWithDefaultOptions
          VB: Public GetAllocatorWithDefaultOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.AddFreeDimensionOverride
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.AddFreeDimensionOverride
      language: CSharp
      name:
        CSharp: AddFreeDimensionOverride
        VB: AddFreeDimensionOverride
      nameWithType:
        CSharp: OrtApi.AddFreeDimensionOverride
        VB: OrtApi.AddFreeDimensionOverride
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.AddFreeDimensionOverride
        VB: Microsoft.ML.OnnxRuntime.OrtApi.AddFreeDimensionOverride
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AddFreeDimensionOverride
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 106
      syntax:
        content:
          CSharp: public IntPtr AddFreeDimensionOverride
          VB: Public AddFreeDimensionOverride As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetValue
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetValue
      language: CSharp
      name:
        CSharp: GetValue
        VB: GetValue
      nameWithType:
        CSharp: OrtApi.GetValue
        VB: OrtApi.GetValue
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetValue
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetValue
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetValue
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 107
      syntax:
        content:
          CSharp: public IntPtr GetValue
          VB: Public GetValue As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetValueCount
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetValueCount
      language: CSharp
      name:
        CSharp: GetValueCount
        VB: GetValueCount
      nameWithType:
        CSharp: OrtApi.GetValueCount
        VB: OrtApi.GetValueCount
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetValueCount
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetValueCount
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetValueCount
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 108
      syntax:
        content:
          CSharp: public IntPtr GetValueCount
          VB: Public GetValueCount As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateValue
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateValue
      language: CSharp
      name:
        CSharp: CreateValue
        VB: CreateValue
      nameWithType:
        CSharp: OrtApi.CreateValue
        VB: OrtApi.CreateValue
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateValue
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateValue
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateValue
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 109
      syntax:
        content:
          CSharp: public IntPtr CreateValue
          VB: Public CreateValue As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateOpaqueValue
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateOpaqueValue
      language: CSharp
      name:
        CSharp: CreateOpaqueValue
        VB: CreateOpaqueValue
      nameWithType:
        CSharp: OrtApi.CreateOpaqueValue
        VB: OrtApi.CreateOpaqueValue
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateOpaqueValue
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateOpaqueValue
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateOpaqueValue
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 110
      syntax:
        content:
          CSharp: public IntPtr CreateOpaqueValue
          VB: Public CreateOpaqueValue As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetOpaqueValue
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetOpaqueValue
      language: CSharp
      name:
        CSharp: GetOpaqueValue
        VB: GetOpaqueValue
      nameWithType:
        CSharp: OrtApi.GetOpaqueValue
        VB: OrtApi.GetOpaqueValue
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetOpaqueValue
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetOpaqueValue
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetOpaqueValue
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 111
      syntax:
        content:
          CSharp: public IntPtr GetOpaqueValue
          VB: Public GetOpaqueValue As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_float
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_float
      language: CSharp
      name:
        CSharp: KernelInfoGetAttribute_float
        VB: KernelInfoGetAttribute_float
      nameWithType:
        CSharp: OrtApi.KernelInfoGetAttribute_float
        VB: OrtApi.KernelInfoGetAttribute_float
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_float
        VB: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_float
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: KernelInfoGetAttribute_float
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 113
      syntax:
        content:
          CSharp: public IntPtr KernelInfoGetAttribute_float
          VB: Public KernelInfoGetAttribute_float As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_int64
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_int64
      language: CSharp
      name:
        CSharp: KernelInfoGetAttribute_int64
        VB: KernelInfoGetAttribute_int64
      nameWithType:
        CSharp: OrtApi.KernelInfoGetAttribute_int64
        VB: OrtApi.KernelInfoGetAttribute_int64
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_int64
        VB: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_int64
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: KernelInfoGetAttribute_int64
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 114
      syntax:
        content:
          CSharp: public IntPtr KernelInfoGetAttribute_int64
          VB: Public KernelInfoGetAttribute_int64 As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_string
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_string
      language: CSharp
      name:
        CSharp: KernelInfoGetAttribute_string
        VB: KernelInfoGetAttribute_string
      nameWithType:
        CSharp: OrtApi.KernelInfoGetAttribute_string
        VB: OrtApi.KernelInfoGetAttribute_string
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_string
        VB: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttribute_string
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: KernelInfoGetAttribute_string
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 115
      syntax:
        content:
          CSharp: public IntPtr KernelInfoGetAttribute_string
          VB: Public KernelInfoGetAttribute_string As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetInputCount
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetInputCount
      language: CSharp
      name:
        CSharp: KernelContext_GetInputCount
        VB: KernelContext_GetInputCount
      nameWithType:
        CSharp: OrtApi.KernelContext_GetInputCount
        VB: OrtApi.KernelContext_GetInputCount
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetInputCount
        VB: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetInputCount
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: KernelContext_GetInputCount
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 116
      syntax:
        content:
          CSharp: public IntPtr KernelContext_GetInputCount
          VB: Public KernelContext_GetInputCount As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetOutputCount
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetOutputCount
      language: CSharp
      name:
        CSharp: KernelContext_GetOutputCount
        VB: KernelContext_GetOutputCount
      nameWithType:
        CSharp: OrtApi.KernelContext_GetOutputCount
        VB: OrtApi.KernelContext_GetOutputCount
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetOutputCount
        VB: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetOutputCount
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: KernelContext_GetOutputCount
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 117
      syntax:
        content:
          CSharp: public IntPtr KernelContext_GetOutputCount
          VB: Public KernelContext_GetOutputCount As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetInput
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetInput
      language: CSharp
      name:
        CSharp: KernelContext_GetInput
        VB: KernelContext_GetInput
      nameWithType:
        CSharp: OrtApi.KernelContext_GetInput
        VB: OrtApi.KernelContext_GetInput
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetInput
        VB: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetInput
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: KernelContext_GetInput
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 118
      syntax:
        content:
          CSharp: public IntPtr KernelContext_GetInput
          VB: Public KernelContext_GetInput As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetOutput
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetOutput
      language: CSharp
      name:
        CSharp: KernelContext_GetOutput
        VB: KernelContext_GetOutput
      nameWithType:
        CSharp: OrtApi.KernelContext_GetOutput
        VB: OrtApi.KernelContext_GetOutput
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetOutput
        VB: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetOutput
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: KernelContext_GetOutput
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 119
      syntax:
        content:
          CSharp: public IntPtr KernelContext_GetOutput
          VB: Public KernelContext_GetOutput As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseEnv
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseEnv
      language: CSharp
      name:
        CSharp: ReleaseEnv
        VB: ReleaseEnv
      nameWithType:
        CSharp: OrtApi.ReleaseEnv
        VB: OrtApi.ReleaseEnv
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseEnv
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseEnv
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseEnv
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 121
      syntax:
        content:
          CSharp: public IntPtr ReleaseEnv
          VB: Public ReleaseEnv As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseStatus
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseStatus
      language: CSharp
      name:
        CSharp: ReleaseStatus
        VB: ReleaseStatus
      nameWithType:
        CSharp: OrtApi.ReleaseStatus
        VB: OrtApi.ReleaseStatus
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseStatus
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseStatus
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseStatus
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 122
      syntax:
        content:
          CSharp: public IntPtr ReleaseStatus
          VB: Public ReleaseStatus As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseMemoryInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseMemoryInfo
      language: CSharp
      name:
        CSharp: ReleaseMemoryInfo
        VB: ReleaseMemoryInfo
      nameWithType:
        CSharp: OrtApi.ReleaseMemoryInfo
        VB: OrtApi.ReleaseMemoryInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseMemoryInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseMemoryInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseMemoryInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 123
      syntax:
        content:
          CSharp: public IntPtr ReleaseMemoryInfo
          VB: Public ReleaseMemoryInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSession
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSession
      language: CSharp
      name:
        CSharp: ReleaseSession
        VB: ReleaseSession
      nameWithType:
        CSharp: OrtApi.ReleaseSession
        VB: OrtApi.ReleaseSession
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSession
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSession
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseSession
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 124
      syntax:
        content:
          CSharp: public IntPtr ReleaseSession
          VB: Public ReleaseSession As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseValue
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseValue
      language: CSharp
      name:
        CSharp: ReleaseValue
        VB: ReleaseValue
      nameWithType:
        CSharp: OrtApi.ReleaseValue
        VB: OrtApi.ReleaseValue
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseValue
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseValue
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseValue
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 125
      syntax:
        content:
          CSharp: public IntPtr ReleaseValue
          VB: Public ReleaseValue As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseRunOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseRunOptions
      language: CSharp
      name:
        CSharp: ReleaseRunOptions
        VB: ReleaseRunOptions
      nameWithType:
        CSharp: OrtApi.ReleaseRunOptions
        VB: OrtApi.ReleaseRunOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseRunOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseRunOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseRunOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 126
      syntax:
        content:
          CSharp: public IntPtr ReleaseRunOptions
          VB: Public ReleaseRunOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTypeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTypeInfo
      language: CSharp
      name:
        CSharp: ReleaseTypeInfo
        VB: ReleaseTypeInfo
      nameWithType:
        CSharp: OrtApi.ReleaseTypeInfo
        VB: OrtApi.ReleaseTypeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTypeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTypeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 127
      syntax:
        content:
          CSharp: public IntPtr ReleaseTypeInfo
          VB: Public ReleaseTypeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTensorTypeAndShapeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTensorTypeAndShapeInfo
      language: CSharp
      name:
        CSharp: ReleaseTensorTypeAndShapeInfo
        VB: ReleaseTensorTypeAndShapeInfo
      nameWithType:
        CSharp: OrtApi.ReleaseTensorTypeAndShapeInfo
        VB: OrtApi.ReleaseTensorTypeAndShapeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTensorTypeAndShapeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTensorTypeAndShapeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseTensorTypeAndShapeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 128
      syntax:
        content:
          CSharp: public IntPtr ReleaseTensorTypeAndShapeInfo
          VB: Public ReleaseTensorTypeAndShapeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSessionOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSessionOptions
      language: CSharp
      name:
        CSharp: ReleaseSessionOptions
        VB: ReleaseSessionOptions
      nameWithType:
        CSharp: OrtApi.ReleaseSessionOptions
        VB: OrtApi.ReleaseSessionOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSessionOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSessionOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseSessionOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 129
      syntax:
        content:
          CSharp: public IntPtr ReleaseSessionOptions
          VB: Public ReleaseSessionOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseCustomOpDomain
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseCustomOpDomain
      language: CSharp
      name:
        CSharp: ReleaseCustomOpDomain
        VB: ReleaseCustomOpDomain
      nameWithType:
        CSharp: OrtApi.ReleaseCustomOpDomain
        VB: OrtApi.ReleaseCustomOpDomain
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseCustomOpDomain
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseCustomOpDomain
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseCustomOpDomain
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 130
      syntax:
        content:
          CSharp: public IntPtr ReleaseCustomOpDomain
          VB: Public ReleaseCustomOpDomain As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetDenotationFromTypeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetDenotationFromTypeInfo
      language: CSharp
      name:
        CSharp: GetDenotationFromTypeInfo
        VB: GetDenotationFromTypeInfo
      nameWithType:
        CSharp: OrtApi.GetDenotationFromTypeInfo
        VB: OrtApi.GetDenotationFromTypeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetDenotationFromTypeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetDenotationFromTypeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetDenotationFromTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 131
      syntax:
        content:
          CSharp: public IntPtr GetDenotationFromTypeInfo
          VB: Public GetDenotationFromTypeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToMapTypeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToMapTypeInfo
      language: CSharp
      name:
        CSharp: CastTypeInfoToMapTypeInfo
        VB: CastTypeInfoToMapTypeInfo
      nameWithType:
        CSharp: OrtApi.CastTypeInfoToMapTypeInfo
        VB: OrtApi.CastTypeInfoToMapTypeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToMapTypeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToMapTypeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CastTypeInfoToMapTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 132
      syntax:
        content:
          CSharp: public IntPtr CastTypeInfoToMapTypeInfo
          VB: Public CastTypeInfoToMapTypeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToSequenceTypeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToSequenceTypeInfo
      language: CSharp
      name:
        CSharp: CastTypeInfoToSequenceTypeInfo
        VB: CastTypeInfoToSequenceTypeInfo
      nameWithType:
        CSharp: OrtApi.CastTypeInfoToSequenceTypeInfo
        VB: OrtApi.CastTypeInfoToSequenceTypeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToSequenceTypeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CastTypeInfoToSequenceTypeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CastTypeInfoToSequenceTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 133
      syntax:
        content:
          CSharp: public IntPtr CastTypeInfoToSequenceTypeInfo
          VB: Public CastTypeInfoToSequenceTypeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetMapKeyType
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetMapKeyType
      language: CSharp
      name:
        CSharp: GetMapKeyType
        VB: GetMapKeyType
      nameWithType:
        CSharp: OrtApi.GetMapKeyType
        VB: OrtApi.GetMapKeyType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetMapKeyType
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetMapKeyType
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetMapKeyType
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 134
      syntax:
        content:
          CSharp: public IntPtr GetMapKeyType
          VB: Public GetMapKeyType As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetMapValueType
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetMapValueType
      language: CSharp
      name:
        CSharp: GetMapValueType
        VB: GetMapValueType
      nameWithType:
        CSharp: OrtApi.GetMapValueType
        VB: OrtApi.GetMapValueType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetMapValueType
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetMapValueType
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetMapValueType
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 135
      syntax:
        content:
          CSharp: public IntPtr GetMapValueType
          VB: Public GetMapValueType As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetSequenceElementType
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetSequenceElementType
      language: CSharp
      name:
        CSharp: GetSequenceElementType
        VB: GetSequenceElementType
      nameWithType:
        CSharp: OrtApi.GetSequenceElementType
        VB: OrtApi.GetSequenceElementType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetSequenceElementType
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetSequenceElementType
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetSequenceElementType
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 136
      syntax:
        content:
          CSharp: public IntPtr GetSequenceElementType
          VB: Public GetSequenceElementType As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseMapTypeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseMapTypeInfo
      language: CSharp
      name:
        CSharp: ReleaseMapTypeInfo
        VB: ReleaseMapTypeInfo
      nameWithType:
        CSharp: OrtApi.ReleaseMapTypeInfo
        VB: OrtApi.ReleaseMapTypeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseMapTypeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseMapTypeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseMapTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 137
      syntax:
        content:
          CSharp: public IntPtr ReleaseMapTypeInfo
          VB: Public ReleaseMapTypeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSequenceTypeInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSequenceTypeInfo
      language: CSharp
      name:
        CSharp: ReleaseSequenceTypeInfo
        VB: ReleaseSequenceTypeInfo
      nameWithType:
        CSharp: OrtApi.ReleaseSequenceTypeInfo
        VB: OrtApi.ReleaseSequenceTypeInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSequenceTypeInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseSequenceTypeInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseSequenceTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 138
      syntax:
        content:
          CSharp: public IntPtr ReleaseSequenceTypeInfo
          VB: Public ReleaseSequenceTypeInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionEndProfiling
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionEndProfiling
      language: CSharp
      name:
        CSharp: SessionEndProfiling
        VB: SessionEndProfiling
      nameWithType:
        CSharp: OrtApi.SessionEndProfiling
        VB: OrtApi.SessionEndProfiling
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionEndProfiling
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionEndProfiling
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionEndProfiling
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 139
      syntax:
        content:
          CSharp: public IntPtr SessionEndProfiling
          VB: Public SessionEndProfiling As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetModelMetadata
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionGetModelMetadata
      language: CSharp
      name:
        CSharp: SessionGetModelMetadata
        VB: SessionGetModelMetadata
      nameWithType:
        CSharp: OrtApi.SessionGetModelMetadata
        VB: OrtApi.SessionGetModelMetadata
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetModelMetadata
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetModelMetadata
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionGetModelMetadata
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 141
      syntax:
        content:
          CSharp: public IntPtr SessionGetModelMetadata
          VB: Public SessionGetModelMetadata As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetProducerName
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetProducerName
      language: CSharp
      name:
        CSharp: ModelMetadataGetProducerName
        VB: ModelMetadataGetProducerName
      nameWithType:
        CSharp: OrtApi.ModelMetadataGetProducerName
        VB: OrtApi.ModelMetadataGetProducerName
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetProducerName
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetProducerName
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ModelMetadataGetProducerName
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 142
      syntax:
        content:
          CSharp: public IntPtr ModelMetadataGetProducerName
          VB: Public ModelMetadataGetProducerName As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetGraphName
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetGraphName
      language: CSharp
      name:
        CSharp: ModelMetadataGetGraphName
        VB: ModelMetadataGetGraphName
      nameWithType:
        CSharp: OrtApi.ModelMetadataGetGraphName
        VB: OrtApi.ModelMetadataGetGraphName
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetGraphName
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetGraphName
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ModelMetadataGetGraphName
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 143
      syntax:
        content:
          CSharp: public IntPtr ModelMetadataGetGraphName
          VB: Public ModelMetadataGetGraphName As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetDomain
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetDomain
      language: CSharp
      name:
        CSharp: ModelMetadataGetDomain
        VB: ModelMetadataGetDomain
      nameWithType:
        CSharp: OrtApi.ModelMetadataGetDomain
        VB: OrtApi.ModelMetadataGetDomain
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetDomain
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetDomain
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ModelMetadataGetDomain
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 144
      syntax:
        content:
          CSharp: public IntPtr ModelMetadataGetDomain
          VB: Public ModelMetadataGetDomain As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetDescription
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetDescription
      language: CSharp
      name:
        CSharp: ModelMetadataGetDescription
        VB: ModelMetadataGetDescription
      nameWithType:
        CSharp: OrtApi.ModelMetadataGetDescription
        VB: OrtApi.ModelMetadataGetDescription
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetDescription
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetDescription
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ModelMetadataGetDescription
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 145
      syntax:
        content:
          CSharp: public IntPtr ModelMetadataGetDescription
          VB: Public ModelMetadataGetDescription As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataLookupCustomMetadataMap
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataLookupCustomMetadataMap
      language: CSharp
      name:
        CSharp: ModelMetadataLookupCustomMetadataMap
        VB: ModelMetadataLookupCustomMetadataMap
      nameWithType:
        CSharp: OrtApi.ModelMetadataLookupCustomMetadataMap
        VB: OrtApi.ModelMetadataLookupCustomMetadataMap
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataLookupCustomMetadataMap
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataLookupCustomMetadataMap
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ModelMetadataLookupCustomMetadataMap
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 146
      syntax:
        content:
          CSharp: public IntPtr ModelMetadataLookupCustomMetadataMap
          VB: Public ModelMetadataLookupCustomMetadataMap As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetVersion
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetVersion
      language: CSharp
      name:
        CSharp: ModelMetadataGetVersion
        VB: ModelMetadataGetVersion
      nameWithType:
        CSharp: OrtApi.ModelMetadataGetVersion
        VB: OrtApi.ModelMetadataGetVersion
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetVersion
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetVersion
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ModelMetadataGetVersion
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 147
      syntax:
        content:
          CSharp: public IntPtr ModelMetadataGetVersion
          VB: Public ModelMetadataGetVersion As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseModelMetadata
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseModelMetadata
      language: CSharp
      name:
        CSharp: ReleaseModelMetadata
        VB: ReleaseModelMetadata
      nameWithType:
        CSharp: OrtApi.ReleaseModelMetadata
        VB: OrtApi.ReleaseModelMetadata
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseModelMetadata
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseModelMetadata
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseModelMetadata
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 148
      syntax:
        content:
          CSharp: public IntPtr ReleaseModelMetadata
          VB: Public ReleaseModelMetadata As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithGlobalThreadPools
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithGlobalThreadPools
      language: CSharp
      name:
        CSharp: CreateEnvWithGlobalThreadPools
        VB: CreateEnvWithGlobalThreadPools
      nameWithType:
        CSharp: OrtApi.CreateEnvWithGlobalThreadPools
        VB: OrtApi.CreateEnvWithGlobalThreadPools
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithGlobalThreadPools
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithGlobalThreadPools
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateEnvWithGlobalThreadPools
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 150
      syntax:
        content:
          CSharp: public IntPtr CreateEnvWithGlobalThreadPools
          VB: Public CreateEnvWithGlobalThreadPools As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.DisablePerSessionThreads
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.DisablePerSessionThreads
      language: CSharp
      name:
        CSharp: DisablePerSessionThreads
        VB: DisablePerSessionThreads
      nameWithType:
        CSharp: OrtApi.DisablePerSessionThreads
        VB: OrtApi.DisablePerSessionThreads
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.DisablePerSessionThreads
        VB: Microsoft.ML.OnnxRuntime.OrtApi.DisablePerSessionThreads
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: DisablePerSessionThreads
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 151
      syntax:
        content:
          CSharp: public IntPtr DisablePerSessionThreads
          VB: Public DisablePerSessionThreads As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateThreadingOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateThreadingOptions
      language: CSharp
      name:
        CSharp: CreateThreadingOptions
        VB: CreateThreadingOptions
      nameWithType:
        CSharp: OrtApi.CreateThreadingOptions
        VB: OrtApi.CreateThreadingOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateThreadingOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateThreadingOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateThreadingOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 152
      syntax:
        content:
          CSharp: public IntPtr CreateThreadingOptions
          VB: Public CreateThreadingOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseThreadingOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseThreadingOptions
      language: CSharp
      name:
        CSharp: ReleaseThreadingOptions
        VB: ReleaseThreadingOptions
      nameWithType:
        CSharp: OrtApi.ReleaseThreadingOptions
        VB: OrtApi.ReleaseThreadingOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseThreadingOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseThreadingOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseThreadingOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 153
      syntax:
        content:
          CSharp: public IntPtr ReleaseThreadingOptions
          VB: Public ReleaseThreadingOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetCustomMetadataMapKeys
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetCustomMetadataMapKeys
      language: CSharp
      name:
        CSharp: ModelMetadataGetCustomMetadataMapKeys
        VB: ModelMetadataGetCustomMetadataMapKeys
      nameWithType:
        CSharp: OrtApi.ModelMetadataGetCustomMetadataMapKeys
        VB: OrtApi.ModelMetadataGetCustomMetadataMapKeys
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetCustomMetadataMapKeys
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetCustomMetadataMapKeys
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ModelMetadataGetCustomMetadataMapKeys
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 154
      syntax:
        content:
          CSharp: public IntPtr ModelMetadataGetCustomMetadataMapKeys
          VB: Public ModelMetadataGetCustomMetadataMapKeys As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.AddFreeDimensionOverrideByName
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.AddFreeDimensionOverrideByName
      language: CSharp
      name:
        CSharp: AddFreeDimensionOverrideByName
        VB: AddFreeDimensionOverrideByName
      nameWithType:
        CSharp: OrtApi.AddFreeDimensionOverrideByName
        VB: OrtApi.AddFreeDimensionOverrideByName
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.AddFreeDimensionOverrideByName
        VB: Microsoft.ML.OnnxRuntime.OrtApi.AddFreeDimensionOverrideByName
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AddFreeDimensionOverrideByName
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 155
      syntax:
        content:
          CSharp: public IntPtr AddFreeDimensionOverrideByName
          VB: Public AddFreeDimensionOverrideByName As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetAvailableProviders
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetAvailableProviders
      language: CSharp
      name:
        CSharp: GetAvailableProviders
        VB: GetAvailableProviders
      nameWithType:
        CSharp: OrtApi.GetAvailableProviders
        VB: OrtApi.GetAvailableProviders
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetAvailableProviders
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetAvailableProviders
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetAvailableProviders
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 157
      syntax:
        content:
          CSharp: public IntPtr GetAvailableProviders
          VB: Public GetAvailableProviders As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseAvailableProviders
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseAvailableProviders
      language: CSharp
      name:
        CSharp: ReleaseAvailableProviders
        VB: ReleaseAvailableProviders
      nameWithType:
        CSharp: OrtApi.ReleaseAvailableProviders
        VB: OrtApi.ReleaseAvailableProviders
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseAvailableProviders
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseAvailableProviders
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseAvailableProviders
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 158
      syntax:
        content:
          CSharp: public IntPtr ReleaseAvailableProviders
          VB: Public ReleaseAvailableProviders As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorElementLength
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorElementLength
      language: CSharp
      name:
        CSharp: GetStringTensorElementLength
        VB: GetStringTensorElementLength
      nameWithType:
        CSharp: OrtApi.GetStringTensorElementLength
        VB: OrtApi.GetStringTensorElementLength
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorElementLength
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorElementLength
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetStringTensorElementLength
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 159
      syntax:
        content:
          CSharp: public IntPtr GetStringTensorElementLength
          VB: Public GetStringTensorElementLength As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorElement
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorElement
      language: CSharp
      name:
        CSharp: GetStringTensorElement
        VB: GetStringTensorElement
      nameWithType:
        CSharp: OrtApi.GetStringTensorElement
        VB: OrtApi.GetStringTensorElement
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorElement
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetStringTensorElement
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetStringTensorElement
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 160
      syntax:
        content:
          CSharp: public IntPtr GetStringTensorElement
          VB: Public GetStringTensorElement As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.FillStringTensorElement
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.FillStringTensorElement
      language: CSharp
      name:
        CSharp: FillStringTensorElement
        VB: FillStringTensorElement
      nameWithType:
        CSharp: OrtApi.FillStringTensorElement
        VB: OrtApi.FillStringTensorElement
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.FillStringTensorElement
        VB: Microsoft.ML.OnnxRuntime.OrtApi.FillStringTensorElement
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: FillStringTensorElement
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 161
      syntax:
        content:
          CSharp: public IntPtr FillStringTensorElement
          VB: Public FillStringTensorElement As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.AddSessionConfigEntry
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.AddSessionConfigEntry
      language: CSharp
      name:
        CSharp: AddSessionConfigEntry
        VB: AddSessionConfigEntry
      nameWithType:
        CSharp: OrtApi.AddSessionConfigEntry
        VB: OrtApi.AddSessionConfigEntry
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.AddSessionConfigEntry
        VB: Microsoft.ML.OnnxRuntime.OrtApi.AddSessionConfigEntry
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AddSessionConfigEntry
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 162
      syntax:
        content:
          CSharp: public IntPtr AddSessionConfigEntry
          VB: Public AddSessionConfigEntry As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateAllocator
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateAllocator
      language: CSharp
      name:
        CSharp: CreateAllocator
        VB: CreateAllocator
      nameWithType:
        CSharp: OrtApi.CreateAllocator
        VB: OrtApi.CreateAllocator
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateAllocator
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateAllocator
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateAllocator
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 164
      syntax:
        content:
          CSharp: public IntPtr CreateAllocator
          VB: Public CreateAllocator As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseAllocator
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseAllocator
      language: CSharp
      name:
        CSharp: ReleaseAllocator
        VB: ReleaseAllocator
      nameWithType:
        CSharp: OrtApi.ReleaseAllocator
        VB: OrtApi.ReleaseAllocator
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseAllocator
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseAllocator
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseAllocator
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 165
      syntax:
        content:
          CSharp: public IntPtr ReleaseAllocator
          VB: Public ReleaseAllocator As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.RunWithBinding
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.RunWithBinding
      language: CSharp
      name:
        CSharp: RunWithBinding
        VB: RunWithBinding
      nameWithType:
        CSharp: OrtApi.RunWithBinding
        VB: OrtApi.RunWithBinding
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.RunWithBinding
        VB: Microsoft.ML.OnnxRuntime.OrtApi.RunWithBinding
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RunWithBinding
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 166
      syntax:
        content:
          CSharp: public IntPtr RunWithBinding
          VB: Public RunWithBinding As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateIoBinding
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateIoBinding
      language: CSharp
      name:
        CSharp: CreateIoBinding
        VB: CreateIoBinding
      nameWithType:
        CSharp: OrtApi.CreateIoBinding
        VB: OrtApi.CreateIoBinding
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateIoBinding
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateIoBinding
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateIoBinding
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 167
      syntax:
        content:
          CSharp: public IntPtr CreateIoBinding
          VB: Public CreateIoBinding As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseIoBinding
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseIoBinding
      language: CSharp
      name:
        CSharp: ReleaseIoBinding
        VB: ReleaseIoBinding
      nameWithType:
        CSharp: OrtApi.ReleaseIoBinding
        VB: OrtApi.ReleaseIoBinding
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseIoBinding
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseIoBinding
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseIoBinding
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 168
      syntax:
        content:
          CSharp: public IntPtr ReleaseIoBinding
          VB: Public ReleaseIoBinding As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.BindInput
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.BindInput
      language: CSharp
      name:
        CSharp: BindInput
        VB: BindInput
      nameWithType:
        CSharp: OrtApi.BindInput
        VB: OrtApi.BindInput
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.BindInput
        VB: Microsoft.ML.OnnxRuntime.OrtApi.BindInput
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: BindInput
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 169
      syntax:
        content:
          CSharp: public IntPtr BindInput
          VB: Public BindInput As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.BindOutput
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.BindOutput
      language: CSharp
      name:
        CSharp: BindOutput
        VB: BindOutput
      nameWithType:
        CSharp: OrtApi.BindOutput
        VB: OrtApi.BindOutput
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.BindOutput
        VB: Microsoft.ML.OnnxRuntime.OrtApi.BindOutput
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: BindOutput
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 170
      syntax:
        content:
          CSharp: public IntPtr BindOutput
          VB: Public BindOutput As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.BindOutputToDevice
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.BindOutputToDevice
      language: CSharp
      name:
        CSharp: BindOutputToDevice
        VB: BindOutputToDevice
      nameWithType:
        CSharp: OrtApi.BindOutputToDevice
        VB: OrtApi.BindOutputToDevice
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.BindOutputToDevice
        VB: Microsoft.ML.OnnxRuntime.OrtApi.BindOutputToDevice
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: BindOutputToDevice
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 171
      syntax:
        content:
          CSharp: public IntPtr BindOutputToDevice
          VB: Public BindOutputToDevice As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetBoundOutputNames
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetBoundOutputNames
      language: CSharp
      name:
        CSharp: GetBoundOutputNames
        VB: GetBoundOutputNames
      nameWithType:
        CSharp: OrtApi.GetBoundOutputNames
        VB: OrtApi.GetBoundOutputNames
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetBoundOutputNames
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetBoundOutputNames
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetBoundOutputNames
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 172
      syntax:
        content:
          CSharp: public IntPtr GetBoundOutputNames
          VB: Public GetBoundOutputNames As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetBoundOutputValues
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetBoundOutputValues
      language: CSharp
      name:
        CSharp: GetBoundOutputValues
        VB: GetBoundOutputValues
      nameWithType:
        CSharp: OrtApi.GetBoundOutputValues
        VB: OrtApi.GetBoundOutputValues
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetBoundOutputValues
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetBoundOutputValues
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetBoundOutputValues
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 173
      syntax:
        content:
          CSharp: public IntPtr GetBoundOutputValues
          VB: Public GetBoundOutputValues As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ClearBoundInputs
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ClearBoundInputs
      language: CSharp
      name:
        CSharp: ClearBoundInputs
        VB: ClearBoundInputs
      nameWithType:
        CSharp: OrtApi.ClearBoundInputs
        VB: OrtApi.ClearBoundInputs
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ClearBoundInputs
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ClearBoundInputs
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ClearBoundInputs
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 174
      syntax:
        content:
          CSharp: public IntPtr ClearBoundInputs
          VB: Public ClearBoundInputs As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ClearBoundOutputs
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ClearBoundOutputs
      language: CSharp
      name:
        CSharp: ClearBoundOutputs
        VB: ClearBoundOutputs
      nameWithType:
        CSharp: OrtApi.ClearBoundOutputs
        VB: OrtApi.ClearBoundOutputs
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ClearBoundOutputs
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ClearBoundOutputs
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ClearBoundOutputs
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 175
      syntax:
        content:
          CSharp: public IntPtr ClearBoundOutputs
          VB: Public ClearBoundOutputs As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.TensorAt
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.TensorAt
      language: CSharp
      name:
        CSharp: TensorAt
        VB: TensorAt
      nameWithType:
        CSharp: OrtApi.TensorAt
        VB: OrtApi.TensorAt
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.TensorAt
        VB: Microsoft.ML.OnnxRuntime.OrtApi.TensorAt
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: TensorAt
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 176
      syntax:
        content:
          CSharp: public IntPtr TensorAt
          VB: Public TensorAt As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateAndRegisterAllocator
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateAndRegisterAllocator
      language: CSharp
      name:
        CSharp: CreateAndRegisterAllocator
        VB: CreateAndRegisterAllocator
      nameWithType:
        CSharp: OrtApi.CreateAndRegisterAllocator
        VB: OrtApi.CreateAndRegisterAllocator
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateAndRegisterAllocator
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateAndRegisterAllocator
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateAndRegisterAllocator
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 177
      syntax:
        content:
          CSharp: public IntPtr CreateAndRegisterAllocator
          VB: Public CreateAndRegisterAllocator As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetLanguageProjection
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetLanguageProjection
      language: CSharp
      name:
        CSharp: SetLanguageProjection
        VB: SetLanguageProjection
      nameWithType:
        CSharp: OrtApi.SetLanguageProjection
        VB: OrtApi.SetLanguageProjection
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetLanguageProjection
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetLanguageProjection
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetLanguageProjection
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 178
      syntax:
        content:
          CSharp: public IntPtr SetLanguageProjection
          VB: Public SetLanguageProjection As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetProfilingStartTimeNs
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionGetProfilingStartTimeNs
      language: CSharp
      name:
        CSharp: SessionGetProfilingStartTimeNs
        VB: SessionGetProfilingStartTimeNs
      nameWithType:
        CSharp: OrtApi.SessionGetProfilingStartTimeNs
        VB: OrtApi.SessionGetProfilingStartTimeNs
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetProfilingStartTimeNs
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionGetProfilingStartTimeNs
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionGetProfilingStartTimeNs
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 179
      syntax:
        content:
          CSharp: public IntPtr SessionGetProfilingStartTimeNs
          VB: Public SessionGetProfilingStartTimeNs As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalIntraOpNumThreads
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalIntraOpNumThreads
      language: CSharp
      name:
        CSharp: SetGlobalIntraOpNumThreads
        VB: SetGlobalIntraOpNumThreads
      nameWithType:
        CSharp: OrtApi.SetGlobalIntraOpNumThreads
        VB: OrtApi.SetGlobalIntraOpNumThreads
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalIntraOpNumThreads
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalIntraOpNumThreads
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetGlobalIntraOpNumThreads
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 180
      syntax:
        content:
          CSharp: public IntPtr SetGlobalIntraOpNumThreads
          VB: Public SetGlobalIntraOpNumThreads As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalInterOpNumThreads
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalInterOpNumThreads
      language: CSharp
      name:
        CSharp: SetGlobalInterOpNumThreads
        VB: SetGlobalInterOpNumThreads
      nameWithType:
        CSharp: OrtApi.SetGlobalInterOpNumThreads
        VB: OrtApi.SetGlobalInterOpNumThreads
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalInterOpNumThreads
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalInterOpNumThreads
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetGlobalInterOpNumThreads
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 181
      syntax:
        content:
          CSharp: public IntPtr SetGlobalInterOpNumThreads
          VB: Public SetGlobalInterOpNumThreads As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalSpinControl
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalSpinControl
      language: CSharp
      name:
        CSharp: SetGlobalSpinControl
        VB: SetGlobalSpinControl
      nameWithType:
        CSharp: OrtApi.SetGlobalSpinControl
        VB: OrtApi.SetGlobalSpinControl
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalSpinControl
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalSpinControl
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetGlobalSpinControl
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 182
      syntax:
        content:
          CSharp: public IntPtr SetGlobalSpinControl
          VB: Public SetGlobalSpinControl As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.AddInitializer
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.AddInitializer
      language: CSharp
      name:
        CSharp: AddInitializer
        VB: AddInitializer
      nameWithType:
        CSharp: OrtApi.AddInitializer
        VB: OrtApi.AddInitializer
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.AddInitializer
        VB: Microsoft.ML.OnnxRuntime.OrtApi.AddInitializer
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AddInitializer
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 183
      syntax:
        content:
          CSharp: public IntPtr AddInitializer
          VB: Public AddInitializer As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithCustomLoggerAndGlobalThreadPools
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithCustomLoggerAndGlobalThreadPools
      language: CSharp
      name:
        CSharp: CreateEnvWithCustomLoggerAndGlobalThreadPools
        VB: CreateEnvWithCustomLoggerAndGlobalThreadPools
      nameWithType:
        CSharp: OrtApi.CreateEnvWithCustomLoggerAndGlobalThreadPools
        VB: OrtApi.CreateEnvWithCustomLoggerAndGlobalThreadPools
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithCustomLoggerAndGlobalThreadPools
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateEnvWithCustomLoggerAndGlobalThreadPools
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateEnvWithCustomLoggerAndGlobalThreadPools
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 184
      syntax:
        content:
          CSharp: public IntPtr CreateEnvWithCustomLoggerAndGlobalThreadPools
          VB: Public CreateEnvWithCustomLoggerAndGlobalThreadPools As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_CUDA
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_CUDA
      language: CSharp
      name:
        CSharp: SessionOptionsAppendExecutionProvider_CUDA
        VB: SessionOptionsAppendExecutionProvider_CUDA
      nameWithType:
        CSharp: OrtApi.SessionOptionsAppendExecutionProvider_CUDA
        VB: OrtApi.SessionOptionsAppendExecutionProvider_CUDA
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_CUDA
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_CUDA
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionOptionsAppendExecutionProvider_CUDA
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 185
      syntax:
        content:
          CSharp: public IntPtr SessionOptionsAppendExecutionProvider_CUDA
          VB: Public SessionOptionsAppendExecutionProvider_CUDA As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_ROCM
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_ROCM
      language: CSharp
      name:
        CSharp: SessionOptionsAppendExecutionProvider_ROCM
        VB: SessionOptionsAppendExecutionProvider_ROCM
      nameWithType:
        CSharp: OrtApi.SessionOptionsAppendExecutionProvider_ROCM
        VB: OrtApi.SessionOptionsAppendExecutionProvider_ROCM
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_ROCM
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_ROCM
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionOptionsAppendExecutionProvider_ROCM
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 186
      syntax:
        content:
          CSharp: public IntPtr SessionOptionsAppendExecutionProvider_ROCM
          VB: Public SessionOptionsAppendExecutionProvider_ROCM As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_OpenVINO
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_OpenVINO
      language: CSharp
      name:
        CSharp: SessionOptionsAppendExecutionProvider_OpenVINO
        VB: SessionOptionsAppendExecutionProvider_OpenVINO
      nameWithType:
        CSharp: OrtApi.SessionOptionsAppendExecutionProvider_OpenVINO
        VB: OrtApi.SessionOptionsAppendExecutionProvider_OpenVINO
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_OpenVINO
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_OpenVINO
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionOptionsAppendExecutionProvider_OpenVINO
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 187
      syntax:
        content:
          CSharp: public IntPtr SessionOptionsAppendExecutionProvider_OpenVINO
          VB: Public SessionOptionsAppendExecutionProvider_OpenVINO As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalDenormalAsZero
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalDenormalAsZero
      language: CSharp
      name:
        CSharp: SetGlobalDenormalAsZero
        VB: SetGlobalDenormalAsZero
      nameWithType:
        CSharp: OrtApi.SetGlobalDenormalAsZero
        VB: OrtApi.SetGlobalDenormalAsZero
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalDenormalAsZero
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalDenormalAsZero
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetGlobalDenormalAsZero
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 188
      syntax:
        content:
          CSharp: public IntPtr SetGlobalDenormalAsZero
          VB: Public SetGlobalDenormalAsZero As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateArenaCfg
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateArenaCfg
      language: CSharp
      name:
        CSharp: CreateArenaCfg
        VB: CreateArenaCfg
      nameWithType:
        CSharp: OrtApi.CreateArenaCfg
        VB: OrtApi.CreateArenaCfg
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateArenaCfg
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateArenaCfg
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateArenaCfg
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 189
      syntax:
        content:
          CSharp: public IntPtr CreateArenaCfg
          VB: Public CreateArenaCfg As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseArenaCfg
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseArenaCfg
      language: CSharp
      name:
        CSharp: ReleaseArenaCfg
        VB: ReleaseArenaCfg
      nameWithType:
        CSharp: OrtApi.ReleaseArenaCfg
        VB: OrtApi.ReleaseArenaCfg
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseArenaCfg
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseArenaCfg
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseArenaCfg
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 190
      syntax:
        content:
          CSharp: public IntPtr ReleaseArenaCfg
          VB: Public ReleaseArenaCfg As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetGraphDescription
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetGraphDescription
      language: CSharp
      name:
        CSharp: ModelMetadataGetGraphDescription
        VB: ModelMetadataGetGraphDescription
      nameWithType:
        CSharp: OrtApi.ModelMetadataGetGraphDescription
        VB: OrtApi.ModelMetadataGetGraphDescription
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetGraphDescription
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ModelMetadataGetGraphDescription
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ModelMetadataGetGraphDescription
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 191
      syntax:
        content:
          CSharp: public IntPtr ModelMetadataGetGraphDescription
          VB: Public ModelMetadataGetGraphDescription As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_TensorRT
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_TensorRT
      language: CSharp
      name:
        CSharp: SessionOptionsAppendExecutionProvider_TensorRT
        VB: SessionOptionsAppendExecutionProvider_TensorRT
      nameWithType:
        CSharp: OrtApi.SessionOptionsAppendExecutionProvider_TensorRT
        VB: OrtApi.SessionOptionsAppendExecutionProvider_TensorRT
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_TensorRT
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_TensorRT
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionOptionsAppendExecutionProvider_TensorRT
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 192
      syntax:
        content:
          CSharp: public IntPtr SessionOptionsAppendExecutionProvider_TensorRT
          VB: Public SessionOptionsAppendExecutionProvider_TensorRT As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetCurrentGpuDeviceId
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetCurrentGpuDeviceId
      language: CSharp
      name:
        CSharp: SetCurrentGpuDeviceId
        VB: SetCurrentGpuDeviceId
      nameWithType:
        CSharp: OrtApi.SetCurrentGpuDeviceId
        VB: OrtApi.SetCurrentGpuDeviceId
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetCurrentGpuDeviceId
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetCurrentGpuDeviceId
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetCurrentGpuDeviceId
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 193
      syntax:
        content:
          CSharp: public IntPtr SetCurrentGpuDeviceId
          VB: Public SetCurrentGpuDeviceId As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetCurrentGpuDeviceId
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetCurrentGpuDeviceId
      language: CSharp
      name:
        CSharp: GetCurrentGpuDeviceId
        VB: GetCurrentGpuDeviceId
      nameWithType:
        CSharp: OrtApi.GetCurrentGpuDeviceId
        VB: OrtApi.GetCurrentGpuDeviceId
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetCurrentGpuDeviceId
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetCurrentGpuDeviceId
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetCurrentGpuDeviceId
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 194
      syntax:
        content:
          CSharp: public IntPtr GetCurrentGpuDeviceId
          VB: Public GetCurrentGpuDeviceId As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttributeArray_float
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttributeArray_float
      language: CSharp
      name:
        CSharp: KernelInfoGetAttributeArray_float
        VB: KernelInfoGetAttributeArray_float
      nameWithType:
        CSharp: OrtApi.KernelInfoGetAttributeArray_float
        VB: OrtApi.KernelInfoGetAttributeArray_float
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttributeArray_float
        VB: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttributeArray_float
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: KernelInfoGetAttributeArray_float
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 195
      syntax:
        content:
          CSharp: public IntPtr KernelInfoGetAttributeArray_float
          VB: Public KernelInfoGetAttributeArray_float As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttributeArray_int64
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttributeArray_int64
      language: CSharp
      name:
        CSharp: KernelInfoGetAttributeArray_int64
        VB: KernelInfoGetAttributeArray_int64
      nameWithType:
        CSharp: OrtApi.KernelInfoGetAttributeArray_int64
        VB: OrtApi.KernelInfoGetAttributeArray_int64
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttributeArray_int64
        VB: Microsoft.ML.OnnxRuntime.OrtApi.KernelInfoGetAttributeArray_int64
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: KernelInfoGetAttributeArray_int64
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 196
      syntax:
        content:
          CSharp: public IntPtr KernelInfoGetAttributeArray_int64
          VB: Public KernelInfoGetAttributeArray_int64 As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateArenaCfgV2
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateArenaCfgV2
      language: CSharp
      name:
        CSharp: CreateArenaCfgV2
        VB: CreateArenaCfgV2
      nameWithType:
        CSharp: OrtApi.CreateArenaCfgV2
        VB: OrtApi.CreateArenaCfgV2
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateArenaCfgV2
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateArenaCfgV2
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateArenaCfgV2
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 197
      syntax:
        content:
          CSharp: public IntPtr CreateArenaCfgV2
          VB: Public CreateArenaCfgV2 As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.AddRunConfigEntry
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.AddRunConfigEntry
      language: CSharp
      name:
        CSharp: AddRunConfigEntry
        VB: AddRunConfigEntry
      nameWithType:
        CSharp: OrtApi.AddRunConfigEntry
        VB: OrtApi.AddRunConfigEntry
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.AddRunConfigEntry
        VB: Microsoft.ML.OnnxRuntime.OrtApi.AddRunConfigEntry
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AddRunConfigEntry
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 198
      syntax:
        content:
          CSharp: public IntPtr AddRunConfigEntry
          VB: Public AddRunConfigEntry As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreatePrepackedWeightsContainer
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreatePrepackedWeightsContainer
      language: CSharp
      name:
        CSharp: CreatePrepackedWeightsContainer
        VB: CreatePrepackedWeightsContainer
      nameWithType:
        CSharp: OrtApi.CreatePrepackedWeightsContainer
        VB: OrtApi.CreatePrepackedWeightsContainer
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreatePrepackedWeightsContainer
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreatePrepackedWeightsContainer
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreatePrepackedWeightsContainer
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 199
      syntax:
        content:
          CSharp: public IntPtr CreatePrepackedWeightsContainer
          VB: Public CreatePrepackedWeightsContainer As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleasePrepackedWeightsContainer
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleasePrepackedWeightsContainer
      language: CSharp
      name:
        CSharp: ReleasePrepackedWeightsContainer
        VB: ReleasePrepackedWeightsContainer
      nameWithType:
        CSharp: OrtApi.ReleasePrepackedWeightsContainer
        VB: OrtApi.ReleasePrepackedWeightsContainer
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleasePrepackedWeightsContainer
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleasePrepackedWeightsContainer
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleasePrepackedWeightsContainer
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 200
      syntax:
        content:
          CSharp: public IntPtr ReleasePrepackedWeightsContainer
          VB: Public ReleasePrepackedWeightsContainer As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionWithPrepackedWeightsContainer
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionWithPrepackedWeightsContainer
      language: CSharp
      name:
        CSharp: CreateSessionWithPrepackedWeightsContainer
        VB: CreateSessionWithPrepackedWeightsContainer
      nameWithType:
        CSharp: OrtApi.CreateSessionWithPrepackedWeightsContainer
        VB: OrtApi.CreateSessionWithPrepackedWeightsContainer
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionWithPrepackedWeightsContainer
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionWithPrepackedWeightsContainer
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateSessionWithPrepackedWeightsContainer
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 201
      syntax:
        content:
          CSharp: public IntPtr CreateSessionWithPrepackedWeightsContainer
          VB: Public CreateSessionWithPrepackedWeightsContainer As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionFromArrayWithPrepackedWeightsContainer
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionFromArrayWithPrepackedWeightsContainer
      language: CSharp
      name:
        CSharp: CreateSessionFromArrayWithPrepackedWeightsContainer
        VB: CreateSessionFromArrayWithPrepackedWeightsContainer
      nameWithType:
        CSharp: OrtApi.CreateSessionFromArrayWithPrepackedWeightsContainer
        VB: OrtApi.CreateSessionFromArrayWithPrepackedWeightsContainer
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionFromArrayWithPrepackedWeightsContainer
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateSessionFromArrayWithPrepackedWeightsContainer
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateSessionFromArrayWithPrepackedWeightsContainer
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 202
      syntax:
        content:
          CSharp: public IntPtr CreateSessionFromArrayWithPrepackedWeightsContainer
          VB: Public CreateSessionFromArrayWithPrepackedWeightsContainer As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_TensorRT_V2
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_TensorRT_V2
      language: CSharp
      name:
        CSharp: SessionOptionsAppendExecutionProvider_TensorRT_V2
        VB: SessionOptionsAppendExecutionProvider_TensorRT_V2
      nameWithType:
        CSharp: OrtApi.SessionOptionsAppendExecutionProvider_TensorRT_V2
        VB: OrtApi.SessionOptionsAppendExecutionProvider_TensorRT_V2
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_TensorRT_V2
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_TensorRT_V2
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionOptionsAppendExecutionProvider_TensorRT_V2
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 203
      syntax:
        content:
          CSharp: public IntPtr SessionOptionsAppendExecutionProvider_TensorRT_V2
          VB: Public SessionOptionsAppendExecutionProvider_TensorRT_V2 As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorRTProviderOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorRTProviderOptions
      language: CSharp
      name:
        CSharp: CreateTensorRTProviderOptions
        VB: CreateTensorRTProviderOptions
      nameWithType:
        CSharp: OrtApi.CreateTensorRTProviderOptions
        VB: OrtApi.CreateTensorRTProviderOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorRTProviderOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateTensorRTProviderOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateTensorRTProviderOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 204
      syntax:
        content:
          CSharp: public IntPtr CreateTensorRTProviderOptions
          VB: Public CreateTensorRTProviderOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.UpdateTensorRTProviderOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.UpdateTensorRTProviderOptions
      language: CSharp
      name:
        CSharp: UpdateTensorRTProviderOptions
        VB: UpdateTensorRTProviderOptions
      nameWithType:
        CSharp: OrtApi.UpdateTensorRTProviderOptions
        VB: OrtApi.UpdateTensorRTProviderOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.UpdateTensorRTProviderOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.UpdateTensorRTProviderOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UpdateTensorRTProviderOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 205
      syntax:
        content:
          CSharp: public IntPtr UpdateTensorRTProviderOptions
          VB: Public UpdateTensorRTProviderOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorRTProviderOptionsAsString
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetTensorRTProviderOptionsAsString
      language: CSharp
      name:
        CSharp: GetTensorRTProviderOptionsAsString
        VB: GetTensorRTProviderOptionsAsString
      nameWithType:
        CSharp: OrtApi.GetTensorRTProviderOptionsAsString
        VB: OrtApi.GetTensorRTProviderOptionsAsString
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorRTProviderOptionsAsString
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorRTProviderOptionsAsString
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTensorRTProviderOptionsAsString
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 206
      syntax:
        content:
          CSharp: public IntPtr GetTensorRTProviderOptionsAsString
          VB: Public GetTensorRTProviderOptionsAsString As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTensorRTProviderOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTensorRTProviderOptions
      language: CSharp
      name:
        CSharp: ReleaseTensorRTProviderOptions
        VB: ReleaseTensorRTProviderOptions
      nameWithType:
        CSharp: OrtApi.ReleaseTensorRTProviderOptions
        VB: OrtApi.ReleaseTensorRTProviderOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTensorRTProviderOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseTensorRTProviderOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseTensorRTProviderOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 207
      syntax:
        content:
          CSharp: public IntPtr ReleaseTensorRTProviderOptions
          VB: Public ReleaseTensorRTProviderOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.EnableOrtCustomOps
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.EnableOrtCustomOps
      language: CSharp
      name:
        CSharp: EnableOrtCustomOps
        VB: EnableOrtCustomOps
      nameWithType:
        CSharp: OrtApi.EnableOrtCustomOps
        VB: OrtApi.EnableOrtCustomOps
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.EnableOrtCustomOps
        VB: Microsoft.ML.OnnxRuntime.OrtApi.EnableOrtCustomOps
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: EnableOrtCustomOps
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 208
      syntax:
        content:
          CSharp: public IntPtr EnableOrtCustomOps
          VB: Public EnableOrtCustomOps As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.RegisterAllocator
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.RegisterAllocator
      language: CSharp
      name:
        CSharp: RegisterAllocator
        VB: RegisterAllocator
      nameWithType:
        CSharp: OrtApi.RegisterAllocator
        VB: OrtApi.RegisterAllocator
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.RegisterAllocator
        VB: Microsoft.ML.OnnxRuntime.OrtApi.RegisterAllocator
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RegisterAllocator
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 209
      syntax:
        content:
          CSharp: public IntPtr RegisterAllocator
          VB: Public RegisterAllocator As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.UnregisterAllocator
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.UnregisterAllocator
      language: CSharp
      name:
        CSharp: UnregisterAllocator
        VB: UnregisterAllocator
      nameWithType:
        CSharp: OrtApi.UnregisterAllocator
        VB: OrtApi.UnregisterAllocator
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.UnregisterAllocator
        VB: Microsoft.ML.OnnxRuntime.OrtApi.UnregisterAllocator
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UnregisterAllocator
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 210
      syntax:
        content:
          CSharp: public IntPtr UnregisterAllocator
          VB: Public UnregisterAllocator As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.IsSparseTensor
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.IsSparseTensor
      language: CSharp
      name:
        CSharp: IsSparseTensor
        VB: IsSparseTensor
      nameWithType:
        CSharp: OrtApi.IsSparseTensor
        VB: OrtApi.IsSparseTensor
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.IsSparseTensor
        VB: Microsoft.ML.OnnxRuntime.OrtApi.IsSparseTensor
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsSparseTensor
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 211
      syntax:
        content:
          CSharp: public IntPtr IsSparseTensor
          VB: Public IsSparseTensor As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateSparseTensorAsOrtValue
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateSparseTensorAsOrtValue
      language: CSharp
      name:
        CSharp: CreateSparseTensorAsOrtValue
        VB: CreateSparseTensorAsOrtValue
      nameWithType:
        CSharp: OrtApi.CreateSparseTensorAsOrtValue
        VB: OrtApi.CreateSparseTensorAsOrtValue
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateSparseTensorAsOrtValue
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateSparseTensorAsOrtValue
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateSparseTensorAsOrtValue
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 212
      syntax:
        content:
          CSharp: public IntPtr CreateSparseTensorAsOrtValue
          VB: Public CreateSparseTensorAsOrtValue As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorCoo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorCoo
      language: CSharp
      name:
        CSharp: FillSparseTensorCoo
        VB: FillSparseTensorCoo
      nameWithType:
        CSharp: OrtApi.FillSparseTensorCoo
        VB: OrtApi.FillSparseTensorCoo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorCoo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorCoo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: FillSparseTensorCoo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 213
      syntax:
        content:
          CSharp: public IntPtr FillSparseTensorCoo
          VB: Public FillSparseTensorCoo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorCsr
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorCsr
      language: CSharp
      name:
        CSharp: FillSparseTensorCsr
        VB: FillSparseTensorCsr
      nameWithType:
        CSharp: OrtApi.FillSparseTensorCsr
        VB: OrtApi.FillSparseTensorCsr
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorCsr
        VB: Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorCsr
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: FillSparseTensorCsr
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 214
      syntax:
        content:
          CSharp: public IntPtr FillSparseTensorCsr
          VB: Public FillSparseTensorCsr As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorBlockSparse
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorBlockSparse
      language: CSharp
      name:
        CSharp: FillSparseTensorBlockSparse
        VB: FillSparseTensorBlockSparse
      nameWithType:
        CSharp: OrtApi.FillSparseTensorBlockSparse
        VB: OrtApi.FillSparseTensorBlockSparse
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorBlockSparse
        VB: Microsoft.ML.OnnxRuntime.OrtApi.FillSparseTensorBlockSparse
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: FillSparseTensorBlockSparse
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 215
      syntax:
        content:
          CSharp: public IntPtr FillSparseTensorBlockSparse
          VB: Public FillSparseTensorBlockSparse As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateSparseTensorWithValuesAsOrtValue
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateSparseTensorWithValuesAsOrtValue
      language: CSharp
      name:
        CSharp: CreateSparseTensorWithValuesAsOrtValue
        VB: CreateSparseTensorWithValuesAsOrtValue
      nameWithType:
        CSharp: OrtApi.CreateSparseTensorWithValuesAsOrtValue
        VB: OrtApi.CreateSparseTensorWithValuesAsOrtValue
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateSparseTensorWithValuesAsOrtValue
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateSparseTensorWithValuesAsOrtValue
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateSparseTensorWithValuesAsOrtValue
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 216
      syntax:
        content:
          CSharp: public IntPtr CreateSparseTensorWithValuesAsOrtValue
          VB: Public CreateSparseTensorWithValuesAsOrtValue As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.UseCooIndices
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.UseCooIndices
      language: CSharp
      name:
        CSharp: UseCooIndices
        VB: UseCooIndices
      nameWithType:
        CSharp: OrtApi.UseCooIndices
        VB: OrtApi.UseCooIndices
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.UseCooIndices
        VB: Microsoft.ML.OnnxRuntime.OrtApi.UseCooIndices
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UseCooIndices
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 217
      syntax:
        content:
          CSharp: public IntPtr UseCooIndices
          VB: Public UseCooIndices As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.UseCsrIndices
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.UseCsrIndices
      language: CSharp
      name:
        CSharp: UseCsrIndices
        VB: UseCsrIndices
      nameWithType:
        CSharp: OrtApi.UseCsrIndices
        VB: OrtApi.UseCsrIndices
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.UseCsrIndices
        VB: Microsoft.ML.OnnxRuntime.OrtApi.UseCsrIndices
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UseCsrIndices
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 218
      syntax:
        content:
          CSharp: public IntPtr UseCsrIndices
          VB: Public UseCsrIndices As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.UseBlockSparseIndices
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.UseBlockSparseIndices
      language: CSharp
      name:
        CSharp: UseBlockSparseIndices
        VB: UseBlockSparseIndices
      nameWithType:
        CSharp: OrtApi.UseBlockSparseIndices
        VB: OrtApi.UseBlockSparseIndices
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.UseBlockSparseIndices
        VB: Microsoft.ML.OnnxRuntime.OrtApi.UseBlockSparseIndices
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UseBlockSparseIndices
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 219
      syntax:
        content:
          CSharp: public IntPtr UseBlockSparseIndices
          VB: Public UseBlockSparseIndices As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorFormat
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorFormat
      language: CSharp
      name:
        CSharp: GetSparseTensorFormat
        VB: GetSparseTensorFormat
      nameWithType:
        CSharp: OrtApi.GetSparseTensorFormat
        VB: OrtApi.GetSparseTensorFormat
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorFormat
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorFormat
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetSparseTensorFormat
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 220
      syntax:
        content:
          CSharp: public IntPtr GetSparseTensorFormat
          VB: Public GetSparseTensorFormat As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorValuesTypeAndShape
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorValuesTypeAndShape
      language: CSharp
      name:
        CSharp: GetSparseTensorValuesTypeAndShape
        VB: GetSparseTensorValuesTypeAndShape
      nameWithType:
        CSharp: OrtApi.GetSparseTensorValuesTypeAndShape
        VB: OrtApi.GetSparseTensorValuesTypeAndShape
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorValuesTypeAndShape
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorValuesTypeAndShape
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetSparseTensorValuesTypeAndShape
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 221
      syntax:
        content:
          CSharp: public IntPtr GetSparseTensorValuesTypeAndShape
          VB: Public GetSparseTensorValuesTypeAndShape As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorValues
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorValues
      language: CSharp
      name:
        CSharp: GetSparseTensorValues
        VB: GetSparseTensorValues
      nameWithType:
        CSharp: OrtApi.GetSparseTensorValues
        VB: OrtApi.GetSparseTensorValues
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorValues
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorValues
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetSparseTensorValues
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 222
      syntax:
        content:
          CSharp: public IntPtr GetSparseTensorValues
          VB: Public GetSparseTensorValues As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorIndicesTypeShape
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorIndicesTypeShape
      language: CSharp
      name:
        CSharp: GetSparseTensorIndicesTypeShape
        VB: GetSparseTensorIndicesTypeShape
      nameWithType:
        CSharp: OrtApi.GetSparseTensorIndicesTypeShape
        VB: OrtApi.GetSparseTensorIndicesTypeShape
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorIndicesTypeShape
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorIndicesTypeShape
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetSparseTensorIndicesTypeShape
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 223
      syntax:
        content:
          CSharp: public IntPtr GetSparseTensorIndicesTypeShape
          VB: Public GetSparseTensorIndicesTypeShape As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorIndices
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorIndices
      language: CSharp
      name:
        CSharp: GetSparseTensorIndices
        VB: GetSparseTensorIndices
      nameWithType:
        CSharp: OrtApi.GetSparseTensorIndices
        VB: OrtApi.GetSparseTensorIndices
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorIndices
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetSparseTensorIndices
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetSparseTensorIndices
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 224
      syntax:
        content:
          CSharp: public IntPtr GetSparseTensorIndices
          VB: Public GetSparseTensorIndices As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.HasValue
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.HasValue
      language: CSharp
      name:
        CSharp: HasValue
        VB: HasValue
      nameWithType:
        CSharp: OrtApi.HasValue
        VB: OrtApi.HasValue
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.HasValue
        VB: Microsoft.ML.OnnxRuntime.OrtApi.HasValue
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: HasValue
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 225
      syntax:
        content:
          CSharp: public IntPtr HasValue
          VB: Public HasValue As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetGPUComputeStream
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetGPUComputeStream
      language: CSharp
      name:
        CSharp: KernelContext_GetGPUComputeStream
        VB: KernelContext_GetGPUComputeStream
      nameWithType:
        CSharp: OrtApi.KernelContext_GetGPUComputeStream
        VB: OrtApi.KernelContext_GetGPUComputeStream
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetGPUComputeStream
        VB: Microsoft.ML.OnnxRuntime.OrtApi.KernelContext_GetGPUComputeStream
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: KernelContext_GetGPUComputeStream
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 226
      syntax:
        content:
          CSharp: public IntPtr KernelContext_GetGPUComputeStream
          VB: Public KernelContext_GetGPUComputeStream As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorMemoryInfo
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetTensorMemoryInfo
      language: CSharp
      name:
        CSharp: GetTensorMemoryInfo
        VB: GetTensorMemoryInfo
      nameWithType:
        CSharp: OrtApi.GetTensorMemoryInfo
        VB: OrtApi.GetTensorMemoryInfo
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorMemoryInfo
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetTensorMemoryInfo
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTensorMemoryInfo
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 227
      syntax:
        content:
          CSharp: public IntPtr GetTensorMemoryInfo
          VB: Public GetTensorMemoryInfo As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetExecutionProviderApi
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetExecutionProviderApi
      language: CSharp
      name:
        CSharp: GetExecutionProviderApi
        VB: GetExecutionProviderApi
      nameWithType:
        CSharp: OrtApi.GetExecutionProviderApi
        VB: OrtApi.GetExecutionProviderApi
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetExecutionProviderApi
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetExecutionProviderApi
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetExecutionProviderApi
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 228
      syntax:
        content:
          CSharp: public IntPtr GetExecutionProviderApi
          VB: Public GetExecutionProviderApi As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomCreateThreadFn
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomCreateThreadFn
      language: CSharp
      name:
        CSharp: SessionOptionsSetCustomCreateThreadFn
        VB: SessionOptionsSetCustomCreateThreadFn
      nameWithType:
        CSharp: OrtApi.SessionOptionsSetCustomCreateThreadFn
        VB: OrtApi.SessionOptionsSetCustomCreateThreadFn
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomCreateThreadFn
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomCreateThreadFn
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionOptionsSetCustomCreateThreadFn
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 229
      syntax:
        content:
          CSharp: public IntPtr SessionOptionsSetCustomCreateThreadFn
          VB: Public SessionOptionsSetCustomCreateThreadFn As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomThreadCreationOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomThreadCreationOptions
      language: CSharp
      name:
        CSharp: SessionOptionsSetCustomThreadCreationOptions
        VB: SessionOptionsSetCustomThreadCreationOptions
      nameWithType:
        CSharp: OrtApi.SessionOptionsSetCustomThreadCreationOptions
        VB: OrtApi.SessionOptionsSetCustomThreadCreationOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomThreadCreationOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomThreadCreationOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionOptionsSetCustomThreadCreationOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 230
      syntax:
        content:
          CSharp: public IntPtr SessionOptionsSetCustomThreadCreationOptions
          VB: Public SessionOptionsSetCustomThreadCreationOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomJoinThreadFn
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomJoinThreadFn
      language: CSharp
      name:
        CSharp: SessionOptionsSetCustomJoinThreadFn
        VB: SessionOptionsSetCustomJoinThreadFn
      nameWithType:
        CSharp: OrtApi.SessionOptionsSetCustomJoinThreadFn
        VB: OrtApi.SessionOptionsSetCustomJoinThreadFn
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomJoinThreadFn
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsSetCustomJoinThreadFn
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionOptionsSetCustomJoinThreadFn
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 231
      syntax:
        content:
          CSharp: public IntPtr SessionOptionsSetCustomJoinThreadFn
          VB: Public SessionOptionsSetCustomJoinThreadFn As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomCreateThreadFn
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomCreateThreadFn
      language: CSharp
      name:
        CSharp: SetGlobalCustomCreateThreadFn
        VB: SetGlobalCustomCreateThreadFn
      nameWithType:
        CSharp: OrtApi.SetGlobalCustomCreateThreadFn
        VB: OrtApi.SetGlobalCustomCreateThreadFn
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomCreateThreadFn
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomCreateThreadFn
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetGlobalCustomCreateThreadFn
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 232
      syntax:
        content:
          CSharp: public IntPtr SetGlobalCustomCreateThreadFn
          VB: Public SetGlobalCustomCreateThreadFn As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomThreadCreationOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomThreadCreationOptions
      language: CSharp
      name:
        CSharp: SetGlobalCustomThreadCreationOptions
        VB: SetGlobalCustomThreadCreationOptions
      nameWithType:
        CSharp: OrtApi.SetGlobalCustomThreadCreationOptions
        VB: OrtApi.SetGlobalCustomThreadCreationOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomThreadCreationOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomThreadCreationOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetGlobalCustomThreadCreationOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 233
      syntax:
        content:
          CSharp: public IntPtr SetGlobalCustomThreadCreationOptions
          VB: Public SetGlobalCustomThreadCreationOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomJoinThreadFn
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomJoinThreadFn
      language: CSharp
      name:
        CSharp: SetGlobalCustomJoinThreadFn
        VB: SetGlobalCustomJoinThreadFn
      nameWithType:
        CSharp: OrtApi.SetGlobalCustomJoinThreadFn
        VB: OrtApi.SetGlobalCustomJoinThreadFn
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomJoinThreadFn
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SetGlobalCustomJoinThreadFn
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetGlobalCustomJoinThreadFn
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 234
      syntax:
        content:
          CSharp: public IntPtr SetGlobalCustomJoinThreadFn
          VB: Public SetGlobalCustomJoinThreadFn As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SynchronizeBoundInputs
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SynchronizeBoundInputs
      language: CSharp
      name:
        CSharp: SynchronizeBoundInputs
        VB: SynchronizeBoundInputs
      nameWithType:
        CSharp: OrtApi.SynchronizeBoundInputs
        VB: OrtApi.SynchronizeBoundInputs
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SynchronizeBoundInputs
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SynchronizeBoundInputs
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SynchronizeBoundInputs
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 235
      syntax:
        content:
          CSharp: public IntPtr SynchronizeBoundInputs
          VB: Public SynchronizeBoundInputs As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SynchronizeBoundOutputs
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SynchronizeBoundOutputs
      language: CSharp
      name:
        CSharp: SynchronizeBoundOutputs
        VB: SynchronizeBoundOutputs
      nameWithType:
        CSharp: OrtApi.SynchronizeBoundOutputs
        VB: OrtApi.SynchronizeBoundOutputs
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SynchronizeBoundOutputs
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SynchronizeBoundOutputs
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SynchronizeBoundOutputs
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 236
      syntax:
        content:
          CSharp: public IntPtr SynchronizeBoundOutputs
          VB: Public SynchronizeBoundOutputs As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_CUDA_V2
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_CUDA_V2
      language: CSharp
      name:
        CSharp: SessionOptionsAppendExecutionProvider_CUDA_V2
        VB: SessionOptionsAppendExecutionProvider_CUDA_V2
      nameWithType:
        CSharp: OrtApi.SessionOptionsAppendExecutionProvider_CUDA_V2
        VB: OrtApi.SessionOptionsAppendExecutionProvider_CUDA_V2
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_CUDA_V2
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_CUDA_V2
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionOptionsAppendExecutionProvider_CUDA_V2
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 237
      syntax:
        content:
          CSharp: public IntPtr SessionOptionsAppendExecutionProvider_CUDA_V2
          VB: Public SessionOptionsAppendExecutionProvider_CUDA_V2 As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateCUDAProviderOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateCUDAProviderOptions
      language: CSharp
      name:
        CSharp: CreateCUDAProviderOptions
        VB: CreateCUDAProviderOptions
      nameWithType:
        CSharp: OrtApi.CreateCUDAProviderOptions
        VB: OrtApi.CreateCUDAProviderOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateCUDAProviderOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateCUDAProviderOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateCUDAProviderOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 238
      syntax:
        content:
          CSharp: public IntPtr CreateCUDAProviderOptions
          VB: Public CreateCUDAProviderOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.UpdateCUDAProviderOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.UpdateCUDAProviderOptions
      language: CSharp
      name:
        CSharp: UpdateCUDAProviderOptions
        VB: UpdateCUDAProviderOptions
      nameWithType:
        CSharp: OrtApi.UpdateCUDAProviderOptions
        VB: OrtApi.UpdateCUDAProviderOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.UpdateCUDAProviderOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.UpdateCUDAProviderOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UpdateCUDAProviderOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 239
      syntax:
        content:
          CSharp: public IntPtr UpdateCUDAProviderOptions
          VB: Public UpdateCUDAProviderOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.GetCUDAProviderOptionsAsString
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.GetCUDAProviderOptionsAsString
      language: CSharp
      name:
        CSharp: GetCUDAProviderOptionsAsString
        VB: GetCUDAProviderOptionsAsString
      nameWithType:
        CSharp: OrtApi.GetCUDAProviderOptionsAsString
        VB: OrtApi.GetCUDAProviderOptionsAsString
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.GetCUDAProviderOptionsAsString
        VB: Microsoft.ML.OnnxRuntime.OrtApi.GetCUDAProviderOptionsAsString
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetCUDAProviderOptionsAsString
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 240
      syntax:
        content:
          CSharp: public IntPtr GetCUDAProviderOptionsAsString
          VB: Public GetCUDAProviderOptionsAsString As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseCUDAProviderOptions
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseCUDAProviderOptions
      language: CSharp
      name:
        CSharp: ReleaseCUDAProviderOptions
        VB: ReleaseCUDAProviderOptions
      nameWithType:
        CSharp: OrtApi.ReleaseCUDAProviderOptions
        VB: OrtApi.ReleaseCUDAProviderOptions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseCUDAProviderOptions
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseCUDAProviderOptions
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseCUDAProviderOptions
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 241
      syntax:
        content:
          CSharp: public IntPtr ReleaseCUDAProviderOptions
          VB: Public ReleaseCUDAProviderOptions As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_MIGraphX
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_MIGraphX
      language: CSharp
      name:
        CSharp: SessionOptionsAppendExecutionProvider_MIGraphX
        VB: SessionOptionsAppendExecutionProvider_MIGraphX
      nameWithType:
        CSharp: OrtApi.SessionOptionsAppendExecutionProvider_MIGraphX
        VB: OrtApi.SessionOptionsAppendExecutionProvider_MIGraphX
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_MIGraphX
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider_MIGraphX
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionOptionsAppendExecutionProvider_MIGraphX
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 242
      syntax:
        content:
          CSharp: public IntPtr SessionOptionsAppendExecutionProvider_MIGraphX
          VB: Public SessionOptionsAppendExecutionProvider_MIGraphX As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.AddExternalInitializers
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.AddExternalInitializers
      language: CSharp
      name:
        CSharp: AddExternalInitializers
        VB: AddExternalInitializers
      nameWithType:
        CSharp: OrtApi.AddExternalInitializers
        VB: OrtApi.AddExternalInitializers
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.AddExternalInitializers
        VB: Microsoft.ML.OnnxRuntime.OrtApi.AddExternalInitializers
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AddExternalInitializers
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 243
      syntax:
        content:
          CSharp: public IntPtr AddExternalInitializers
          VB: Public AddExternalInitializers As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateOpAttr
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateOpAttr
      language: CSharp
      name:
        CSharp: CreateOpAttr
        VB: CreateOpAttr
      nameWithType:
        CSharp: OrtApi.CreateOpAttr
        VB: OrtApi.CreateOpAttr
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateOpAttr
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateOpAttr
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateOpAttr
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 244
      syntax:
        content:
          CSharp: public IntPtr CreateOpAttr
          VB: Public CreateOpAttr As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseOpAttr
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseOpAttr
      language: CSharp
      name:
        CSharp: ReleaseOpAttr
        VB: ReleaseOpAttr
      nameWithType:
        CSharp: OrtApi.ReleaseOpAttr
        VB: OrtApi.ReleaseOpAttr
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseOpAttr
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseOpAttr
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseOpAttr
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 245
      syntax:
        content:
          CSharp: public IntPtr ReleaseOpAttr
          VB: Public ReleaseOpAttr As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.CreateOp
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.CreateOp
      language: CSharp
      name:
        CSharp: CreateOp
        VB: CreateOp
      nameWithType:
        CSharp: OrtApi.CreateOp
        VB: OrtApi.CreateOp
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.CreateOp
        VB: Microsoft.ML.OnnxRuntime.OrtApi.CreateOp
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateOp
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 246
      syntax:
        content:
          CSharp: public IntPtr CreateOp
          VB: Public CreateOp As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.InvokeOp
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.InvokeOp
      language: CSharp
      name:
        CSharp: InvokeOp
        VB: InvokeOp
      nameWithType:
        CSharp: OrtApi.InvokeOp
        VB: OrtApi.InvokeOp
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.InvokeOp
        VB: Microsoft.ML.OnnxRuntime.OrtApi.InvokeOp
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: InvokeOp
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 247
      syntax:
        content:
          CSharp: public IntPtr InvokeOp
          VB: Public InvokeOp As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseOp
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.ReleaseOp
      language: CSharp
      name:
        CSharp: ReleaseOp
        VB: ReleaseOp
      nameWithType:
        CSharp: OrtApi.ReleaseOp
        VB: OrtApi.ReleaseOp
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseOp
        VB: Microsoft.ML.OnnxRuntime.OrtApi.ReleaseOp
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseOp
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 248
      syntax:
        content:
          CSharp: public IntPtr ReleaseOp
          VB: Public ReleaseOp As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider
      commentId: F:Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider
      language: CSharp
      name:
        CSharp: SessionOptionsAppendExecutionProvider
        VB: SessionOptionsAppendExecutionProvider
      nameWithType:
        CSharp: OrtApi.SessionOptionsAppendExecutionProvider
        VB: OrtApi.SessionOptionsAppendExecutionProvider
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider
        VB: Microsoft.ML.OnnxRuntime.OrtApi.SessionOptionsAppendExecutionProvider
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SessionOptionsAppendExecutionProvider
        path: ../src/Microsoft.ML.OnnxRuntime/NativeMethods.shared.cs
        startLine: 249
      syntax:
        content:
          CSharp: public IntPtr SessionOptionsAppendExecutionProvider
          VB: Public SessionOptionsAppendExecutionProvider As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.ML.OnnxRuntime.LogLevel
    commentId: T:Microsoft.ML.OnnxRuntime.LogLevel
    language: CSharp
    name:
      CSharp: LogLevel
      VB: LogLevel
    nameWithType:
      CSharp: LogLevel
      VB: LogLevel
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.LogLevel
      VB: Microsoft.ML.OnnxRuntime.LogLevel
    type: Enum
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: LogLevel
      path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
      startLine: 23
    summary: "\nLogging level used to specify amount of logging when\ncreating environment. The lower the value is the more logging\nwill be output. A specific value output includes everything\nthat higher values output.\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum LogLevel : int'
        VB: Public Enum LogLevel As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Microsoft.ML.OnnxRuntime.LogLevel.Verbose
      commentId: F:Microsoft.ML.OnnxRuntime.LogLevel.Verbose
      language: CSharp
      name:
        CSharp: Verbose
        VB: Verbose
      nameWithType:
        CSharp: LogLevel.Verbose
        VB: LogLevel.Verbose
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.LogLevel.Verbose
        VB: Microsoft.ML.OnnxRuntime.LogLevel.Verbose
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Verbose
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 25
      syntax:
        content:
          CSharp: Verbose = null
          VB: Verbose = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.LogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.LogLevel.Info
      commentId: F:Microsoft.ML.OnnxRuntime.LogLevel.Info
      language: CSharp
      name:
        CSharp: Info
        VB: Info
      nameWithType:
        CSharp: LogLevel.Info
        VB: LogLevel.Info
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.LogLevel.Info
        VB: Microsoft.ML.OnnxRuntime.LogLevel.Info
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Info
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 26
      syntax:
        content:
          CSharp: Info = null
          VB: Info = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.LogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.LogLevel.Warning
      commentId: F:Microsoft.ML.OnnxRuntime.LogLevel.Warning
      language: CSharp
      name:
        CSharp: Warning
        VB: Warning
      nameWithType:
        CSharp: LogLevel.Warning
        VB: LogLevel.Warning
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.LogLevel.Warning
        VB: Microsoft.ML.OnnxRuntime.LogLevel.Warning
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Warning
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 27
      syntax:
        content:
          CSharp: Warning = null
          VB: Warning = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.LogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.LogLevel.Error
      commentId: F:Microsoft.ML.OnnxRuntime.LogLevel.Error
      language: CSharp
      name:
        CSharp: Error
        VB: Error
      nameWithType:
        CSharp: LogLevel.Error
        VB: LogLevel.Error
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.LogLevel.Error
        VB: Microsoft.ML.OnnxRuntime.LogLevel.Error
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Error
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 28
      syntax:
        content:
          CSharp: Error = null
          VB: Error = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.LogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.LogLevel.Fatal
      commentId: F:Microsoft.ML.OnnxRuntime.LogLevel.Fatal
      language: CSharp
      name:
        CSharp: Fatal
        VB: Fatal
      nameWithType:
        CSharp: LogLevel.Fatal
        VB: LogLevel.Fatal
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.LogLevel.Fatal
        VB: Microsoft.ML.OnnxRuntime.LogLevel.Fatal
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Fatal
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 29
      syntax:
        content:
          CSharp: Fatal = null
          VB: Fatal = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.LogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
    commentId: T:Microsoft.ML.OnnxRuntime.OrtLanguageProjection
    language: CSharp
    name:
      CSharp: OrtLanguageProjection
      VB: OrtLanguageProjection
    nameWithType:
      CSharp: OrtLanguageProjection
      VB: OrtLanguageProjection
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
      VB: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
    type: Enum
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtLanguageProjection
      path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
      startLine: 35
    summary: "\nLanguage projection property for telemetry event for tracking the source usage of ONNXRUNTIME\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum OrtLanguageProjection : int'
        VB: Public Enum OrtLanguageProjection As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_C
      commentId: F:Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_C
      language: CSharp
      name:
        CSharp: ORT_PROJECTION_C
        VB: ORT_PROJECTION_C
      nameWithType:
        CSharp: OrtLanguageProjection.ORT_PROJECTION_C
        VB: OrtLanguageProjection.ORT_PROJECTION_C
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_C
        VB: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_C
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_PROJECTION_C
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 37
      syntax:
        content:
          CSharp: ORT_PROJECTION_C = null
          VB: ORT_PROJECTION_C = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_CPLUSPLUS
      commentId: F:Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_CPLUSPLUS
      language: CSharp
      name:
        CSharp: ORT_PROJECTION_CPLUSPLUS
        VB: ORT_PROJECTION_CPLUSPLUS
      nameWithType:
        CSharp: OrtLanguageProjection.ORT_PROJECTION_CPLUSPLUS
        VB: OrtLanguageProjection.ORT_PROJECTION_CPLUSPLUS
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_CPLUSPLUS
        VB: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_CPLUSPLUS
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_PROJECTION_CPLUSPLUS
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 38
      syntax:
        content:
          CSharp: ORT_PROJECTION_CPLUSPLUS = null
          VB: ORT_PROJECTION_CPLUSPLUS = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_CSHARP
      commentId: F:Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_CSHARP
      language: CSharp
      name:
        CSharp: ORT_PROJECTION_CSHARP
        VB: ORT_PROJECTION_CSHARP
      nameWithType:
        CSharp: OrtLanguageProjection.ORT_PROJECTION_CSHARP
        VB: OrtLanguageProjection.ORT_PROJECTION_CSHARP
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_CSHARP
        VB: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_CSHARP
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_PROJECTION_CSHARP
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 39
      syntax:
        content:
          CSharp: ORT_PROJECTION_CSHARP = null
          VB: ORT_PROJECTION_CSHARP = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_PYTHON
      commentId: F:Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_PYTHON
      language: CSharp
      name:
        CSharp: ORT_PROJECTION_PYTHON
        VB: ORT_PROJECTION_PYTHON
      nameWithType:
        CSharp: OrtLanguageProjection.ORT_PROJECTION_PYTHON
        VB: OrtLanguageProjection.ORT_PROJECTION_PYTHON
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_PYTHON
        VB: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_PYTHON
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_PROJECTION_PYTHON
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 40
      syntax:
        content:
          CSharp: ORT_PROJECTION_PYTHON = null
          VB: ORT_PROJECTION_PYTHON = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_JAVA
      commentId: F:Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_JAVA
      language: CSharp
      name:
        CSharp: ORT_PROJECTION_JAVA
        VB: ORT_PROJECTION_JAVA
      nameWithType:
        CSharp: OrtLanguageProjection.ORT_PROJECTION_JAVA
        VB: OrtLanguageProjection.ORT_PROJECTION_JAVA
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_JAVA
        VB: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_JAVA
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_PROJECTION_JAVA
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 41
      syntax:
        content:
          CSharp: ORT_PROJECTION_JAVA = null
          VB: ORT_PROJECTION_JAVA = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_WINML
      commentId: F:Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_WINML
      language: CSharp
      name:
        CSharp: ORT_PROJECTION_WINML
        VB: ORT_PROJECTION_WINML
      nameWithType:
        CSharp: OrtLanguageProjection.ORT_PROJECTION_WINML
        VB: OrtLanguageProjection.ORT_PROJECTION_WINML
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_WINML
        VB: Microsoft.ML.OnnxRuntime.OrtLanguageProjection.ORT_PROJECTION_WINML
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_PROJECTION_WINML
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 42
      syntax:
        content:
          CSharp: ORT_PROJECTION_WINML = null
          VB: ORT_PROJECTION_WINML = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Microsoft.ML.OnnxRuntime.OrtEnv
    commentId: T:Microsoft.ML.OnnxRuntime.OrtEnv
    language: CSharp
    name:
      CSharp: OrtEnv
      VB: OrtEnv
    nameWithType:
      CSharp: OrtEnv
      VB: OrtEnv
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtEnv
      VB: Microsoft.ML.OnnxRuntime.OrtEnv
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtEnv
      path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
      startLine: 48
    summary: "\nThis class initializes the process-global ONNX Runtime environment instance (OrtEnv)\n"
    example: []
    syntax:
      content:
        CSharp: 'public sealed class OrtEnv : SafeHandle'
        VB: >-
          Public NotInheritable Class OrtEnv

              Inherits SafeHandle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtEnv.Instance
      commentId: M:Microsoft.ML.OnnxRuntime.OrtEnv.Instance
      language: CSharp
      name:
        CSharp: Instance()
        VB: Instance()
      nameWithType:
        CSharp: OrtEnv.Instance()
        VB: OrtEnv.Instance()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtEnv.Instance()
        VB: Microsoft.ML.OnnxRuntime.OrtEnv.Instance()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Instance
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 91
      summary: "\nReturns an instance of OrtEnv\nIt returns the same instance on every call - `OrtEnv` is singleton\n"
      example: []
      syntax:
        content:
          CSharp: public static OrtEnv Instance()
          VB: Public Shared Function Instance As OrtEnv
        return:
          type: Microsoft.ML.OnnxRuntime.OrtEnv
          description: Returns a singleton instance of OrtEnv that represents native OrtEnv object
      overload: Microsoft.ML.OnnxRuntime.OrtEnv.Instance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.OrtEnv.EnableTelemetryEvents
      commentId: M:Microsoft.ML.OnnxRuntime.OrtEnv.EnableTelemetryEvents
      language: CSharp
      name:
        CSharp: EnableTelemetryEvents()
        VB: EnableTelemetryEvents()
      nameWithType:
        CSharp: OrtEnv.EnableTelemetryEvents()
        VB: OrtEnv.EnableTelemetryEvents()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtEnv.EnableTelemetryEvents()
        VB: Microsoft.ML.OnnxRuntime.OrtEnv.EnableTelemetryEvents()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: EnableTelemetryEvents
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 97
      summary: "\nEnable platform telemetry collection where applicable\n(currently only official Windows ORT builds have telemetry collection capabilities)\n"
      example: []
      syntax:
        content:
          CSharp: public void EnableTelemetryEvents()
          VB: Public Sub EnableTelemetryEvents
      overload: Microsoft.ML.OnnxRuntime.OrtEnv.EnableTelemetryEvents*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtEnv.DisableTelemetryEvents
      commentId: M:Microsoft.ML.OnnxRuntime.OrtEnv.DisableTelemetryEvents
      language: CSharp
      name:
        CSharp: DisableTelemetryEvents()
        VB: DisableTelemetryEvents()
      nameWithType:
        CSharp: OrtEnv.DisableTelemetryEvents()
        VB: OrtEnv.DisableTelemetryEvents()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtEnv.DisableTelemetryEvents()
        VB: Microsoft.ML.OnnxRuntime.OrtEnv.DisableTelemetryEvents()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: DisableTelemetryEvents
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 105
      summary: "\nDisable platform telemetry collection\n"
      example: []
      syntax:
        content:
          CSharp: public void DisableTelemetryEvents()
          VB: Public Sub DisableTelemetryEvents
      overload: Microsoft.ML.OnnxRuntime.OrtEnv.DisableTelemetryEvents*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtEnv.CreateAndRegisterAllocator(Microsoft.ML.OnnxRuntime.OrtMemoryInfo,Microsoft.ML.OnnxRuntime.OrtArenaCfg)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtEnv.CreateAndRegisterAllocator(Microsoft.ML.OnnxRuntime.OrtMemoryInfo,Microsoft.ML.OnnxRuntime.OrtArenaCfg)
      language: CSharp
      name:
        CSharp: CreateAndRegisterAllocator(OrtMemoryInfo, OrtArenaCfg)
        VB: CreateAndRegisterAllocator(OrtMemoryInfo, OrtArenaCfg)
      nameWithType:
        CSharp: OrtEnv.CreateAndRegisterAllocator(OrtMemoryInfo, OrtArenaCfg)
        VB: OrtEnv.CreateAndRegisterAllocator(OrtMemoryInfo, OrtArenaCfg)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtEnv.CreateAndRegisterAllocator(Microsoft.ML.OnnxRuntime.OrtMemoryInfo, Microsoft.ML.OnnxRuntime.OrtArenaCfg)
        VB: Microsoft.ML.OnnxRuntime.OrtEnv.CreateAndRegisterAllocator(Microsoft.ML.OnnxRuntime.OrtMemoryInfo, Microsoft.ML.OnnxRuntime.OrtArenaCfg)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateAndRegisterAllocator
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 116
      summary: "\nCreate and register an allocator to the OrtEnv instance\nso as to enable sharing across all sessions using the OrtEnv instance\n<param name=\"memInfo\">OrtMemoryInfo instance to be used for allocator creation</param>\n<param name=\"arenaCfg\">OrtArenaCfg instance that will be used to define the behavior of the arena based allocator</param>\n"
      example: []
      syntax:
        content:
          CSharp: public void CreateAndRegisterAllocator(OrtMemoryInfo memInfo, OrtArenaCfg arenaCfg)
          VB: Public Sub CreateAndRegisterAllocator(memInfo As OrtMemoryInfo, arenaCfg As OrtArenaCfg)
        parameters:
        - id: memInfo
          type: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
        - id: arenaCfg
          type: Microsoft.ML.OnnxRuntime.OrtArenaCfg
      overload: Microsoft.ML.OnnxRuntime.OrtEnv.CreateAndRegisterAllocator*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtEnv.GetAvailableProviders
      commentId: M:Microsoft.ML.OnnxRuntime.OrtEnv.GetAvailableProviders
      language: CSharp
      name:
        CSharp: GetAvailableProviders()
        VB: GetAvailableProviders()
      nameWithType:
        CSharp: OrtEnv.GetAvailableProviders()
        VB: OrtEnv.GetAvailableProviders()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtEnv.GetAvailableProviders()
        VB: Microsoft.ML.OnnxRuntime.OrtEnv.GetAvailableProviders()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetAvailableProviders
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 125
      summary: "\nQueries all the execution providers supported in the native onnxruntime shared library\n"
      example: []
      syntax:
        content:
          CSharp: public string[] GetAvailableProviders()
          VB: Public Function GetAvailableProviders As String()
        return:
          type: System.String[]
          description: an array of strings that represent execution provider names
      overload: Microsoft.ML.OnnxRuntime.OrtEnv.GetAvailableProviders*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtEnv.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.OrtEnv.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: OrtEnv.IsInvalid
        VB: OrtEnv.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtEnv.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.OrtEnv.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 159
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.OrtEnv.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtEnv.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.OrtEnv.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: OrtEnv.ReleaseHandle()
        VB: OrtEnv.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtEnv.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.OrtEnv.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/OnnxRuntime.shared.cs
        startLine: 172
      summary: "\nOverrides SafeHandle.ReleaseHandle() to properly dispose of\nthe native instance of OrtEnv\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.OrtEnv.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.OrtAllocatorType
    commentId: T:Microsoft.ML.OnnxRuntime.OrtAllocatorType
    language: CSharp
    name:
      CSharp: OrtAllocatorType
      VB: OrtAllocatorType
    nameWithType:
      CSharp: OrtAllocatorType
      VB: OrtAllocatorType
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtAllocatorType
      VB: Microsoft.ML.OnnxRuntime.OrtAllocatorType
    type: Enum
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtAllocatorType
      path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
      startLine: 13
    summary: "\nSee documentation for OrtAllocatorType in C API\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum OrtAllocatorType : int'
        VB: Public Enum OrtAllocatorType As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtAllocatorType.DeviceAllocator
      commentId: F:Microsoft.ML.OnnxRuntime.OrtAllocatorType.DeviceAllocator
      language: CSharp
      name:
        CSharp: DeviceAllocator
        VB: DeviceAllocator
      nameWithType:
        CSharp: OrtAllocatorType.DeviceAllocator
        VB: OrtAllocatorType.DeviceAllocator
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtAllocatorType.DeviceAllocator
        VB: Microsoft.ML.OnnxRuntime.OrtAllocatorType.DeviceAllocator
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: DeviceAllocator
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 15
      syntax:
        content:
          CSharp: DeviceAllocator = null
          VB: DeviceAllocator = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtAllocatorType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtAllocatorType.ArenaAllocator
      commentId: F:Microsoft.ML.OnnxRuntime.OrtAllocatorType.ArenaAllocator
      language: CSharp
      name:
        CSharp: ArenaAllocator
        VB: ArenaAllocator
      nameWithType:
        CSharp: OrtAllocatorType.ArenaAllocator
        VB: OrtAllocatorType.ArenaAllocator
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtAllocatorType.ArenaAllocator
        VB: Microsoft.ML.OnnxRuntime.OrtAllocatorType.ArenaAllocator
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ArenaAllocator
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 16
      syntax:
        content:
          CSharp: ArenaAllocator = null
          VB: ArenaAllocator = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtAllocatorType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Microsoft.ML.OnnxRuntime.OrtMemType
    commentId: T:Microsoft.ML.OnnxRuntime.OrtMemType
    language: CSharp
    name:
      CSharp: OrtMemType
      VB: OrtMemType
    nameWithType:
      CSharp: OrtMemType
      VB: OrtMemType
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtMemType
      VB: Microsoft.ML.OnnxRuntime.OrtMemType
    type: Enum
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtMemType
      path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
      startLine: 22
    summary: "\nSee documentation for OrtMemType in C API\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum OrtMemType : int'
        VB: Public Enum OrtMemType As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtMemType.CpuInput
      commentId: F:Microsoft.ML.OnnxRuntime.OrtMemType.CpuInput
      language: CSharp
      name:
        CSharp: CpuInput
        VB: CpuInput
      nameWithType:
        CSharp: OrtMemType.CpuInput
        VB: OrtMemType.CpuInput
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemType.CpuInput
        VB: Microsoft.ML.OnnxRuntime.OrtMemType.CpuInput
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CpuInput
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 24
      syntax:
        content:
          CSharp: CpuInput = null
          VB: CpuInput = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtMemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtMemType.CpuOutput
      commentId: F:Microsoft.ML.OnnxRuntime.OrtMemType.CpuOutput
      language: CSharp
      name:
        CSharp: CpuOutput
        VB: CpuOutput
      nameWithType:
        CSharp: OrtMemType.CpuOutput
        VB: OrtMemType.CpuOutput
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemType.CpuOutput
        VB: Microsoft.ML.OnnxRuntime.OrtMemType.CpuOutput
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CpuOutput
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 25
      syntax:
        content:
          CSharp: CpuOutput = null
          VB: CpuOutput = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtMemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtMemType.Cpu
      commentId: F:Microsoft.ML.OnnxRuntime.OrtMemType.Cpu
      language: CSharp
      name:
        CSharp: Cpu
        VB: Cpu
      nameWithType:
        CSharp: OrtMemType.Cpu
        VB: OrtMemType.Cpu
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemType.Cpu
        VB: Microsoft.ML.OnnxRuntime.OrtMemType.Cpu
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Cpu
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 26
      syntax:
        content:
          CSharp: Cpu = null
          VB: Cpu = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtMemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtMemType.Default
      commentId: F:Microsoft.ML.OnnxRuntime.OrtMemType.Default
      language: CSharp
      name:
        CSharp: Default
        VB: Default
      nameWithType:
        CSharp: OrtMemType.Default
        VB: OrtMemType.Default
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemType.Default
        VB: Microsoft.ML.OnnxRuntime.OrtMemType.Default
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Default
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 27
      syntax:
        content:
          CSharp: Default = null
          VB: Default = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtMemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg
    commentId: T:Microsoft.ML.OnnxRuntime.OrtArenaCfg
    language: CSharp
    name:
      CSharp: OrtArenaCfg
      VB: OrtArenaCfg
    nameWithType:
      CSharp: OrtArenaCfg
      VB: OrtArenaCfg
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtArenaCfg
      VB: Microsoft.ML.OnnxRuntime.OrtArenaCfg
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtArenaCfg
      path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
      startLine: 35
    summary: "\nThis class encapsulates arena configuration information that will be used to define the behavior\nof an arena based allocator\nSee docs/C_API.md for more details\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OrtArenaCfg : SafeHandle'
        VB: >-
          Public Class OrtArenaCfg

              Inherits SafeHandle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg.#ctor(System.UInt32,System.Int32,System.Int32,System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtArenaCfg.#ctor(System.UInt32,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: OrtArenaCfg(UInt32, Int32, Int32, Int32)
        VB: OrtArenaCfg(UInt32, Int32, Int32, Int32)
      nameWithType:
        CSharp: OrtArenaCfg.OrtArenaCfg(UInt32, Int32, Int32, Int32)
        VB: OrtArenaCfg.OrtArenaCfg(UInt32, Int32, Int32, Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtArenaCfg.OrtArenaCfg(System.UInt32, System.Int32, System.Int32, System.Int32)
        VB: Microsoft.ML.OnnxRuntime.OrtArenaCfg.OrtArenaCfg(System.UInt32, System.Int32, System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 45
      summary: "\nCreate an instance of arena configuration which will be used to create an arena based allocator\nSee docs/C_API.md for details on what the following parameters mean and how to choose these values\n"
      example: []
      syntax:
        content:
          CSharp: public OrtArenaCfg(uint maxMemory, int arenaExtendStrategy, int initialChunkSizeBytes, int maxDeadBytesPerChunk)
          VB: Public Sub New(maxMemory As UInteger, arenaExtendStrategy As Integer, initialChunkSizeBytes As Integer, maxDeadBytesPerChunk As Integer)
        parameters:
        - id: maxMemory
          type: System.UInt32
          description: Maximum amount of memory the arena allocates
        - id: arenaExtendStrategy
          type: System.Int32
          description: Strategy for arena expansion
        - id: initialChunkSizeBytes
          type: System.Int32
          description: Size of the region that the arena allocates first
        - id: maxDeadBytesPerChunk
          type: System.Int32
          description: Maximum amount of fragmentation allowed per chunk
      overload: Microsoft.ML.OnnxRuntime.OrtArenaCfg.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.OrtArenaCfg.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: OrtArenaCfg.IsInvalid
        VB: OrtArenaCfg.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtArenaCfg.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.OrtArenaCfg.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 69
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.OrtArenaCfg.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.OrtArenaCfg.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: OrtArenaCfg.ReleaseHandle()
        VB: OrtArenaCfg.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtArenaCfg.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.OrtArenaCfg.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 76
      summary: "\nOverrides SafeHandle.ReleaseHandle() to properly dispose of\nthe native instance of OrtEnv\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.OrtArenaCfg.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
    commentId: T:Microsoft.ML.OnnxRuntime.OrtMemoryInfo
    language: CSharp
    name:
      CSharp: OrtMemoryInfo
      VB: OrtMemoryInfo
    nameWithType:
      CSharp: OrtMemoryInfo
      VB: OrtMemoryInfo
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
      VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtMemoryInfo
      path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
      startLine: 97
    summary: "\nThis class encapsulates and most of the time owns the underlying native OrtMemoryInfo instance.\nInstance returned from OrtAllocator will not own OrtMemoryInfo, the class must be disposed\nregardless.\n\nUse this class to query and create OrtAllocator instances so you can pre-allocate memory for model\ninputs/outputs and use it for binding. Instances of the class can also used to created OrtValues bound\nto pre-allocated memory. In that case, the instance of OrtMemoryInfo contains the information about the allocator\nused to allocate the underlying memory.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OrtMemoryInfo : SafeHandle'
        VB: >-
          Public Class OrtMemoryInfo

              Inherits SafeHandle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.DefaultInstance
      commentId: P:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.DefaultInstance
      language: CSharp
      name:
        CSharp: DefaultInstance
        VB: DefaultInstance
      nameWithType:
        CSharp: OrtMemoryInfo.DefaultInstance
        VB: OrtMemoryInfo.DefaultInstance
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.DefaultInstance
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.DefaultInstance
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: DefaultInstance
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 114
      summary: "\nDefault CPU based instance\n"
      example: []
      syntax:
        content:
          CSharp: public static OrtMemoryInfo DefaultInstance { get; }
          VB: Public Shared ReadOnly Property DefaultInstance As OrtMemoryInfo
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
          description: Singleton instance of a CpuMemoryInfo
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.DefaultInstance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: OrtMemoryInfo.IsInvalid
        VB: OrtMemoryInfo.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 134
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCPU
      commentId: F:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCPU
      language: CSharp
      name:
        CSharp: allocatorCPU
        VB: allocatorCPU
      nameWithType:
        CSharp: OrtMemoryInfo.allocatorCPU
        VB: OrtMemoryInfo.allocatorCPU
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCPU
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCPU
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: allocatorCPU
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 153
      summary: "\nPredefined utf8 encoded allocator names. Use them to construct an instance of\nOrtMemoryInfo to avoid UTF-16 to UTF-8 conversion costs.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly byte[] allocatorCPU
          VB: Public Shared ReadOnly allocatorCPU As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCUDA
      commentId: F:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCUDA
      language: CSharp
      name:
        CSharp: allocatorCUDA
        VB: allocatorCUDA
      nameWithType:
        CSharp: OrtMemoryInfo.allocatorCUDA
        VB: OrtMemoryInfo.allocatorCUDA
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCUDA
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCUDA
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: allocatorCUDA
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 158
      summary: "\nPredefined utf8 encoded allocator names. Use them to construct an instance of\nOrtMemoryInfo to avoid UTF-16 to UTF-8 conversion costs.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly byte[] allocatorCUDA
          VB: Public Shared ReadOnly allocatorCUDA As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCUDA_PINNED
      commentId: F:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCUDA_PINNED
      language: CSharp
      name:
        CSharp: allocatorCUDA_PINNED
        VB: allocatorCUDA_PINNED
      nameWithType:
        CSharp: OrtMemoryInfo.allocatorCUDA_PINNED
        VB: OrtMemoryInfo.allocatorCUDA_PINNED
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCUDA_PINNED
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.allocatorCUDA_PINNED
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: allocatorCUDA_PINNED
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 163
      summary: "\nPredefined utf8 encoded allocator names. Use them to construct an instance of\nOrtMemoryInfo to avoid UTF-16 to UTF-8 conversion costs.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly byte[] allocatorCUDA_PINNED
          VB: Public Shared ReadOnly allocatorCUDA_PINNED As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.#ctor(System.Byte[],Microsoft.ML.OnnxRuntime.OrtAllocatorType,System.Int32,Microsoft.ML.OnnxRuntime.OrtMemType)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.#ctor(System.Byte[],Microsoft.ML.OnnxRuntime.OrtAllocatorType,System.Int32,Microsoft.ML.OnnxRuntime.OrtMemType)
      language: CSharp
      name:
        CSharp: OrtMemoryInfo(Byte[], OrtAllocatorType, Int32, OrtMemType)
        VB: OrtMemoryInfo(Byte(), OrtAllocatorType, Int32, OrtMemType)
      nameWithType:
        CSharp: OrtMemoryInfo.OrtMemoryInfo(Byte[], OrtAllocatorType, Int32, OrtMemType)
        VB: OrtMemoryInfo.OrtMemoryInfo(Byte(), OrtAllocatorType, Int32, OrtMemType)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.OrtMemoryInfo(System.Byte[], Microsoft.ML.OnnxRuntime.OrtAllocatorType, System.Int32, Microsoft.ML.OnnxRuntime.OrtMemType)
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.OrtMemoryInfo(System.Byte(), Microsoft.ML.OnnxRuntime.OrtAllocatorType, System.Int32, Microsoft.ML.OnnxRuntime.OrtMemType)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 175
      summary: "\nCreate an instance of OrtMemoryInfo according to the specification\nMemory info instances are usually used to get a handle of a native allocator\nthat is present within the current inference session object. That, in turn, depends\nof what execution providers are available within the binary that you are using and are\nregistered with Add methods.\n"
      example: []
      syntax:
        content:
          CSharp: public OrtMemoryInfo(byte[] utf8AllocatorName, OrtAllocatorType allocatorType, int deviceId, OrtMemType memoryType)
          VB: Public Sub New(utf8AllocatorName As Byte(), allocatorType As OrtAllocatorType, deviceId As Integer, memoryType As OrtMemType)
        parameters:
        - id: utf8AllocatorName
          type: System.Byte[]
          description: Allocator name. Use of the predefined above.
        - id: allocatorType
          type: Microsoft.ML.OnnxRuntime.OrtAllocatorType
          description: Allocator type
        - id: deviceId
          type: System.Int32
          description: Device id
        - id: memoryType
          type: Microsoft.ML.OnnxRuntime.OrtMemType
          description: Memory type
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.#ctor(System.String,Microsoft.ML.OnnxRuntime.OrtAllocatorType,System.Int32,Microsoft.ML.OnnxRuntime.OrtMemType)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.#ctor(System.String,Microsoft.ML.OnnxRuntime.OrtAllocatorType,System.Int32,Microsoft.ML.OnnxRuntime.OrtMemType)
      language: CSharp
      name:
        CSharp: OrtMemoryInfo(String, OrtAllocatorType, Int32, OrtMemType)
        VB: OrtMemoryInfo(String, OrtAllocatorType, Int32, OrtMemType)
      nameWithType:
        CSharp: OrtMemoryInfo.OrtMemoryInfo(String, OrtAllocatorType, Int32, OrtMemType)
        VB: OrtMemoryInfo.OrtMemoryInfo(String, OrtAllocatorType, Int32, OrtMemType)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.OrtMemoryInfo(System.String, Microsoft.ML.OnnxRuntime.OrtAllocatorType, System.Int32, Microsoft.ML.OnnxRuntime.OrtMemType)
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.OrtMemoryInfo(System.String, Microsoft.ML.OnnxRuntime.OrtAllocatorType, System.Int32, Microsoft.ML.OnnxRuntime.OrtMemType)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 196
      summary: "\nCreate an instance of OrtMemoryInfo according to the specification.\n"
      example: []
      syntax:
        content:
          CSharp: public OrtMemoryInfo(string allocatorName, OrtAllocatorType allocatorType, int deviceId, OrtMemType memoryType)
          VB: Public Sub New(allocatorName As String, allocatorType As OrtAllocatorType, deviceId As Integer, memoryType As OrtMemType)
        parameters:
        - id: allocatorName
          type: System.String
          description: Allocator name
        - id: allocatorType
          type: Microsoft.ML.OnnxRuntime.OrtAllocatorType
          description: Allocator type
        - id: deviceId
          type: System.Int32
          description: Device id
        - id: memoryType
          type: Microsoft.ML.OnnxRuntime.OrtMemType
          description: Memory type
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Name
      commentId: P:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: OrtMemoryInfo.Name
        VB: OrtMemoryInfo.Name
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Name
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Name
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Name
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 204
      summary: "\nName of the allocator associated with the OrtMemoryInfo instance\n"
      example: []
      syntax:
        content:
          CSharp: public string Name { get; }
          VB: Public ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Id
      commentId: P:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: OrtMemoryInfo.Id
        VB: OrtMemoryInfo.Id
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Id
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Id
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Id
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 218
      summary: "\nReturns device ID\n"
      example: []
      syntax:
        content:
          CSharp: public int Id { get; }
          VB: Public ReadOnly Property Id As Integer
        parameters: []
        return:
          type: System.Int32
          description: returns integer Id value
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Id*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetMemoryType
      commentId: M:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetMemoryType
      language: CSharp
      name:
        CSharp: GetMemoryType()
        VB: GetMemoryType()
      nameWithType:
        CSharp: OrtMemoryInfo.GetMemoryType()
        VB: OrtMemoryInfo.GetMemoryType()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetMemoryType()
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetMemoryType()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetMemoryType
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 234
      summary: "\nThe below 2 are really properties but naming them is a challenge\nas names would conflict with the returned type. Also, there are native\ncalls behind them so exposing them as Get() would be appropriate.\n"
      example: []
      syntax:
        content:
          CSharp: public OrtMemType GetMemoryType()
          VB: Public Function GetMemoryType As OrtMemType
        return:
          type: Microsoft.ML.OnnxRuntime.OrtMemType
          description: OrtMemoryType for the instance
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetMemoryType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetAllocatorType
      commentId: M:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetAllocatorType
      language: CSharp
      name:
        CSharp: GetAllocatorType()
        VB: GetAllocatorType()
      nameWithType:
        CSharp: OrtMemoryInfo.GetAllocatorType()
        VB: OrtMemoryInfo.GetAllocatorType()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetAllocatorType()
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetAllocatorType()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetAllocatorType
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 245
      summary: "\nFetches allocator type from the underlying OrtAllocator\n"
      example: []
      syntax:
        content:
          CSharp: public OrtAllocatorType GetAllocatorType()
          VB: Public Function GetAllocatorType As OrtAllocatorType
        return:
          type: Microsoft.ML.OnnxRuntime.OrtAllocatorType
          description: Returns allocator type
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetAllocatorType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals(System.Object)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: OrtMemoryInfo.Equals(Object)
        VB: OrtMemoryInfo.Equals(Object)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals(System.Object)
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals(System.Object)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Equals
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 257
      summary: "\nOverrides System.Object.Equals(object)\n"
      example: []
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
          description: object to compare to
        return:
          type: System.Boolean
          description: true if obj is an instance of OrtMemoryInfo and is equal to this
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals(Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals(Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
      language: CSharp
      name:
        CSharp: Equals(OrtMemoryInfo)
        VB: Equals(OrtMemoryInfo)
      nameWithType:
        CSharp: OrtMemoryInfo.Equals(OrtMemoryInfo)
        VB: OrtMemoryInfo.Equals(OrtMemoryInfo)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals(Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals(Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Equals
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 272
      summary: "\nCompares this instance with another\n"
      example: []
      syntax:
        content:
          CSharp: public bool Equals(OrtMemoryInfo other)
          VB: Public Function Equals(other As OrtMemoryInfo) As Boolean
        parameters:
        - id: other
          type: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
          description: OrtMemoryInfo to compare to
        return:
          type: System.Boolean
          description: true if instances are equal according to OrtCompareMemoryInfo.
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetHashCode
      commentId: M:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: OrtMemoryInfo.GetHashCode()
        VB: OrtMemoryInfo.GetHashCode()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetHashCode()
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetHashCode()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetHashCode
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 287
      summary: "\nOverrides System.Object.GetHashCode()\n"
      example: []
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
          description: integer hash value
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: OrtMemoryInfo.ReleaseHandle()
        VB: OrtMemoryInfo.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 298
      summary: "\nOverrides SafeHandle.ReleaseHandle() to properly dispose of\nthe native instance of OrtMmeoryInfo\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation
    commentId: T:Microsoft.ML.OnnxRuntime.OrtExternalAllocation
    language: CSharp
    name:
      CSharp: OrtExternalAllocation
      VB: OrtExternalAllocation
    nameWithType:
      CSharp: OrtExternalAllocation
      VB: OrtExternalAllocation
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtExternalAllocation
      VB: Microsoft.ML.OnnxRuntime.OrtExternalAllocation
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtExternalAllocation
      path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
      startLine: 321
    summary: "\nThis class represents an arbitrary buffer of memory\nallocated and owned by the user. It can be either a CPU, GPU or other device memory\nthat can be suitably represented by IntPtr.\nThis is just a composite of the buffer related information.\nThe memory is assumed to be pinned if necessary and usable immediately\nin the native code.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OrtExternalAllocation : object'
        VB: >-
          Public Class OrtExternalAllocation

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.#ctor(Microsoft.ML.OnnxRuntime.OrtMemoryInfo,System.Int64[],Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,IntPtr,System.Int64)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.#ctor(Microsoft.ML.OnnxRuntime.OrtMemoryInfo,System.Int64[],Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,IntPtr,System.Int64)
      language: CSharp
      name:
        CSharp: OrtExternalAllocation(OrtMemoryInfo, Int64[], TensorElementType, IntPtr, Int64)
        VB: OrtExternalAllocation(OrtMemoryInfo, Int64(), TensorElementType, IntPtr, Int64)
      nameWithType:
        CSharp: OrtExternalAllocation.OrtExternalAllocation(OrtMemoryInfo, Int64[], TensorElementType, IntPtr, Int64)
        VB: OrtExternalAllocation.OrtExternalAllocation(OrtMemoryInfo, Int64(), TensorElementType, IntPtr, Int64)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.OrtExternalAllocation(Microsoft.ML.OnnxRuntime.OrtMemoryInfo, System.Int64[], Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, IntPtr, System.Int64)
        VB: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.OrtExternalAllocation(Microsoft.ML.OnnxRuntime.OrtMemoryInfo, System.Int64(), Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, IntPtr, System.Int64)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 331
      summary: "\nConstructor\n"
      example: []
      syntax:
        content:
          CSharp: public OrtExternalAllocation(OrtMemoryInfo memInfo, long[] shape, TensorElementType elementType, IntPtr pointer, long sizeInBytes)
          VB: Public Sub New(memInfo As OrtMemoryInfo, shape As Long(), elementType As TensorElementType, pointer As IntPtr, sizeInBytes As Long)
        parameters:
        - id: memInfo
          type: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
          description: use to accurately describe a piece of memory that this is wrapping
        - id: shape
          type: System.Int64[]
          description: shape of this buffer
        - id: elementType
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
          description: element type
        - id: pointer
          type: IntPtr
          description: the actual pointer to memory
        - id: sizeInBytes
          type: System.Int64
          description: size of the allocation in bytes
      overload: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Info
      commentId: P:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Info
      language: CSharp
      name:
        CSharp: Info
        VB: Info
      nameWithType:
        CSharp: OrtExternalAllocation.Info
        VB: OrtExternalAllocation.Info
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Info
        VB: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Info
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Info
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 366
      summary: "\nOrtMemoryInfo\n"
      example: []
      syntax:
        content:
          CSharp: public OrtMemoryInfo Info { get; }
          VB: Public ReadOnly Property Info As OrtMemoryInfo
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
      overload: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Info*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Shape
      commentId: P:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Shape
      language: CSharp
      name:
        CSharp: Shape
        VB: Shape
      nameWithType:
        CSharp: OrtExternalAllocation.Shape
        VB: OrtExternalAllocation.Shape
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Shape
        VB: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Shape
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Shape
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 370
      summary: "\nShape\n"
      example: []
      syntax:
        content:
          CSharp: public long[] Shape { get; }
          VB: Public ReadOnly Property Shape As Long()
        parameters: []
        return:
          type: System.Int64[]
      overload: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Shape*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.ElementType
      commentId: P:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.ElementType
      language: CSharp
      name:
        CSharp: ElementType
        VB: ElementType
      nameWithType:
        CSharp: OrtExternalAllocation.ElementType
        VB: OrtExternalAllocation.ElementType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.ElementType
        VB: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.ElementType
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ElementType
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 374
      summary: "\nData type\n"
      example: []
      syntax:
        content:
          CSharp: public TensorElementType ElementType { get; }
          VB: Public ReadOnly Property ElementType As TensorElementType
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      overload: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.ElementType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Pointer
      commentId: P:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Pointer
      language: CSharp
      name:
        CSharp: Pointer
        VB: Pointer
      nameWithType:
        CSharp: OrtExternalAllocation.Pointer
        VB: OrtExternalAllocation.Pointer
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Pointer
        VB: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Pointer
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Pointer
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 378
      summary: "\nActual memory ptr\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Pointer { get; }
          VB: Public ReadOnly Property Pointer As IntPtr
        parameters: []
        return:
          type: IntPtr
      overload: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Pointer*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Size
      commentId: P:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Size
      language: CSharp
      name:
        CSharp: Size
        VB: Size
      nameWithType:
        CSharp: OrtExternalAllocation.Size
        VB: OrtExternalAllocation.Size
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Size
        VB: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Size
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Size
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 382
      summary: "\nSize of the allocation in bytes\n"
      example: []
      syntax:
        content:
          CSharp: public long Size { get; }
          VB: Public ReadOnly Property Size As Long
        parameters: []
        return:
          type: System.Int64
      overload: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Size*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
    commentId: T:Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
    language: CSharp
    name:
      CSharp: OrtMemoryAllocation
      VB: OrtMemoryAllocation
    nameWithType:
      CSharp: OrtMemoryAllocation
      VB: OrtMemoryAllocation
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
      VB: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtMemoryAllocation
      path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
      startLine: 393
    summary: "\nThis class represents memory allocation made by a specific onnxruntime\nallocator. Use OrtAllocator.Allocate() to obtain an instance of this class.\nIt implements IDisposable and makes use of the original allocator\nused to allocate the memory. The lifespan of the allocator instance must eclipse the\nlifespan of the allocation. Or, if you prefer, all OrtMemoryAllocation instances must be\ndisposed of before the corresponding allocator instances are disposed of.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OrtMemoryAllocation : SafeHandle'
        VB: >-
          Public Class OrtMemoryAllocation

              Inherits SafeHandle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: OrtMemoryAllocation.IsInvalid
        VB: OrtMemoryAllocation.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 426
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Size
      commentId: P:Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Size
      language: CSharp
      name:
        CSharp: Size
        VB: Size
      nameWithType:
        CSharp: OrtMemoryAllocation.Size
        VB: OrtMemoryAllocation.Size
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Size
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Size
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Size
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 432
      summary: "\nSize of the allocation\n"
      example: []
      syntax:
        content:
          CSharp: public uint Size { get; }
          VB: Public ReadOnly Property Size As UInteger
        parameters: []
        return:
          type: System.UInt32
          description: uint size of the allocation in bytes
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Size*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Info
      commentId: P:Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Info
      language: CSharp
      name:
        CSharp: Info
        VB: Info
      nameWithType:
        CSharp: OrtMemoryAllocation.Info
        VB: OrtMemoryAllocation.Info
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Info
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Info
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Info
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 438
      summary: "\nMemory Information about this allocation\n"
      example: []
      syntax:
        content:
          CSharp: public OrtMemoryInfo Info { get; }
          VB: Public ReadOnly Property Info As OrtMemoryInfo
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
          description: Returns OrtMemoryInfo from the allocator
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Info*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: OrtMemoryAllocation.ReleaseHandle()
        VB: OrtMemoryAllocation.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 451
      summary: "\nOverrides SafeHandle.ReleaseHandle() to deallocate\na chunk of memory using the specified allocator.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.OrtAllocator
    commentId: T:Microsoft.ML.OnnxRuntime.OrtAllocator
    language: CSharp
    name:
      CSharp: OrtAllocator
      VB: OrtAllocator
    nameWithType:
      CSharp: OrtAllocator
      VB: OrtAllocator
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtAllocator
      VB: Microsoft.ML.OnnxRuntime.OrtAllocator
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtAllocator
      path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
      startLine: 466
    summary: "\nThe class exposes native internal allocator for Onnxruntime.\nThis allocator enables you to allocate memory from the internal\nmemory pools including device allocations. Useful for binding.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OrtAllocator : SafeHandle'
        VB: >-
          Public Class OrtAllocator

              Inherits SafeHandle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtAllocator.DefaultInstance
      commentId: P:Microsoft.ML.OnnxRuntime.OrtAllocator.DefaultInstance
      language: CSharp
      name:
        CSharp: DefaultInstance
        VB: DefaultInstance
      nameWithType:
        CSharp: OrtAllocator.DefaultInstance
        VB: OrtAllocator.DefaultInstance
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtAllocator.DefaultInstance
        VB: Microsoft.ML.OnnxRuntime.OrtAllocator.DefaultInstance
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: DefaultInstance
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 483
      summary: "\nDefault CPU allocator instance\n"
      example: []
      syntax:
        content:
          CSharp: public static OrtAllocator DefaultInstance { get; }
          VB: Public Shared ReadOnly Property DefaultInstance As OrtAllocator
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.OrtAllocator
      overload: Microsoft.ML.OnnxRuntime.OrtAllocator.DefaultInstance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtAllocator.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.OrtAllocator.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: OrtAllocator.IsInvalid
        VB: OrtAllocator.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtAllocator.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.OrtAllocator.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 503
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.OrtAllocator.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtAllocator.#ctor(Microsoft.ML.OnnxRuntime.InferenceSession,Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtAllocator.#ctor(Microsoft.ML.OnnxRuntime.InferenceSession,Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
      language: CSharp
      name:
        CSharp: OrtAllocator(InferenceSession, OrtMemoryInfo)
        VB: OrtAllocator(InferenceSession, OrtMemoryInfo)
      nameWithType:
        CSharp: OrtAllocator.OrtAllocator(InferenceSession, OrtMemoryInfo)
        VB: OrtAllocator.OrtAllocator(InferenceSession, OrtMemoryInfo)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtAllocator.OrtAllocator(Microsoft.ML.OnnxRuntime.InferenceSession, Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
        VB: Microsoft.ML.OnnxRuntime.OrtAllocator.OrtAllocator(Microsoft.ML.OnnxRuntime.InferenceSession, Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 524
      summary: "\nCreates an instance of OrtAllocator according to the specifications in OrtMemorInfo.\nThe requested allocator should be available within the given session instance. This means\nboth, the native library was build with specific allocators (for instance CUDA) and the corresponding\nprovider was added to SessionsOptions before instantiating the session object.\n"
      example: []
      syntax:
        content:
          CSharp: public OrtAllocator(InferenceSession session, OrtMemoryInfo memInfo)
          VB: Public Sub New(session As InferenceSession, memInfo As OrtMemoryInfo)
        parameters:
        - id: session
          type: Microsoft.ML.OnnxRuntime.InferenceSession
          description: ''
        - id: memInfo
          type: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
          description: ''
      overload: Microsoft.ML.OnnxRuntime.OrtAllocator.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtAllocator.Info
      commentId: P:Microsoft.ML.OnnxRuntime.OrtAllocator.Info
      language: CSharp
      name:
        CSharp: Info
        VB: Info
      nameWithType:
        CSharp: OrtAllocator.Info
        VB: OrtAllocator.Info
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtAllocator.Info
        VB: Microsoft.ML.OnnxRuntime.OrtAllocator.Info
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Info
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 535
      summary: "\nOrtMemoryInfo instance owned by the allocator\n"
      example: []
      syntax:
        content:
          CSharp: public OrtMemoryInfo Info { get; }
          VB: Public ReadOnly Property Info As OrtMemoryInfo
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
          description: Instance of OrtMemoryInfo describing this allocator
      overload: Microsoft.ML.OnnxRuntime.OrtAllocator.Info*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtAllocator.Allocate(System.UInt32)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtAllocator.Allocate(System.UInt32)
      language: CSharp
      name:
        CSharp: Allocate(UInt32)
        VB: Allocate(UInt32)
      nameWithType:
        CSharp: OrtAllocator.Allocate(UInt32)
        VB: OrtAllocator.Allocate(UInt32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtAllocator.Allocate(System.UInt32)
        VB: Microsoft.ML.OnnxRuntime.OrtAllocator.Allocate(System.UInt32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Allocate
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 551
      summary: "\nAllocate native memory. Returns a disposable instance of OrtMemoryAllocation\n"
      example: []
      syntax:
        content:
          CSharp: public OrtMemoryAllocation Allocate(uint size)
          VB: Public Function Allocate(size As UInteger) As OrtMemoryAllocation
        parameters:
        - id: size
          type: System.UInt32
          description: number of bytes to allocate
        return:
          type: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
          description: Instance of OrtMemoryAllocation
      overload: Microsoft.ML.OnnxRuntime.OrtAllocator.Allocate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtAllocator.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.OrtAllocator.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: OrtAllocator.ReleaseHandle()
        VB: OrtAllocator.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtAllocator.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.OrtAllocator.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/OrtAllocator.shared.cs
        startLine: 573
      summary: "\nOverrides SafeHandle.ReleaseHandle() to properly dispose of\nthe native instance of OrtAllocator\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.OrtAllocator.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.OrtIoBinding
    commentId: T:Microsoft.ML.OnnxRuntime.OrtIoBinding
    language: CSharp
    name:
      CSharp: OrtIoBinding
      VB: OrtIoBinding
    nameWithType:
      CSharp: OrtIoBinding
      VB: OrtIoBinding
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding
      VB: Microsoft.ML.OnnxRuntime.OrtIoBinding
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtIoBinding
      path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
      startLine: 28
    summary: "\nThis class enables binding of inputs and/or outputs to pre-allocated\nmemory. This enables interesting scenarios. For example, if your input\nalready resides in some pre-allocated memory like GPU, you can bind\nthat piece of memory to an input name and shape and onnxruntime will use that as input.\nOther traditional inputs can also be bound that already exists as Tensors.\n\nNote, that this arrangement is designed to minimize data copies and to that effect\nyour memory allocations must match what is expected by the model, whether you run on\nCPU or GPU. Data copy will still be made, if your pre-allocated memory location does not\nmatch the one expected by the model. However, copies with OrtIoBindings are only done once,\nat the time of the binding, not at run time. This means, that if your input data required a copy,\nyour further input modifications would not be seen by onnxruntime unless you rebind it, even if it is\nthe same buffer. If you require the scenario where data is copied, OrtIOBinding may not be the best match\nfor your use case.\n\nThe fact that data copy is not made during runtime also has performance implications.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OrtIoBinding : SafeHandle'
        VB: >-
          Public Class OrtIoBinding

              Inherits SafeHandle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.OrtIoBinding.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: OrtIoBinding.IsInvalid
        VB: OrtIoBinding.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 52
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String,Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int64[],Microsoft.ML.OnnxRuntime.OrtMemoryAllocation)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String,Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int64[],Microsoft.ML.OnnxRuntime.OrtMemoryAllocation)
      language: CSharp
      name:
        CSharp: BindInput(String, TensorElementType, Int64[], OrtMemoryAllocation)
        VB: BindInput(String, TensorElementType, Int64(), OrtMemoryAllocation)
      nameWithType:
        CSharp: OrtIoBinding.BindInput(String, TensorElementType, Int64[], OrtMemoryAllocation)
        VB: OrtIoBinding.BindInput(String, TensorElementType, Int64(), OrtMemoryAllocation)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String, Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, System.Int64[], Microsoft.ML.OnnxRuntime.OrtMemoryAllocation)
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String, Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, System.Int64(), Microsoft.ML.OnnxRuntime.OrtMemoryAllocation)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: BindInput
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 64
      summary: "\nBind a piece of pre-allocated native memory as a OrtValue Tensor with a given shape\nto an input with a given name. The model will read the specified input from that memory\npossibly avoiding the need to copy between devices. OrtMemoryAllocation continues to own\nthe chunk of native memory, and the allocation should be alive until the end of execution.\n"
      example: []
      syntax:
        content:
          CSharp: public void BindInput(string name, TensorElementType elementType, long[] shape, OrtMemoryAllocation allocation)
          VB: Public Sub BindInput(name As String, elementType As TensorElementType, shape As Long(), allocation As OrtMemoryAllocation)
        parameters:
        - id: name
          type: System.String
          description: of the input
        - id: elementType
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
          description: Tensor element type
        - id: shape
          type: System.Int64[]
          description: ''
        - id: allocation
          type: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
          description: native memory allocation
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String,Microsoft.ML.OnnxRuntime.OrtExternalAllocation)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String,Microsoft.ML.OnnxRuntime.OrtExternalAllocation)
      language: CSharp
      name:
        CSharp: BindInput(String, OrtExternalAllocation)
        VB: BindInput(String, OrtExternalAllocation)
      nameWithType:
        CSharp: OrtIoBinding.BindInput(String, OrtExternalAllocation)
        VB: OrtIoBinding.BindInput(String, OrtExternalAllocation)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String, Microsoft.ML.OnnxRuntime.OrtExternalAllocation)
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String, Microsoft.ML.OnnxRuntime.OrtExternalAllocation)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: BindInput
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 77
      summary: "\nBind externally (not from OrtAllocator) allocated memory as input.\nThe model will read the specified input from that memory\npossibly avoiding the need to copy between devices. The user code continues to own\nthe chunk of externally allocated memory, and the allocation should be alive until the end of execution.\n"
      example: []
      syntax:
        content:
          CSharp: public void BindInput(string name, OrtExternalAllocation allocation)
          VB: Public Sub BindInput(name As String, allocation As OrtExternalAllocation)
        parameters:
        - id: name
          type: System.String
          description: name
        - id: allocation
          type: Microsoft.ML.OnnxRuntime.OrtExternalAllocation
          description: non ort allocated memory
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String,Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String,Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue)
      language: CSharp
      name:
        CSharp: BindInput(String, FixedBufferOnnxValue)
        VB: BindInput(String, FixedBufferOnnxValue)
      nameWithType:
        CSharp: OrtIoBinding.BindInput(String, FixedBufferOnnxValue)
        VB: OrtIoBinding.BindInput(String, FixedBufferOnnxValue)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String, Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue)
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput(System.String, Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: BindInput
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 88
      summary: "\nBind the input with the given name as an OrtValue Tensor allocated in pinned managed memory.\nInstance of FixedBufferOnnxValue owns the memory and should be alive until the end of execution.\n"
      example: []
      syntax:
        content:
          CSharp: public void BindInput(string name, FixedBufferOnnxValue fixedValue)
          VB: Public Sub BindInput(name As String, fixedValue As FixedBufferOnnxValue)
        parameters:
        - id: name
          type: System.String
          description: name of input
        - id: fixedValue
          type: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
          description: ''
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundInputs
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundInputs
      language: CSharp
      name:
        CSharp: SynchronizeBoundInputs()
        VB: SynchronizeBoundInputs()
      nameWithType:
        CSharp: OrtIoBinding.SynchronizeBoundInputs()
        VB: OrtIoBinding.SynchronizeBoundInputs()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundInputs()
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundInputs()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SynchronizeBoundInputs
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 101
      summary: "\nBlocks until device completes all preceding requested tasks.\nUseful for memory synchronization.\n"
      example: []
      syntax:
        content:
          CSharp: public void SynchronizeBoundInputs()
          VB: Public Sub SynchronizeBoundInputs
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundInputs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String,Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int64[],Microsoft.ML.OnnxRuntime.OrtMemoryAllocation)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String,Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int64[],Microsoft.ML.OnnxRuntime.OrtMemoryAllocation)
      language: CSharp
      name:
        CSharp: BindOutput(String, TensorElementType, Int64[], OrtMemoryAllocation)
        VB: BindOutput(String, TensorElementType, Int64(), OrtMemoryAllocation)
      nameWithType:
        CSharp: OrtIoBinding.BindOutput(String, TensorElementType, Int64[], OrtMemoryAllocation)
        VB: OrtIoBinding.BindOutput(String, TensorElementType, Int64(), OrtMemoryAllocation)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String, Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, System.Int64[], Microsoft.ML.OnnxRuntime.OrtMemoryAllocation)
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String, Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, System.Int64(), Microsoft.ML.OnnxRuntime.OrtMemoryAllocation)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: BindOutput
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 114
      summary: "\nBind model output to an OrtValue as Tensor with a given type and shape. An instance of OrtMemoryAllocaiton\nowns the memory and should be alive for the time of execution.\n"
      example: []
      syntax:
        content:
          CSharp: public void BindOutput(string name, TensorElementType elementType, long[] shape, OrtMemoryAllocation allocation)
          VB: Public Sub BindOutput(name As String, elementType As TensorElementType, shape As Long(), allocation As OrtMemoryAllocation)
        parameters:
        - id: name
          type: System.String
          description: of the output
        - id: elementType
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
          description: tensor element type
        - id: shape
          type: System.Int64[]
          description: tensor shape
        - id: allocation
          type: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
          description: allocated memory
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String,Microsoft.ML.OnnxRuntime.OrtExternalAllocation)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String,Microsoft.ML.OnnxRuntime.OrtExternalAllocation)
      language: CSharp
      name:
        CSharp: BindOutput(String, OrtExternalAllocation)
        VB: BindOutput(String, OrtExternalAllocation)
      nameWithType:
        CSharp: OrtIoBinding.BindOutput(String, OrtExternalAllocation)
        VB: OrtIoBinding.BindOutput(String, OrtExternalAllocation)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String, Microsoft.ML.OnnxRuntime.OrtExternalAllocation)
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String, Microsoft.ML.OnnxRuntime.OrtExternalAllocation)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: BindOutput
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 127
      summary: "\nBind externally (not from OrtAllocator) allocated memory as output.\nThe model will read the specified input from that memory\npossibly avoiding the need to copy between devices. The user code continues to own\nthe chunk of externally allocated memory, and the allocation should be alive until the end of execution.\n"
      example: []
      syntax:
        content:
          CSharp: public void BindOutput(string name, OrtExternalAllocation allocation)
          VB: Public Sub BindOutput(name As String, allocation As OrtExternalAllocation)
        parameters:
        - id: name
          type: System.String
          description: name
        - id: allocation
          type: Microsoft.ML.OnnxRuntime.OrtExternalAllocation
          description: non ort allocated memory
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String,Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String,Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue)
      language: CSharp
      name:
        CSharp: BindOutput(String, FixedBufferOnnxValue)
        VB: BindOutput(String, FixedBufferOnnxValue)
      nameWithType:
        CSharp: OrtIoBinding.BindOutput(String, FixedBufferOnnxValue)
        VB: OrtIoBinding.BindOutput(String, FixedBufferOnnxValue)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String, Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue)
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput(System.String, Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: BindOutput
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 138
      summary: "\nBind model output to a given instance of FixedBufferOnnxValue which owns the underlying\npinned managed memory and should be alive for the time of execution.\n"
      example: []
      syntax:
        content:
          CSharp: public void BindOutput(string name, FixedBufferOnnxValue fixedValue)
          VB: Public Sub BindOutput(name As String, fixedValue As FixedBufferOnnxValue)
        parameters:
        - id: name
          type: System.String
          description: of the output
        - id: fixedValue
          type: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
          description: ''
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutputToDevice(System.String,Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutputToDevice(System.String,Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
      language: CSharp
      name:
        CSharp: BindOutputToDevice(String, OrtMemoryInfo)
        VB: BindOutputToDevice(String, OrtMemoryInfo)
      nameWithType:
        CSharp: OrtIoBinding.BindOutputToDevice(String, OrtMemoryInfo)
        VB: OrtIoBinding.BindOutputToDevice(String, OrtMemoryInfo)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutputToDevice(System.String, Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutputToDevice(System.String, Microsoft.ML.OnnxRuntime.OrtMemoryInfo)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: BindOutputToDevice
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 153
      summary: "\nThis function will bind model output with the given name to a device\nspecified by the memInfo.\n"
      example: []
      syntax:
        content:
          CSharp: public void BindOutputToDevice(string name, OrtMemoryInfo memInfo)
          VB: Public Sub BindOutputToDevice(name As String, memInfo As OrtMemoryInfo)
        parameters:
        - id: name
          type: System.String
          description: output name
        - id: memInfo
          type: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
          description: instance of memory info
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutputToDevice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundOutputs
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundOutputs
      language: CSharp
      name:
        CSharp: SynchronizeBoundOutputs()
        VB: SynchronizeBoundOutputs()
      nameWithType:
        CSharp: OrtIoBinding.SynchronizeBoundOutputs()
        VB: OrtIoBinding.SynchronizeBoundOutputs()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundOutputs()
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundOutputs()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SynchronizeBoundOutputs
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 164
      summary: "\nBlocks until device completes all preceding requested tasks.\nUseful for memory synchronization.\n"
      example: []
      syntax:
        content:
          CSharp: public void SynchronizeBoundOutputs()
          VB: Public Sub SynchronizeBoundOutputs
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundOutputs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputNames
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputNames
      language: CSharp
      name:
        CSharp: GetOutputNames()
        VB: GetOutputNames()
      nameWithType:
        CSharp: OrtIoBinding.GetOutputNames()
        VB: OrtIoBinding.GetOutputNames()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputNames()
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputNames()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetOutputNames
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 232
      summary: "\nReturns an array of output names in the same order they were bound\n"
      example: []
      syntax:
        content:
          CSharp: public string[] GetOutputNames()
          VB: Public Function GetOutputNames As String()
        return:
          type: System.String[]
          description: array of output names
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputNames*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputValues
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputValues
      language: CSharp
      name:
        CSharp: GetOutputValues()
        VB: GetOutputValues()
      nameWithType:
        CSharp: OrtIoBinding.GetOutputValues()
        VB: OrtIoBinding.GetOutputValues()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputValues()
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputValues()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetOutputValues
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 277
      syntax:
        content:
          CSharp: public IDisposableReadOnlyCollection<OrtValue> GetOutputValues()
          VB: Public Function GetOutputValues As IDisposableReadOnlyCollection(Of OrtValue)
        return:
          type: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.OrtValue}
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputValues*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundInputs
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundInputs
      language: CSharp
      name:
        CSharp: ClearBoundInputs()
        VB: ClearBoundInputs()
      nameWithType:
        CSharp: OrtIoBinding.ClearBoundInputs()
        VB: OrtIoBinding.ClearBoundInputs()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundInputs()
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundInputs()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ClearBoundInputs
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 313
      summary: "\nClear all bound inputs and start anew\n"
      example: []
      syntax:
        content:
          CSharp: public void ClearBoundInputs()
          VB: Public Sub ClearBoundInputs
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundInputs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundOutputs
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundOutputs
      language: CSharp
      name:
        CSharp: ClearBoundOutputs()
        VB: ClearBoundOutputs()
      nameWithType:
        CSharp: OrtIoBinding.ClearBoundOutputs()
        VB: OrtIoBinding.ClearBoundOutputs()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundOutputs()
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundOutputs()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ClearBoundOutputs
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 321
      summary: "\nClear all bound outputs\n"
      example: []
      syntax:
        content:
          CSharp: public void ClearBoundOutputs()
          VB: Public Sub ClearBoundOutputs
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundOutputs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.OrtIoBinding.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: OrtIoBinding.ReleaseHandle()
        VB: OrtIoBinding.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtIoBinding.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.OrtIoBinding.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/OrtIoBinding.shared.cs
        startLine: 332
      summary: "\nOverrides SafeHandle.ReleaseHandle() to properly dispose of\nthe native instance of OrtIoBidning\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.OrtIoBinding.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
    commentId: T:Microsoft.ML.OnnxRuntime.OrtLoggingLevel
    language: CSharp
    name:
      CSharp: OrtLoggingLevel
      VB: OrtLoggingLevel
    nameWithType:
      CSharp: OrtLoggingLevel
      VB: OrtLoggingLevel
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
      VB: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
    type: Enum
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtLoggingLevel
      path: ../src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
      startLine: 8
    summary: "\nLog severity levels\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum OrtLoggingLevel : int'
        VB: Public Enum OrtLoggingLevel As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_VERBOSE
      commentId: F:Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_VERBOSE
      language: CSharp
      name:
        CSharp: ORT_LOGGING_LEVEL_VERBOSE
        VB: ORT_LOGGING_LEVEL_VERBOSE
      nameWithType:
        CSharp: OrtLoggingLevel.ORT_LOGGING_LEVEL_VERBOSE
        VB: OrtLoggingLevel.ORT_LOGGING_LEVEL_VERBOSE
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_VERBOSE
        VB: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_VERBOSE
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_LOGGING_LEVEL_VERBOSE
        path: ../src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
        startLine: 10
      syntax:
        content:
          CSharp: ORT_LOGGING_LEVEL_VERBOSE = null
          VB: ORT_LOGGING_LEVEL_VERBOSE = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_INFO
      commentId: F:Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_INFO
      language: CSharp
      name:
        CSharp: ORT_LOGGING_LEVEL_INFO
        VB: ORT_LOGGING_LEVEL_INFO
      nameWithType:
        CSharp: OrtLoggingLevel.ORT_LOGGING_LEVEL_INFO
        VB: OrtLoggingLevel.ORT_LOGGING_LEVEL_INFO
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_INFO
        VB: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_INFO
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_LOGGING_LEVEL_INFO
        path: ../src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
        startLine: 11
      syntax:
        content:
          CSharp: ORT_LOGGING_LEVEL_INFO = null
          VB: ORT_LOGGING_LEVEL_INFO = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_WARNING
      commentId: F:Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_WARNING
      language: CSharp
      name:
        CSharp: ORT_LOGGING_LEVEL_WARNING
        VB: ORT_LOGGING_LEVEL_WARNING
      nameWithType:
        CSharp: OrtLoggingLevel.ORT_LOGGING_LEVEL_WARNING
        VB: OrtLoggingLevel.ORT_LOGGING_LEVEL_WARNING
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_WARNING
        VB: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_WARNING
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_LOGGING_LEVEL_WARNING
        path: ../src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
        startLine: 12
      syntax:
        content:
          CSharp: ORT_LOGGING_LEVEL_WARNING = null
          VB: ORT_LOGGING_LEVEL_WARNING = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_ERROR
      commentId: F:Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_ERROR
      language: CSharp
      name:
        CSharp: ORT_LOGGING_LEVEL_ERROR
        VB: ORT_LOGGING_LEVEL_ERROR
      nameWithType:
        CSharp: OrtLoggingLevel.ORT_LOGGING_LEVEL_ERROR
        VB: OrtLoggingLevel.ORT_LOGGING_LEVEL_ERROR
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_ERROR
        VB: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_ERROR
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_LOGGING_LEVEL_ERROR
        path: ../src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
        startLine: 13
      syntax:
        content:
          CSharp: ORT_LOGGING_LEVEL_ERROR = null
          VB: ORT_LOGGING_LEVEL_ERROR = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_FATAL
      commentId: F:Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_FATAL
      language: CSharp
      name:
        CSharp: ORT_LOGGING_LEVEL_FATAL
        VB: ORT_LOGGING_LEVEL_FATAL
      nameWithType:
        CSharp: OrtLoggingLevel.ORT_LOGGING_LEVEL_FATAL
        VB: OrtLoggingLevel.ORT_LOGGING_LEVEL_FATAL
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_FATAL
        VB: Microsoft.ML.OnnxRuntime.OrtLoggingLevel.ORT_LOGGING_LEVEL_FATAL
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_LOGGING_LEVEL_FATAL
        path: ../src/Microsoft.ML.OnnxRuntime/OrtLoggingLevel.shared.cs
        startLine: 14
      syntax:
        content:
          CSharp: ORT_LOGGING_LEVEL_FATAL = null
          VB: ORT_LOGGING_LEVEL_FATAL = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Microsoft.ML.OnnxRuntime.OnnxValueType
    commentId: T:Microsoft.ML.OnnxRuntime.OnnxValueType
    language: CSharp
    name:
      CSharp: OnnxValueType
      VB: OnnxValueType
    nameWithType:
      CSharp: OnnxValueType
      VB: OnnxValueType
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OnnxValueType
      VB: Microsoft.ML.OnnxRuntime.OnnxValueType
    type: Enum
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OnnxValueType
      path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
      startLine: 14
    summary: "\nA type of data that OrtValue encapsulates.\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum OnnxValueType : int'
        VB: Public Enum OnnxValueType As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_UNKNOWN
      commentId: F:Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_UNKNOWN
      language: CSharp
      name:
        CSharp: ONNX_TYPE_UNKNOWN
        VB: ONNX_TYPE_UNKNOWN
      nameWithType:
        CSharp: OnnxValueType.ONNX_TYPE_UNKNOWN
        VB: OnnxValueType.ONNX_TYPE_UNKNOWN
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_UNKNOWN
        VB: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_UNKNOWN
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ONNX_TYPE_UNKNOWN
        path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        startLine: 16
      syntax:
        content:
          CSharp: ONNX_TYPE_UNKNOWN = null
          VB: ONNX_TYPE_UNKNOWN = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OnnxValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_TENSOR
      commentId: F:Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_TENSOR
      language: CSharp
      name:
        CSharp: ONNX_TYPE_TENSOR
        VB: ONNX_TYPE_TENSOR
      nameWithType:
        CSharp: OnnxValueType.ONNX_TYPE_TENSOR
        VB: OnnxValueType.ONNX_TYPE_TENSOR
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_TENSOR
        VB: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_TENSOR
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ONNX_TYPE_TENSOR
        path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        startLine: 17
      syntax:
        content:
          CSharp: ONNX_TYPE_TENSOR = null
          VB: ONNX_TYPE_TENSOR = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OnnxValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_SEQUENCE
      commentId: F:Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_SEQUENCE
      language: CSharp
      name:
        CSharp: ONNX_TYPE_SEQUENCE
        VB: ONNX_TYPE_SEQUENCE
      nameWithType:
        CSharp: OnnxValueType.ONNX_TYPE_SEQUENCE
        VB: OnnxValueType.ONNX_TYPE_SEQUENCE
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_SEQUENCE
        VB: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_SEQUENCE
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ONNX_TYPE_SEQUENCE
        path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        startLine: 18
      syntax:
        content:
          CSharp: ONNX_TYPE_SEQUENCE = null
          VB: ONNX_TYPE_SEQUENCE = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OnnxValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_MAP
      commentId: F:Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_MAP
      language: CSharp
      name:
        CSharp: ONNX_TYPE_MAP
        VB: ONNX_TYPE_MAP
      nameWithType:
        CSharp: OnnxValueType.ONNX_TYPE_MAP
        VB: OnnxValueType.ONNX_TYPE_MAP
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_MAP
        VB: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_MAP
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ONNX_TYPE_MAP
        path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        startLine: 19
      syntax:
        content:
          CSharp: ONNX_TYPE_MAP = null
          VB: ONNX_TYPE_MAP = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OnnxValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_OPAQUE
      commentId: F:Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_OPAQUE
      language: CSharp
      name:
        CSharp: ONNX_TYPE_OPAQUE
        VB: ONNX_TYPE_OPAQUE
      nameWithType:
        CSharp: OnnxValueType.ONNX_TYPE_OPAQUE
        VB: OnnxValueType.ONNX_TYPE_OPAQUE
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_OPAQUE
        VB: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_OPAQUE
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ONNX_TYPE_OPAQUE
        path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        startLine: 20
      syntax:
        content:
          CSharp: ONNX_TYPE_OPAQUE = null
          VB: ONNX_TYPE_OPAQUE = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OnnxValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_SPARSETENSOR
      commentId: F:Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_SPARSETENSOR
      language: CSharp
      name:
        CSharp: ONNX_TYPE_SPARSETENSOR
        VB: ONNX_TYPE_SPARSETENSOR
      nameWithType:
        CSharp: OnnxValueType.ONNX_TYPE_SPARSETENSOR
        VB: OnnxValueType.ONNX_TYPE_SPARSETENSOR
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_SPARSETENSOR
        VB: Microsoft.ML.OnnxRuntime.OnnxValueType.ONNX_TYPE_SPARSETENSOR
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ONNX_TYPE_SPARSETENSOR
        path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        startLine: 21
      syntax:
        content:
          CSharp: ONNX_TYPE_SPARSETENSOR = null
          VB: ONNX_TYPE_SPARSETENSOR = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.OnnxValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Microsoft.ML.OnnxRuntime.OrtValue
    commentId: T:Microsoft.ML.OnnxRuntime.OrtValue
    language: CSharp
    name:
      CSharp: OrtValue
      VB: OrtValue
    nameWithType:
      CSharp: OrtValue
      VB: OrtValue
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtValue
      VB: Microsoft.ML.OnnxRuntime.OrtValue
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtValue
      path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
      startLine: 30
    summary: "\nRepresents a disposable OrtValue.\nThis class exposes a native instance of OrtValue.\nThe class implements IDisposable via SafeHandle and must\nbe disposed.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OrtValue : SafeHandle'
        VB: >-
          Public Class OrtValue

              Inherits SafeHandle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtValue.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.OrtValue.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: OrtValue.IsInvalid
        VB: OrtValue.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtValue.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.OrtValue.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        startLine: 51
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.OrtValue.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtValue.CreateTensorValueWithData(Microsoft.ML.OnnxRuntime.OrtMemoryInfo,Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int64[],IntPtr,System.Int64)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtValue.CreateTensorValueWithData(Microsoft.ML.OnnxRuntime.OrtMemoryInfo,Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int64[],IntPtr,System.Int64)
      language: CSharp
      name:
        CSharp: CreateTensorValueWithData(OrtMemoryInfo, TensorElementType, Int64[], IntPtr, Int64)
        VB: CreateTensorValueWithData(OrtMemoryInfo, TensorElementType, Int64(), IntPtr, Int64)
      nameWithType:
        CSharp: OrtValue.CreateTensorValueWithData(OrtMemoryInfo, TensorElementType, Int64[], IntPtr, Int64)
        VB: OrtValue.CreateTensorValueWithData(OrtMemoryInfo, TensorElementType, Int64(), IntPtr, Int64)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtValue.CreateTensorValueWithData(Microsoft.ML.OnnxRuntime.OrtMemoryInfo, Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, System.Int64[], IntPtr, System.Int64)
        VB: Microsoft.ML.OnnxRuntime.OrtValue.CreateTensorValueWithData(Microsoft.ML.OnnxRuntime.OrtMemoryInfo, Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, System.Int64(), IntPtr, System.Int64)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateTensorValueWithData
        path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        startLine: 89
      summary: "\nFactory method to construct an OrtValue of Tensor type on top of pre-allocated memory.\nThis can be a piece of native memory allocated by OrtAllocator (possibly on a device)\nor a piece of pinned managed memory.\n\nThe resulting OrtValue does not own the underlying memory buffer and will not attempt to\ndeallocate it.\n"
      example: []
      syntax:
        content:
          CSharp: public static OrtValue CreateTensorValueWithData(OrtMemoryInfo memInfo, TensorElementType elementType, long[] shape, IntPtr dataBuffer, long bufferLength)
          VB: Public Shared Function CreateTensorValueWithData(memInfo As OrtMemoryInfo, elementType As TensorElementType, shape As Long(), dataBuffer As IntPtr, bufferLength As Long) As OrtValue
        parameters:
        - id: memInfo
          type: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
          description: >-
            Memory Info. For managed memory it is a default cpu.
                                  For Native memory must be obtained from the allocator or OrtMemoryAllocation instance
        - id: elementType
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
          description: DataType for the Tensor
        - id: shape
          type: System.Int64[]
          description: Tensor shape
        - id: dataBuffer
          type: IntPtr
          description: Pointer to a raw memory buffer
        - id: bufferLength
          type: System.Int64
          description: Buffer length in bytes
        return:
          type: Microsoft.ML.OnnxRuntime.OrtValue
          description: A disposable instance of OrtValue
      overload: Microsoft.ML.OnnxRuntime.OrtValue.CreateTensorValueWithData*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.OrtValue.CreateFromTensorObject(Object,System.Nullable{MemoryHandle}@,Microsoft.ML.OnnxRuntime.Tensors.TensorElementType@)
      commentId: M:Microsoft.ML.OnnxRuntime.OrtValue.CreateFromTensorObject(Object,System.Nullable{MemoryHandle}@,Microsoft.ML.OnnxRuntime.Tensors.TensorElementType@)
      language: CSharp
      name:
        CSharp: CreateFromTensorObject(Object, out Nullable<MemoryHandle>, out TensorElementType)
        VB: CreateFromTensorObject(Object, ByRef Nullable(Of MemoryHandle), ByRef TensorElementType)
      nameWithType:
        CSharp: OrtValue.CreateFromTensorObject(Object, out Nullable<MemoryHandle>, out TensorElementType)
        VB: OrtValue.CreateFromTensorObject(Object, ByRef Nullable(Of MemoryHandle), ByRef TensorElementType)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtValue.CreateFromTensorObject(Object, out System.Nullable<MemoryHandle>, out Microsoft.ML.OnnxRuntime.Tensors.TensorElementType)
        VB: Microsoft.ML.OnnxRuntime.OrtValue.CreateFromTensorObject(Object, ByRef System.Nullable(Of MemoryHandle), ByRef Microsoft.ML.OnnxRuntime.Tensors.TensorElementType)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateFromTensorObject
        path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        startLine: 143
      summary: "\nThis is a factory method creates a native Onnxruntime OrtValue containing a tensor.\nThe method will attempt to pin managed memory so no copying occurs when data is passed down\nto native code.\n"
      example: []
      syntax:
        content:
          CSharp: public static OrtValue CreateFromTensorObject(Object value, out MemoryHandle? memoryHandle, out TensorElementType elementType)
          VB: Public Shared Function CreateFromTensorObject(value As Object, ByRef memoryHandle As MemoryHandle?, ByRef elementType As TensorElementType) As OrtValue
        parameters:
        - id: value
          type: Object
          description: Tensor object
        - id: memoryHandle
          type: System.Nullable{MemoryHandle}
          description: >
            For all tensor types but string tensors we endeavor to use managed memory
             to avoid additional allocation and copy. This out parameter represents a chunk of pinned memory which will need
             to be disposed when no longer needed. The lifespan of memoryHandle should eclipse the lifespan of the corresponding
             OrtValue.
        - id: elementType
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
          description: discovered tensor element type
        return:
          type: Microsoft.ML.OnnxRuntime.OrtValue
          description: And instance of OrtValue constructed on top of the object
      overload: Microsoft.ML.OnnxRuntime.OrtValue.CreateFromTensorObject*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.OrtValue.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.OrtValue.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: OrtValue.ReleaseHandle()
        VB: OrtValue.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtValue.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.OrtValue.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/OrtValue.shared.cs
        startLine: 375
      summary: "\nOverrides SafeHandle.ReleaseHandle() to properly dispose of\nthe native instance of OrtValue\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.OrtValue.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
    commentId: T:Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
    language: CSharp
    name:
      CSharp: PrePackedWeightsContainer
      VB: PrePackedWeightsContainer
    nameWithType:
      CSharp: PrePackedWeightsContainer
      VB: PrePackedWeightsContainer
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
      VB: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/PrepackedWeightsContainer.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: PrePackedWeightsContainer
      path: ../src/Microsoft.ML.OnnxRuntime/PrepackedWeightsContainer.shared.cs
      startLine: 13
    summary: "\nThis class holds pre-packed weights of shared initializers to be shared across sessions using these initializers\nand thereby provide memory savings by sharing the same pre-packed versions of these shared initializers\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PrePackedWeightsContainer : SafeHandle'
        VB: >-
          Public Class PrePackedWeightsContainer

              Inherits SafeHandle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.#ctor
      commentId: M:Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.#ctor
      language: CSharp
      name:
        CSharp: PrePackedWeightsContainer()
        VB: PrePackedWeightsContainer()
      nameWithType:
        CSharp: PrePackedWeightsContainer.PrePackedWeightsContainer()
        VB: PrePackedWeightsContainer.PrePackedWeightsContainer()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.PrePackedWeightsContainer()
        VB: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.PrePackedWeightsContainer()
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/PrepackedWeightsContainer.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/PrepackedWeightsContainer.shared.cs
        startLine: 19
      summary: "\nConstructs an empty PrePackedWeightsContainer\n"
      example: []
      syntax:
        content:
          CSharp: public PrePackedWeightsContainer()
          VB: Public Sub New
      overload: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: PrePackedWeightsContainer.IsInvalid
        VB: PrePackedWeightsContainer.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/PrepackedWeightsContainer.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/PrepackedWeightsContainer.shared.cs
        startLine: 34
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: PrePackedWeightsContainer.ReleaseHandle()
        VB: PrePackedWeightsContainer.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/PrepackedWeightsContainer.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/PrepackedWeightsContainer.shared.cs
        startLine: 42
      summary: "\nOverrides SafeHandle.ReleaseHandle() to deallocate\na chunk of memory using the specified allocator.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions
    commentId: T:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions
    language: CSharp
    name:
      CSharp: OrtTensorRTProviderOptions
      VB: OrtTensorRTProviderOptions
    nameWithType:
      CSharp: OrtTensorRTProviderOptions
      VB: OrtTensorRTProviderOptions
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions
      VB: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtTensorRTProviderOptions
      path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
      startLine: 13
    summary: "\nHolds the options for configuring a TensorRT Execution Provider instance\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OrtTensorRTProviderOptions : SafeHandle'
        VB: >-
          Public Class OrtTensorRTProviderOptions

              Inherits SafeHandle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.#ctor
      commentId: M:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.#ctor
      language: CSharp
      name:
        CSharp: OrtTensorRTProviderOptions()
        VB: OrtTensorRTProviderOptions()
      nameWithType:
        CSharp: OrtTensorRTProviderOptions.OrtTensorRTProviderOptions()
        VB: OrtTensorRTProviderOptions.OrtTensorRTProviderOptions()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.OrtTensorRTProviderOptions()
        VB: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.OrtTensorRTProviderOptions()
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 31
      summary: "\nConstructs an empty OrtTensorRTProviderOptions instance\n"
      example: []
      syntax:
        content:
          CSharp: public OrtTensorRTProviderOptions()
          VB: Public Sub New
      overload: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetOptions
      commentId: M:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetOptions
      language: CSharp
      name:
        CSharp: GetOptions()
        VB: GetOptions()
      nameWithType:
        CSharp: OrtTensorRTProviderOptions.GetOptions()
        VB: OrtTensorRTProviderOptions.GetOptions()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetOptions()
        VB: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetOptions()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetOptions
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 44
      summary: "\nGet TensorRT EP provider options\n"
      example: []
      syntax:
        content:
          CSharp: public string GetOptions()
          VB: Public Function GetOptions As String
        return:
          type: System.String
          description: 'return C# UTF-16 encoded string '
      overload: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetOptions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.UpdateOptions(Dictionary{System.String,System.String})
      commentId: M:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.UpdateOptions(Dictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: UpdateOptions(Dictionary<String, String>)
        VB: UpdateOptions(Dictionary(Of String, String))
      nameWithType:
        CSharp: OrtTensorRTProviderOptions.UpdateOptions(Dictionary<String, String>)
        VB: OrtTensorRTProviderOptions.UpdateOptions(Dictionary(Of String, String))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.UpdateOptions(Dictionary<System.String, System.String>)
        VB: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.UpdateOptions(Dictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UpdateOptions
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 63
      summary: "\nUpdates  the configuration knobs of OrtTensorRTProviderOptions that will eventually be used to configure a TensorRT EP\nPlease refer to the following on different key/value pairs to configure a TensorRT EP and their meaning:\nhttps://www.onnxruntime.ai/docs/reference/execution-providers/TensorRT-ExecutionProvider.html\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateOptions(Dictionary<string, string> providerOptions)
          VB: Public Sub UpdateOptions(providerOptions As Dictionary(Of String, String))
        parameters:
        - id: providerOptions
          type: Dictionary{System.String,System.String}
          description: key/value pairs used to configure a TensorRT Execution Provider
      overload: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.UpdateOptions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetDeviceId
      commentId: M:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetDeviceId
      language: CSharp
      name:
        CSharp: GetDeviceId()
        VB: GetDeviceId()
      nameWithType:
        CSharp: OrtTensorRTProviderOptions.GetDeviceId()
        VB: OrtTensorRTProviderOptions.GetDeviceId()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetDeviceId()
        VB: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetDeviceId()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetDeviceId
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 84
      summary: "\nGet device id of TensorRT EP.\n"
      example: []
      syntax:
        content:
          CSharp: public int GetDeviceId()
          VB: Public Function GetDeviceId As Integer
        return:
          type: System.Int32
          description: 'device id '
      overload: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetDeviceId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: OrtTensorRTProviderOptions.IsInvalid
        VB: OrtTensorRTProviderOptions.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 97
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: OrtTensorRTProviderOptions.ReleaseHandle()
        VB: OrtTensorRTProviderOptions.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 112
      summary: "\nOverrides SafeHandle.ReleaseHandle() to properly dispose of\nthe native instance of OrtTensorRTProviderOptions\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions
    commentId: T:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions
    language: CSharp
    name:
      CSharp: OrtCUDAProviderOptions
      VB: OrtCUDAProviderOptions
    nameWithType:
      CSharp: OrtCUDAProviderOptions
      VB: OrtCUDAProviderOptions
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions
      VB: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: OrtCUDAProviderOptions
      path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
      startLine: 126
    summary: "\nHolds the options for configuring a CUDA Execution Provider instance\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OrtCUDAProviderOptions : SafeHandle'
        VB: >-
          Public Class OrtCUDAProviderOptions

              Inherits SafeHandle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.#ctor
      commentId: M:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.#ctor
      language: CSharp
      name:
        CSharp: OrtCUDAProviderOptions()
        VB: OrtCUDAProviderOptions()
      nameWithType:
        CSharp: OrtCUDAProviderOptions.OrtCUDAProviderOptions()
        VB: OrtCUDAProviderOptions.OrtCUDAProviderOptions()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.OrtCUDAProviderOptions()
        VB: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.OrtCUDAProviderOptions()
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 142
      summary: "\nConstructs an empty OrtCUDAroviderOptions instance\n"
      example: []
      syntax:
        content:
          CSharp: public OrtCUDAProviderOptions()
          VB: Public Sub New
      overload: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.GetOptions
      commentId: M:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.GetOptions
      language: CSharp
      name:
        CSharp: GetOptions()
        VB: GetOptions()
      nameWithType:
        CSharp: OrtCUDAProviderOptions.GetOptions()
        VB: OrtCUDAProviderOptions.GetOptions()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.GetOptions()
        VB: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.GetOptions()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetOptions
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 155
      summary: "\nGet CUDA EP provider options\n"
      example: []
      syntax:
        content:
          CSharp: public string GetOptions()
          VB: Public Function GetOptions As String
        return:
          type: System.String
          description: 'return C# UTF-16 encoded string '
      overload: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.GetOptions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.UpdateOptions(Dictionary{System.String,System.String})
      commentId: M:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.UpdateOptions(Dictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: UpdateOptions(Dictionary<String, String>)
        VB: UpdateOptions(Dictionary(Of String, String))
      nameWithType:
        CSharp: OrtCUDAProviderOptions.UpdateOptions(Dictionary<String, String>)
        VB: OrtCUDAProviderOptions.UpdateOptions(Dictionary(Of String, String))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.UpdateOptions(Dictionary<System.String, System.String>)
        VB: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.UpdateOptions(Dictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UpdateOptions
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 174
      summary: "\nUpdates  the configuration knobs of OrtCUDAProviderOptions that will eventually be used to configure a CUDA EP\nPlease refer to the following on different key/value pairs to configure a CUDA EP and their meaning:\nhttps://www.onnxruntime.ai/docs/reference/execution-providers/CUDA-ExecutionProvider.html\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateOptions(Dictionary<string, string> providerOptions)
          VB: Public Sub UpdateOptions(providerOptions As Dictionary(Of String, String))
        parameters:
        - id: providerOptions
          type: Dictionary{System.String,System.String}
          description: key/value pairs used to configure a CUDA Execution Provider
      overload: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.UpdateOptions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: OrtCUDAProviderOptions.IsInvalid
        VB: OrtCUDAProviderOptions.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 194
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: OrtCUDAProviderOptions.ReleaseHandle()
        VB: OrtCUDAProviderOptions.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 209
      summary: "\nOverrides SafeHandle.ReleaseHandle() to properly dispose of\nthe native instance of OrtCUDAProviderOptions\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper
    commentId: T:Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper
    language: CSharp
    name:
      CSharp: ProviderOptionsValueHelper
      VB: ProviderOptionsValueHelper
    nameWithType:
      CSharp: ProviderOptionsValueHelper
      VB: ProviderOptionsValueHelper
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper
      VB: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: ProviderOptionsValueHelper
      path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
      startLine: 223
    summary: "\nThis helper class contains methods to handle values of provider options\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ProviderOptionsValueHelper : object'
        VB: >-
          Public Class ProviderOptionsValueHelper

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper.StringToDict(System.String,Dictionary{System.String,System.String})
      commentId: M:Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper.StringToDict(System.String,Dictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: StringToDict(String, Dictionary<String, String>)
        VB: StringToDict(String, Dictionary(Of String, String))
      nameWithType:
        CSharp: ProviderOptionsValueHelper.StringToDict(String, Dictionary<String, String>)
        VB: ProviderOptionsValueHelper.StringToDict(String, Dictionary(Of String, String))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper.StringToDict(System.String, Dictionary<System.String, System.String>)
        VB: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper.StringToDict(System.String, Dictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: StringToDict
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 230
      summary: "\nParse from string and save to dictionary\n"
      example: []
      syntax:
        content:
          CSharp: public static void StringToDict(string s, Dictionary<string, string> dict)
          VB: Public Shared Sub StringToDict(s As String, dict As Dictionary(Of String, String))
        parameters:
        - id: s
          type: System.String
          description: C# string
        - id: dict
          type: Dictionary{System.String,System.String}
          description: Dictionary instance to store the parsing result of s
      overload: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper.StringToDict*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Microsoft.ML.OnnxRuntime.CoreMLFlags
    commentId: T:Microsoft.ML.OnnxRuntime.CoreMLFlags
    language: CSharp
    name:
      CSharp: CoreMLFlags
      VB: CoreMLFlags
    nameWithType:
      CSharp: CoreMLFlags
      VB: CoreMLFlags
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.CoreMLFlags
      VB: Microsoft.ML.OnnxRuntime.CoreMLFlags
    type: Enum
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: CoreMLFlags
      path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
      startLine: 250
    summary: "\nCoreML flags for use with SessionOptions\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum CoreMLFlags : uint'
        VB: Public Enum CoreMLFlags As UInteger
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_USE_NONE
      commentId: F:Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_USE_NONE
      language: CSharp
      name:
        CSharp: COREML_FLAG_USE_NONE
        VB: COREML_FLAG_USE_NONE
      nameWithType:
        CSharp: CoreMLFlags.COREML_FLAG_USE_NONE
        VB: CoreMLFlags.COREML_FLAG_USE_NONE
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_USE_NONE
        VB: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_USE_NONE
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: COREML_FLAG_USE_NONE
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 253
      syntax:
        content:
          CSharp: COREML_FLAG_USE_NONE = null
          VB: COREML_FLAG_USE_NONE = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.CoreMLFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_USE_CPU_ONLY
      commentId: F:Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_USE_CPU_ONLY
      language: CSharp
      name:
        CSharp: COREML_FLAG_USE_CPU_ONLY
        VB: COREML_FLAG_USE_CPU_ONLY
      nameWithType:
        CSharp: CoreMLFlags.COREML_FLAG_USE_CPU_ONLY
        VB: CoreMLFlags.COREML_FLAG_USE_CPU_ONLY
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_USE_CPU_ONLY
        VB: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_USE_CPU_ONLY
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: COREML_FLAG_USE_CPU_ONLY
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 254
      syntax:
        content:
          CSharp: COREML_FLAG_USE_CPU_ONLY = null
          VB: COREML_FLAG_USE_CPU_ONLY = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.CoreMLFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_ENABLE_ON_SUBGRAPH
      commentId: F:Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_ENABLE_ON_SUBGRAPH
      language: CSharp
      name:
        CSharp: COREML_FLAG_ENABLE_ON_SUBGRAPH
        VB: COREML_FLAG_ENABLE_ON_SUBGRAPH
      nameWithType:
        CSharp: CoreMLFlags.COREML_FLAG_ENABLE_ON_SUBGRAPH
        VB: CoreMLFlags.COREML_FLAG_ENABLE_ON_SUBGRAPH
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_ENABLE_ON_SUBGRAPH
        VB: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_ENABLE_ON_SUBGRAPH
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: COREML_FLAG_ENABLE_ON_SUBGRAPH
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 255
      syntax:
        content:
          CSharp: COREML_FLAG_ENABLE_ON_SUBGRAPH = null
          VB: COREML_FLAG_ENABLE_ON_SUBGRAPH = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.CoreMLFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE
      commentId: F:Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE
      language: CSharp
      name:
        CSharp: COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE
        VB: COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE
      nameWithType:
        CSharp: CoreMLFlags.COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE
        VB: CoreMLFlags.COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE
        VB: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 256
      syntax:
        content:
          CSharp: COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE = null
          VB: COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.CoreMLFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_LAST
      commentId: F:Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_LAST
      language: CSharp
      name:
        CSharp: COREML_FLAG_LAST
        VB: COREML_FLAG_LAST
      nameWithType:
        CSharp: CoreMLFlags.COREML_FLAG_LAST
        VB: CoreMLFlags.COREML_FLAG_LAST
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_LAST
        VB: Microsoft.ML.OnnxRuntime.CoreMLFlags.COREML_FLAG_LAST
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: COREML_FLAG_LAST
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 257
      syntax:
        content:
          CSharp: COREML_FLAG_LAST = null
          VB: COREML_FLAG_LAST = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.CoreMLFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Microsoft.ML.OnnxRuntime.NnapiFlags
    commentId: T:Microsoft.ML.OnnxRuntime.NnapiFlags
    language: CSharp
    name:
      CSharp: NnapiFlags
      VB: NnapiFlags
    nameWithType:
      CSharp: NnapiFlags
      VB: NnapiFlags
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.NnapiFlags
      VB: Microsoft.ML.OnnxRuntime.NnapiFlags
    type: Enum
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: NnapiFlags
      path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
      startLine: 264
    summary: "\nNNAPI flags for use with SessionOptions\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum NnapiFlags : int'
        VB: Public Enum NnapiFlags As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_NONE
      commentId: F:Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_NONE
      language: CSharp
      name:
        CSharp: NNAPI_FLAG_USE_NONE
        VB: NNAPI_FLAG_USE_NONE
      nameWithType:
        CSharp: NnapiFlags.NNAPI_FLAG_USE_NONE
        VB: NnapiFlags.NNAPI_FLAG_USE_NONE
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_NONE
        VB: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_NONE
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: NNAPI_FLAG_USE_NONE
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 267
      syntax:
        content:
          CSharp: NNAPI_FLAG_USE_NONE = null
          VB: NNAPI_FLAG_USE_NONE = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.NnapiFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_FP16
      commentId: F:Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_FP16
      language: CSharp
      name:
        CSharp: NNAPI_FLAG_USE_FP16
        VB: NNAPI_FLAG_USE_FP16
      nameWithType:
        CSharp: NnapiFlags.NNAPI_FLAG_USE_FP16
        VB: NnapiFlags.NNAPI_FLAG_USE_FP16
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_FP16
        VB: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_FP16
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: NNAPI_FLAG_USE_FP16
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 268
      syntax:
        content:
          CSharp: NNAPI_FLAG_USE_FP16 = null
          VB: NNAPI_FLAG_USE_FP16 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.NnapiFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_NCHW
      commentId: F:Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_NCHW
      language: CSharp
      name:
        CSharp: NNAPI_FLAG_USE_NCHW
        VB: NNAPI_FLAG_USE_NCHW
      nameWithType:
        CSharp: NnapiFlags.NNAPI_FLAG_USE_NCHW
        VB: NnapiFlags.NNAPI_FLAG_USE_NCHW
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_NCHW
        VB: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_USE_NCHW
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: NNAPI_FLAG_USE_NCHW
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 269
      syntax:
        content:
          CSharp: NNAPI_FLAG_USE_NCHW = null
          VB: NNAPI_FLAG_USE_NCHW = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.NnapiFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_CPU_DISABLED
      commentId: F:Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_CPU_DISABLED
      language: CSharp
      name:
        CSharp: NNAPI_FLAG_CPU_DISABLED
        VB: NNAPI_FLAG_CPU_DISABLED
      nameWithType:
        CSharp: NnapiFlags.NNAPI_FLAG_CPU_DISABLED
        VB: NnapiFlags.NNAPI_FLAG_CPU_DISABLED
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_CPU_DISABLED
        VB: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_CPU_DISABLED
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: NNAPI_FLAG_CPU_DISABLED
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 270
      syntax:
        content:
          CSharp: NNAPI_FLAG_CPU_DISABLED = null
          VB: NNAPI_FLAG_CPU_DISABLED = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.NnapiFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_CPU_ONLY
      commentId: F:Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_CPU_ONLY
      language: CSharp
      name:
        CSharp: NNAPI_FLAG_CPU_ONLY
        VB: NNAPI_FLAG_CPU_ONLY
      nameWithType:
        CSharp: NnapiFlags.NNAPI_FLAG_CPU_ONLY
        VB: NnapiFlags.NNAPI_FLAG_CPU_ONLY
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_CPU_ONLY
        VB: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_CPU_ONLY
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: NNAPI_FLAG_CPU_ONLY
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 271
      syntax:
        content:
          CSharp: NNAPI_FLAG_CPU_ONLY = null
          VB: NNAPI_FLAG_CPU_ONLY = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.NnapiFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_LAST
      commentId: F:Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_LAST
      language: CSharp
      name:
        CSharp: NNAPI_FLAG_LAST
        VB: NNAPI_FLAG_LAST
      nameWithType:
        CSharp: NnapiFlags.NNAPI_FLAG_LAST
        VB: NnapiFlags.NNAPI_FLAG_LAST
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_LAST
        VB: Microsoft.ML.OnnxRuntime.NnapiFlags.NNAPI_FLAG_LAST
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: NNAPI_FLAG_LAST
        path: ../src/Microsoft.ML.OnnxRuntime/ProviderOptions.shared.cs
        startLine: 272
      syntax:
        content:
          CSharp: NNAPI_FLAG_LAST = null
          VB: NNAPI_FLAG_LAST = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.NnapiFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Microsoft.ML.OnnxRuntime.RunOptions
    commentId: T:Microsoft.ML.OnnxRuntime.RunOptions
    language: CSharp
    name:
      CSharp: RunOptions
      VB: RunOptions
    nameWithType:
      CSharp: RunOptions
      VB: RunOptions
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.RunOptions
      VB: Microsoft.ML.OnnxRuntime.RunOptions
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: RunOptions
      path: ../src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
      startLine: 10
    summary: "\nSets various runtime options. \n"
    example: []
    syntax:
      content:
        CSharp: 'public class RunOptions : SafeHandle'
        VB: >-
          Public Class RunOptions

              Inherits SafeHandle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.RunOptions.#ctor
      commentId: M:Microsoft.ML.OnnxRuntime.RunOptions.#ctor
      language: CSharp
      name:
        CSharp: RunOptions()
        VB: RunOptions()
      nameWithType:
        CSharp: RunOptions.RunOptions()
        VB: RunOptions.RunOptions()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.RunOptions.RunOptions()
        VB: Microsoft.ML.OnnxRuntime.RunOptions.RunOptions()
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
        startLine: 23
      summary: "\nDefault __ctor. Creates default RuntimeOptions\n"
      example: []
      syntax:
        content:
          CSharp: public RunOptions()
          VB: Public Sub New
      overload: Microsoft.ML.OnnxRuntime.RunOptions.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.RunOptions.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.RunOptions.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: RunOptions.IsInvalid
        VB: RunOptions.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.RunOptions.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.RunOptions.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
        startLine: 33
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.RunOptions.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.RunOptions.LogSeverityLevel
      commentId: P:Microsoft.ML.OnnxRuntime.RunOptions.LogSeverityLevel
      language: CSharp
      name:
        CSharp: LogSeverityLevel
        VB: LogSeverityLevel
      nameWithType:
        CSharp: RunOptions.LogSeverityLevel
        VB: RunOptions.LogSeverityLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.RunOptions.LogSeverityLevel
        VB: Microsoft.ML.OnnxRuntime.RunOptions.LogSeverityLevel
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: LogSeverityLevel
        path: ../src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
        startLine: 38
      summary: "\nLog Severity Level for the session logs. Default = ORT_LOGGING_LEVEL_WARNING\n"
      example: []
      syntax:
        content:
          CSharp: public OrtLoggingLevel LogSeverityLevel { get; set; }
          VB: Public Property LogSeverityLevel As OrtLoggingLevel
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
      overload: Microsoft.ML.OnnxRuntime.RunOptions.LogSeverityLevel*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.RunOptions.LogVerbosityLevel
      commentId: P:Microsoft.ML.OnnxRuntime.RunOptions.LogVerbosityLevel
      language: CSharp
      name:
        CSharp: LogVerbosityLevel
        VB: LogVerbosityLevel
      nameWithType:
        CSharp: RunOptions.LogVerbosityLevel
        VB: RunOptions.LogVerbosityLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.RunOptions.LogVerbosityLevel
        VB: Microsoft.ML.OnnxRuntime.RunOptions.LogVerbosityLevel
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: LogVerbosityLevel
        path: ../src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
        startLine: 56
      summary: "\nLog Verbosity Level for the session logs. Default = 0. Valid values are >=0.\nThis takes into effect only when the LogSeverityLevel is set to ORT_LOGGING_LEVEL_VERBOSE.\n"
      example: []
      syntax:
        content:
          CSharp: public int LogVerbosityLevel { get; set; }
          VB: Public Property LogVerbosityLevel As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Microsoft.ML.OnnxRuntime.RunOptions.LogVerbosityLevel*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.RunOptions.LogId
      commentId: P:Microsoft.ML.OnnxRuntime.RunOptions.LogId
      language: CSharp
      name:
        CSharp: LogId
        VB: LogId
      nameWithType:
        CSharp: RunOptions.LogId
        VB: RunOptions.LogId
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.RunOptions.LogId
        VB: Microsoft.ML.OnnxRuntime.RunOptions.LogId
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: LogId
        path: ../src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
        startLine: 73
      summary: "\nLog tag to be used during the run. default = &quot;&quot;\n"
      example: []
      syntax:
        content:
          CSharp: public string LogId { get; set; }
          VB: Public Property LogId As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.ML.OnnxRuntime.RunOptions.LogId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.RunOptions.Terminate
      commentId: P:Microsoft.ML.OnnxRuntime.RunOptions.Terminate
      language: CSharp
      name:
        CSharp: Terminate
        VB: Terminate
      nameWithType:
        CSharp: RunOptions.Terminate
        VB: RunOptions.Terminate
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.RunOptions.Terminate
        VB: Microsoft.ML.OnnxRuntime.RunOptions.Terminate
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Terminate
        path: ../src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
        startLine: 99
      summary: "\nSets a flag to terminate all Run() calls that are currently using this RunOptions object \nDefault = false\n"
      example: []
      syntax:
        content:
          CSharp: public bool Terminate { get; set; }
          VB: Public Property Terminate As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: terminate flag value
      overload: Microsoft.ML.OnnxRuntime.RunOptions.Terminate*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.RunOptions.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.RunOptions.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: RunOptions.ReleaseHandle()
        VB: RunOptions.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.RunOptions.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.RunOptions.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/RunOptions.shared.cs
        startLine: 128
      summary: "\nOverrides SafeHandle.ReleaseHandle() to properly dispose of\nthe native instance of RunOptions\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.RunOptions.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
    commentId: T:Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
    language: CSharp
    name:
      CSharp: GraphOptimizationLevel
      VB: GraphOptimizationLevel
    nameWithType:
      CSharp: GraphOptimizationLevel
      VB: GraphOptimizationLevel
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
      VB: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
    type: Enum
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: GraphOptimizationLevel
      path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
      startLine: 15
    summary: "\nGraph optimization level to use with SessionOptions\n[https://github.com/microsoft/onnxruntime/blob/master/docs/ONNX_Runtime_Graph_Optimizations.md]\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum GraphOptimizationLevel : int'
        VB: Public Enum GraphOptimizationLevel As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_DISABLE_ALL
      commentId: F:Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_DISABLE_ALL
      language: CSharp
      name:
        CSharp: ORT_DISABLE_ALL
        VB: ORT_DISABLE_ALL
      nameWithType:
        CSharp: GraphOptimizationLevel.ORT_DISABLE_ALL
        VB: GraphOptimizationLevel.ORT_DISABLE_ALL
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_DISABLE_ALL
        VB: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_DISABLE_ALL
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_DISABLE_ALL
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 17
      syntax:
        content:
          CSharp: ORT_DISABLE_ALL = null
          VB: ORT_DISABLE_ALL = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_BASIC
      commentId: F:Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_BASIC
      language: CSharp
      name:
        CSharp: ORT_ENABLE_BASIC
        VB: ORT_ENABLE_BASIC
      nameWithType:
        CSharp: GraphOptimizationLevel.ORT_ENABLE_BASIC
        VB: GraphOptimizationLevel.ORT_ENABLE_BASIC
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_BASIC
        VB: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_BASIC
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_ENABLE_BASIC
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 18
      syntax:
        content:
          CSharp: ORT_ENABLE_BASIC = null
          VB: ORT_ENABLE_BASIC = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_EXTENDED
      commentId: F:Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_EXTENDED
      language: CSharp
      name:
        CSharp: ORT_ENABLE_EXTENDED
        VB: ORT_ENABLE_EXTENDED
      nameWithType:
        CSharp: GraphOptimizationLevel.ORT_ENABLE_EXTENDED
        VB: GraphOptimizationLevel.ORT_ENABLE_EXTENDED
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_EXTENDED
        VB: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_EXTENDED
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_ENABLE_EXTENDED
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 19
      syntax:
        content:
          CSharp: ORT_ENABLE_EXTENDED = null
          VB: ORT_ENABLE_EXTENDED = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_ALL
      commentId: F:Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_ALL
      language: CSharp
      name:
        CSharp: ORT_ENABLE_ALL
        VB: ORT_ENABLE_ALL
      nameWithType:
        CSharp: GraphOptimizationLevel.ORT_ENABLE_ALL
        VB: GraphOptimizationLevel.ORT_ENABLE_ALL
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_ALL
        VB: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel.ORT_ENABLE_ALL
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_ENABLE_ALL
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 20
      syntax:
        content:
          CSharp: ORT_ENABLE_ALL = null
          VB: ORT_ENABLE_ALL = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Microsoft.ML.OnnxRuntime.ExecutionMode
    commentId: T:Microsoft.ML.OnnxRuntime.ExecutionMode
    language: CSharp
    name:
      CSharp: ExecutionMode
      VB: ExecutionMode
    nameWithType:
      CSharp: ExecutionMode
      VB: ExecutionMode
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.ExecutionMode
      VB: Microsoft.ML.OnnxRuntime.ExecutionMode
    type: Enum
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: ExecutionMode
      path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
      startLine: 29
    summary: "\nControls whether you want to execute operators in the graph sequentially or in parallel.\nUsually when the model has many branches, setting this option to ExecutionMode.ORT_PARALLEL\nwill give you better performance.\nSee [ONNX_Runtime_Perf_Tuning.md] for more details.\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum ExecutionMode : int'
        VB: Public Enum ExecutionMode As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Microsoft.ML.OnnxRuntime.ExecutionMode.ORT_SEQUENTIAL
      commentId: F:Microsoft.ML.OnnxRuntime.ExecutionMode.ORT_SEQUENTIAL
      language: CSharp
      name:
        CSharp: ORT_SEQUENTIAL
        VB: ORT_SEQUENTIAL
      nameWithType:
        CSharp: ExecutionMode.ORT_SEQUENTIAL
        VB: ExecutionMode.ORT_SEQUENTIAL
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.ExecutionMode.ORT_SEQUENTIAL
        VB: Microsoft.ML.OnnxRuntime.ExecutionMode.ORT_SEQUENTIAL
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_SEQUENTIAL
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 31
      syntax:
        content:
          CSharp: ORT_SEQUENTIAL = null
          VB: ORT_SEQUENTIAL = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.ExecutionMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.ExecutionMode.ORT_PARALLEL
      commentId: F:Microsoft.ML.OnnxRuntime.ExecutionMode.ORT_PARALLEL
      language: CSharp
      name:
        CSharp: ORT_PARALLEL
        VB: ORT_PARALLEL
      nameWithType:
        CSharp: ExecutionMode.ORT_PARALLEL
        VB: ExecutionMode.ORT_PARALLEL
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.ExecutionMode.ORT_PARALLEL
        VB: Microsoft.ML.OnnxRuntime.ExecutionMode.ORT_PARALLEL
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ORT_PARALLEL
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 32
      syntax:
        content:
          CSharp: ORT_PARALLEL = null
          VB: ORT_PARALLEL = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.ExecutionMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Microsoft.ML.OnnxRuntime.SessionOptions
    commentId: T:Microsoft.ML.OnnxRuntime.SessionOptions
    language: CSharp
    name:
      CSharp: SessionOptions
      VB: SessionOptions
    nameWithType:
      CSharp: SessionOptions
      VB: SessionOptions
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.SessionOptions
      VB: Microsoft.ML.OnnxRuntime.SessionOptions
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: SessionOptions
      path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
      startLine: 38
    summary: "\nHolds the options for creating an InferenceSession\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SessionOptions : SafeHandle'
        VB: >-
          Public Class SessionOptions

              Inherits SafeHandle
    inheritance:
    - System.Object
    extensionMethods:
    - Microsoft.ML.OnnxRuntime.SessionOptions.Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(System.String,System.Boolean)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.#ctor
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.#ctor
      language: CSharp
      name:
        CSharp: SessionOptions()
        VB: SessionOptions()
      nameWithType:
        CSharp: SessionOptions.SessionOptions()
        VB: SessionOptions.SessionOptions()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.SessionOptions()
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.SessionOptions()
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 49
      summary: "\nConstructs an empty SessionOptions\n"
      example: []
      syntax:
        content:
          CSharp: public SessionOptions()
          VB: Public Sub New
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider(System.Int32)
      language: CSharp
      name:
        CSharp: MakeSessionOptionWithCudaProvider(Int32)
        VB: MakeSessionOptionWithCudaProvider(Int32)
      nameWithType:
        CSharp: SessionOptions.MakeSessionOptionWithCudaProvider(Int32)
        VB: SessionOptions.MakeSessionOptionWithCudaProvider(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: MakeSessionOptionWithCudaProvider
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 61
      summary: "\nA helper method to construct a SessionOptions object for CUDA execution.\nUse only if CUDA is installed and you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public static SessionOptions MakeSessionOptionWithCudaProvider(int deviceId = 0)
          VB: Public Shared Function MakeSessionOptionWithCudaProvider(deviceId As Integer = 0) As SessionOptions
        parameters:
        - id: deviceId
          type: System.Int32
          description: ''
        return:
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: A SessionsOptions() object configured for execution on deviceId
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider(Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider(Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions)
      language: CSharp
      name:
        CSharp: MakeSessionOptionWithCudaProvider(OrtCUDAProviderOptions)
        VB: MakeSessionOptionWithCudaProvider(OrtCUDAProviderOptions)
      nameWithType:
        CSharp: SessionOptions.MakeSessionOptionWithCudaProvider(OrtCUDAProviderOptions)
        VB: SessionOptions.MakeSessionOptionWithCudaProvider(OrtCUDAProviderOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider(Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider(Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: MakeSessionOptionWithCudaProvider
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 75
      summary: "\nA helper method to construct a SessionOptions object for CUDA execution provider.\nUse only if CUDA is installed and you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public static SessionOptions MakeSessionOptionWithCudaProvider(OrtCUDAProviderOptions cudaProviderOptions)
          VB: Public Shared Function MakeSessionOptionWithCudaProvider(cudaProviderOptions As OrtCUDAProviderOptions) As SessionOptions
        parameters:
        - id: cudaProviderOptions
          type: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions
          description: CUDA EP provider options
        return:
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: A SessionsOptions() object configured for execution on provider options
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider(System.Int32)
      language: CSharp
      name:
        CSharp: MakeSessionOptionWithTensorrtProvider(Int32)
        VB: MakeSessionOptionWithTensorrtProvider(Int32)
      nameWithType:
        CSharp: SessionOptions.MakeSessionOptionWithTensorrtProvider(Int32)
        VB: SessionOptions.MakeSessionOptionWithTensorrtProvider(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: MakeSessionOptionWithTensorrtProvider
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 97
      summary: "\nA helper method to construct a SessionOptions object for TensorRT execution.\nUse only if CUDA/TensorRT are installed and you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public static SessionOptions MakeSessionOptionWithTensorrtProvider(int deviceId = 0)
          VB: Public Shared Function MakeSessionOptionWithTensorrtProvider(deviceId As Integer = 0) As SessionOptions
        parameters:
        - id: deviceId
          type: System.Int32
          description: ''
        return:
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: A SessionsOptions() object configured for execution on deviceId
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider(Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider(Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions)
      language: CSharp
      name:
        CSharp: MakeSessionOptionWithTensorrtProvider(OrtTensorRTProviderOptions)
        VB: MakeSessionOptionWithTensorrtProvider(OrtTensorRTProviderOptions)
      nameWithType:
        CSharp: SessionOptions.MakeSessionOptionWithTensorrtProvider(OrtTensorRTProviderOptions)
        VB: SessionOptions.MakeSessionOptionWithTensorrtProvider(OrtTensorRTProviderOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider(Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider(Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: MakeSessionOptionWithTensorrtProvider
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 120
      summary: "\nA helper method to construct a SessionOptions object for TensorRT execution provider.\nUse only if CUDA/TensorRT are installed and you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public static SessionOptions MakeSessionOptionWithTensorrtProvider(OrtTensorRTProviderOptions trtProviderOptions)
          VB: Public Shared Function MakeSessionOptionWithTensorrtProvider(trtProviderOptions As OrtTensorRTProviderOptions) As SessionOptions
        parameters:
        - id: trtProviderOptions
          type: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions
          description: TensorRT EP provider options
        return:
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: A SessionsOptions() object configured for execution on provider options
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithNupharProvider(String)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithNupharProvider(String)
      language: CSharp
      name:
        CSharp: MakeSessionOptionWithNupharProvider(String)
        VB: MakeSessionOptionWithNupharProvider(String)
      nameWithType:
        CSharp: SessionOptions.MakeSessionOptionWithNupharProvider(String)
        VB: SessionOptions.MakeSessionOptionWithNupharProvider(String)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithNupharProvider(String)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithNupharProvider(String)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: MakeSessionOptionWithNupharProvider
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 144
      summary: "\nA helper method to construct a SessionOptions object for Nuphar execution.\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public static SessionOptions MakeSessionOptionWithNupharProvider(String settings = null)
          VB: Public Shared Function MakeSessionOptionWithNupharProvider(settings As String = Nothing) As SessionOptions
        parameters:
        - id: settings
          type: String
          description: settings string, comprises of comma separated key:value pairs. default is empty
        return:
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: A SessionsOptions() object configured for execution with Nuphar
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithNupharProvider*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTvmProvider(String)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTvmProvider(String)
      language: CSharp
      name:
        CSharp: MakeSessionOptionWithTvmProvider(String)
        VB: MakeSessionOptionWithTvmProvider(String)
      nameWithType:
        CSharp: SessionOptions.MakeSessionOptionWithTvmProvider(String)
        VB: SessionOptions.MakeSessionOptionWithTvmProvider(String)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTvmProvider(String)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTvmProvider(String)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: MakeSessionOptionWithTvmProvider
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 158
      summary: "\nA helper method to construct a SessionOptions object for TVM execution.\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public static SessionOptions MakeSessionOptionWithTvmProvider(String settings = null)
          VB: Public Shared Function MakeSessionOptionWithTvmProvider(settings As String = Nothing) As SessionOptions
        parameters:
        - id: settings
          type: String
          description: settings string, comprises of comma separated key:value pairs. default is empty
        return:
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: A SessionsOptions() object configured for execution with TVM
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTvmProvider*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithRocmProvider(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithRocmProvider(System.Int32)
      language: CSharp
      name:
        CSharp: MakeSessionOptionWithRocmProvider(Int32)
        VB: MakeSessionOptionWithRocmProvider(Int32)
      nameWithType:
        CSharp: SessionOptions.MakeSessionOptionWithRocmProvider(Int32)
        VB: SessionOptions.MakeSessionOptionWithRocmProvider(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithRocmProvider(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithRocmProvider(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: MakeSessionOptionWithRocmProvider
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 172
      summary: "\nA helper method to construct a SessionOptions object for ROCM execution.\nUse only if ROCM is installed and you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public static SessionOptions MakeSessionOptionWithRocmProvider(int deviceId = 0)
          VB: Public Shared Function MakeSessionOptionWithRocmProvider(deviceId As Integer = 0) As SessionOptions
        parameters:
        - id: deviceId
          type: System.Int32
          description: Device Id
        return:
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: A SessionsOptions() object configured for execution on deviceId
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithRocmProvider*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CPU(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CPU(System.Int32)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_CPU(Int32)
        VB: AppendExecutionProvider_CPU(Int32)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_CPU(Int32)
        VB: SessionOptions.AppendExecutionProvider_CPU(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CPU(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CPU(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_CPU
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 185
      summary: "\nAppends CPU EP to a list of available execution providers for the session.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_CPU(int useArena = 1)
          VB: Public Sub AppendExecutionProvider_CPU(useArena As Integer = 1)
        parameters:
        - id: useArena
          type: System.Int32
          description: 1 - use arena, 0 - do not use arena
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CPU*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Dnnl(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Dnnl(System.Int32)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_Dnnl(Int32)
        VB: AppendExecutionProvider_Dnnl(Int32)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_Dnnl(Int32)
        VB: SessionOptions.AppendExecutionProvider_Dnnl(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Dnnl(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Dnnl(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_Dnnl
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 194
      summary: "\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_Dnnl(int useArena = 1)
          VB: Public Sub AppendExecutionProvider_Dnnl(useArena As Integer = 1)
        parameters:
        - id: useArena
          type: System.Int32
          description: 1 - use allocation arena, 0 - otherwise
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Dnnl*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA(System.Int32)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_CUDA(Int32)
        VB: AppendExecutionProvider_CUDA(Int32)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_CUDA(Int32)
        VB: SessionOptions.AppendExecutionProvider_CUDA(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_CUDA
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 207
      summary: "\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_CUDA(int deviceId = 0)
          VB: Public Sub AppendExecutionProvider_CUDA(deviceId As Integer = 0)
        parameters:
        - id: deviceId
          type: System.Int32
          description: integer device ID
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA(Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA(Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_CUDA(OrtCUDAProviderOptions)
        VB: AppendExecutionProvider_CUDA(OrtCUDAProviderOptions)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_CUDA(OrtCUDAProviderOptions)
        VB: SessionOptions.AppendExecutionProvider_CUDA(OrtCUDAProviderOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA(Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA(Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_CUDA
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 221
      summary: "\nAppend a CUDA EP instance (based on specified configuration) to the SessionOptions instance.\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_CUDA(OrtCUDAProviderOptions cudaProviderOptions)
          VB: Public Sub AppendExecutionProvider_CUDA(cudaProviderOptions As OrtCUDAProviderOptions)
        parameters:
        - id: cudaProviderOptions
          type: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions
          description: CUDA EP provider options
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_DML(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_DML(System.Int32)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_DML(Int32)
        VB: AppendExecutionProvider_DML(Int32)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_DML(Int32)
        VB: SessionOptions.AppendExecutionProvider_DML(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_DML(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_DML(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_DML
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 234
      summary: "\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_DML(int deviceId = 0)
          VB: Public Sub AppendExecutionProvider_DML(deviceId As Integer = 0)
        parameters:
        - id: deviceId
          type: System.Int32
          description: device identification
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_DML*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_OpenVINO(System.String)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_OpenVINO(System.String)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_OpenVINO(String)
        VB: AppendExecutionProvider_OpenVINO(String)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_OpenVINO(String)
        VB: SessionOptions.AppendExecutionProvider_OpenVINO(String)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_OpenVINO(System.String)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_OpenVINO(System.String)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_OpenVINO
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 248
      summary: "\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_OpenVINO(string deviceId = "")
          VB: Public Sub AppendExecutionProvider_OpenVINO(deviceId As String = "")
        parameters:
        - id: deviceId
          type: System.String
          description: device identification, default empty string
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_OpenVINO*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt(System.Int32)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_Tensorrt(Int32)
        VB: AppendExecutionProvider_Tensorrt(Int32)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_Tensorrt(Int32)
        VB: SessionOptions.AppendExecutionProvider_Tensorrt(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_Tensorrt
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 265
      summary: "\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_Tensorrt(int deviceId = 0)
          VB: Public Sub AppendExecutionProvider_Tensorrt(deviceId As Integer = 0)
        parameters:
        - id: deviceId
          type: System.Int32
          description: device identification
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt(Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt(Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_Tensorrt(OrtTensorRTProviderOptions)
        VB: AppendExecutionProvider_Tensorrt(OrtTensorRTProviderOptions)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_Tensorrt(OrtTensorRTProviderOptions)
        VB: SessionOptions.AppendExecutionProvider_Tensorrt(OrtTensorRTProviderOptions)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt(Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt(Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_Tensorrt
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 279
      summary: "\nAppend a TensorRT EP instance (based on specified configuration) to the SessionOptions instance.\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_Tensorrt(OrtTensorRTProviderOptions trtProviderOptions)
          VB: Public Sub AppendExecutionProvider_Tensorrt(trtProviderOptions As OrtTensorRTProviderOptions)
        parameters:
        - id: trtProviderOptions
          type: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions
          description: TensorRT EP provider options
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_ROCM(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_ROCM(System.Int32)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_ROCM(Int32)
        VB: AppendExecutionProvider_ROCM(Int32)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_ROCM(Int32)
        VB: SessionOptions.AppendExecutionProvider_ROCM(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_ROCM(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_ROCM(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_ROCM
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 292
      summary: "\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_ROCM(int deviceId = 0)
          VB: Public Sub AppendExecutionProvider_ROCM(deviceId As Integer = 0)
        parameters:
        - id: deviceId
          type: System.Int32
          description: Device Id
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_ROCM*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_MIGraphX(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_MIGraphX(System.Int32)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_MIGraphX(Int32)
        VB: AppendExecutionProvider_MIGraphX(Int32)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_MIGraphX(Int32)
        VB: SessionOptions.AppendExecutionProvider_MIGraphX(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_MIGraphX(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_MIGraphX(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_MIGraphX
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 306
      summary: "\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_MIGraphX(int deviceId = 0)
          VB: Public Sub AppendExecutionProvider_MIGraphX(deviceId As Integer = 0)
        parameters:
        - id: deviceId
          type: System.Int32
          description: device identification
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_MIGraphX*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nnapi(Microsoft.ML.OnnxRuntime.NnapiFlags)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nnapi(Microsoft.ML.OnnxRuntime.NnapiFlags)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_Nnapi(NnapiFlags)
        VB: AppendExecutionProvider_Nnapi(NnapiFlags)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_Nnapi(NnapiFlags)
        VB: SessionOptions.AppendExecutionProvider_Nnapi(NnapiFlags)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nnapi(Microsoft.ML.OnnxRuntime.NnapiFlags)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nnapi(Microsoft.ML.OnnxRuntime.NnapiFlags)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_Nnapi
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 319
      summary: "\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_Nnapi(NnapiFlags nnapiFlags = default(NnapiFlags))
          VB: Public Sub AppendExecutionProvider_Nnapi(nnapiFlags As NnapiFlags = Nothing)
        parameters:
        - id: nnapiFlags
          type: Microsoft.ML.OnnxRuntime.NnapiFlags
          description: NNAPI specific flag mask
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nnapi*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CoreML(Microsoft.ML.OnnxRuntime.CoreMLFlags)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CoreML(Microsoft.ML.OnnxRuntime.CoreMLFlags)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_CoreML(CoreMLFlags)
        VB: AppendExecutionProvider_CoreML(CoreMLFlags)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_CoreML(CoreMLFlags)
        VB: SessionOptions.AppendExecutionProvider_CoreML(CoreMLFlags)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CoreML(Microsoft.ML.OnnxRuntime.CoreMLFlags)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CoreML(Microsoft.ML.OnnxRuntime.CoreMLFlags)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_CoreML
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 333
      summary: "\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_CoreML(CoreMLFlags coremlFlags = default(CoreMLFlags))
          VB: Public Sub AppendExecutionProvider_CoreML(coremlFlags As CoreMLFlags = Nothing)
        parameters:
        - id: coremlFlags
          type: Microsoft.ML.OnnxRuntime.CoreMLFlags
          description: CoreML specific flags
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CoreML*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nuphar(System.String)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nuphar(System.String)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_Nuphar(String)
        VB: AppendExecutionProvider_Nuphar(String)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_Nuphar(String)
        VB: SessionOptions.AppendExecutionProvider_Nuphar(String)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nuphar(System.String)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nuphar(System.String)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_Nuphar
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 358
      summary: "\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_Nuphar(string settings = "")
          VB: Public Sub AppendExecutionProvider_Nuphar(settings As String = "")
        parameters:
        - id: settings
          type: System.String
          description: string with Nuphar specific settings
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nuphar*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tvm(System.String)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tvm(System.String)
      language: CSharp
      name:
        CSharp: AppendExecutionProvider_Tvm(String)
        VB: AppendExecutionProvider_Tvm(String)
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider_Tvm(String)
        VB: SessionOptions.AppendExecutionProvider_Tvm(String)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tvm(System.String)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tvm(System.String)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider_Tvm
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 375
      summary: "\nUse only if you have the onnxruntime package specific to this Execution Provider.\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider_Tvm(string settings = "")
          VB: Public Sub AppendExecutionProvider_Tvm(settings As String = "")
        parameters:
        - id: settings
          type: System.String
          description: string with TVM specific settings
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tvm*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider(System.String,Dictionary{System.String,System.String})
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider(System.String,Dictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: AppendExecutionProvider(String, Dictionary<String, String>)
        VB: AppendExecutionProvider(String, Dictionary(Of String, String))
      nameWithType:
        CSharp: SessionOptions.AppendExecutionProvider(String, Dictionary<String, String>)
        VB: SessionOptions.AppendExecutionProvider(String, Dictionary(Of String, String))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider(System.String, Dictionary<System.String, System.String>)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider(System.String, Dictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AppendExecutionProvider
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 393
      summary: "\nAppend SNPE or XNNPACK execution provider\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendExecutionProvider(string providerName, Dictionary<string, string> providerOptions = null)
          VB: Public Sub AppendExecutionProvider(providerName As String, providerOptions As Dictionary(Of String, String) = Nothing)
        parameters:
        - id: providerName
          type: System.String
          description: Execution provider to add. &apos;SNPE&apos; or &apos;XNNPACK&apos; are currently supported.
        - id: providerOptions
          type: Dictionary{System.String,System.String}
          description: Optional key/value pairs to specify execution provider options.
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibrary(System.String)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibrary(System.String)
      language: CSharp
      name:
        CSharp: RegisterCustomOpLibrary(String)
        VB: RegisterCustomOpLibrary(String)
      nameWithType:
        CSharp: SessionOptions.RegisterCustomOpLibrary(String)
        VB: SessionOptions.RegisterCustomOpLibrary(String)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibrary(System.String)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibrary(System.String)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RegisterCustomOpLibrary
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 432
      summary: "\n(Deprecated) Loads a DLL named &apos;libraryPath&apos; and looks for this entry point:\nOrtStatus* RegisterCustomOps(OrtSessionOptions* options, const OrtApiBase* api);\nIt then passes in the provided session options to this function along with the api base.\nDeprecated in favor of RegisterCustomOpLibraryV2() because it provides users with the library handle \nto release when all sessions relying on it are destroyed\n"
      example: []
      syntax:
        content:
          CSharp: public void RegisterCustomOpLibrary(string libraryPath)
          VB: Public Sub RegisterCustomOpLibrary(libraryPath As String)
        parameters:
        - id: libraryPath
          type: System.String
          description: path to the custom op library
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibrary*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibraryV2(System.String,IntPtr@)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibraryV2(System.String,IntPtr@)
      language: CSharp
      name:
        CSharp: RegisterCustomOpLibraryV2(String, out IntPtr)
        VB: RegisterCustomOpLibraryV2(String, ByRef IntPtr)
      nameWithType:
        CSharp: SessionOptions.RegisterCustomOpLibraryV2(String, out IntPtr)
        VB: SessionOptions.RegisterCustomOpLibraryV2(String, ByRef IntPtr)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibraryV2(System.String, out IntPtr)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibraryV2(System.String, ByRef IntPtr)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: RegisterCustomOpLibraryV2
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 454
      summary: "\nLoads a DLL named &apos;libraryPath&apos; and looks for this entry point:\nOrtStatus* RegisterCustomOps(OrtSessionOptions* options, const OrtApiBase* api);\nIt then passes in the provided session options to this function along with the api base.\nThe handle to the loaded library is returned in &apos;libraryHandle&apos;.\nIt can be unloaded by the caller after all sessions using the passed in\nsession options are destroyed, or if an error occurs and it is non null.\nHint: .NET Core 3.1 has a &apos;NativeLibrary&apos; class that can be used to free the library handle\n"
      example: []
      syntax:
        content:
          CSharp: public void RegisterCustomOpLibraryV2(string libraryPath, out IntPtr libraryHandle)
          VB: Public Sub RegisterCustomOpLibraryV2(libraryPath As String, ByRef libraryHandle As IntPtr)
        parameters:
        - id: libraryPath
          type: System.String
          description: Custom op library path
        - id: libraryHandle
          type: IntPtr
          description: out parameter, library handle
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibraryV2*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddInitializer(System.String,Microsoft.ML.OnnxRuntime.OrtValue)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AddInitializer(System.String,Microsoft.ML.OnnxRuntime.OrtValue)
      language: CSharp
      name:
        CSharp: AddInitializer(String, OrtValue)
        VB: AddInitializer(String, OrtValue)
      nameWithType:
        CSharp: SessionOptions.AddInitializer(String, OrtValue)
        VB: SessionOptions.AddInitializer(String, OrtValue)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AddInitializer(System.String, Microsoft.ML.OnnxRuntime.OrtValue)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AddInitializer(System.String, Microsoft.ML.OnnxRuntime.OrtValue)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AddInitializer
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 472
      summary: "\nAdd a pre-allocated initializer to a session. If a model contains an initializer with a name\nthat is same as the name passed to this API call, ORT will use this initializer instance\ninstead of deserializing one from the model file. This is useful when you want to share\nthe same initializer across sessions.\n"
      example: []
      syntax:
        content:
          CSharp: public void AddInitializer(string name, OrtValue ortValue)
          VB: Public Sub AddInitializer(name As String, ortValue As OrtValue)
        parameters:
        - id: name
          type: System.String
          description: name of the initializer
        - id: ortValue
          type: Microsoft.ML.OnnxRuntime.OrtValue
          description: >-
            OrtValue containing the initializer. Lifetime of &apos;val&apos; and the underlying initializer buffer must be

            managed by the user (created using the CreateTensorWithDataAsOrtValue API) and it must outlive the session object
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AddInitializer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddSessionConfigEntry(System.String,System.String)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AddSessionConfigEntry(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddSessionConfigEntry(String, String)
        VB: AddSessionConfigEntry(String, String)
      nameWithType:
        CSharp: SessionOptions.AddSessionConfigEntry(String, String)
        VB: SessionOptions.AddSessionConfigEntry(String, String)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AddSessionConfigEntry(System.String, System.String)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AddSessionConfigEntry(System.String, System.String)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AddSessionConfigEntry
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 487
      summary: "\nSet a single session configuration entry as a pair of strings\nIf a configuration with same key exists, this will overwrite the configuration with the given configValue\n"
      example: []
      syntax:
        content:
          CSharp: public void AddSessionConfigEntry(string configKey, string configValue)
          VB: Public Sub AddSessionConfigEntry(configKey As String, configValue As String)
        parameters:
        - id: configKey
          type: System.String
          description: config key name
        - id: configValue
          type: System.String
          description: config key value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AddSessionConfigEntry*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverride(System.String,System.Int64)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverride(System.String,System.Int64)
      language: CSharp
      name:
        CSharp: AddFreeDimensionOverride(String, Int64)
        VB: AddFreeDimensionOverride(String, Int64)
      nameWithType:
        CSharp: SessionOptions.AddFreeDimensionOverride(String, Int64)
        VB: SessionOptions.AddFreeDimensionOverride(String, Int64)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverride(System.String, System.Int64)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverride(System.String, System.Int64)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AddFreeDimensionOverride
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 503
      summary: "\nOverride symbolic dimensions (by specific denotation strings) with actual values if known at session initialization time to enable\noptimizations that can take advantage of fixed values (such as memory planning, etc)\n"
      example: []
      syntax:
        content:
          CSharp: public void AddFreeDimensionOverride(string dimDenotation, long dimValue)
          VB: Public Sub AddFreeDimensionOverride(dimDenotation As String, dimValue As Long)
        parameters:
        - id: dimDenotation
          type: System.String
          description: denotation name
        - id: dimValue
          type: System.Int64
          description: denotation value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverride*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverrideByName(System.String,System.Int64)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverrideByName(System.String,System.Int64)
      language: CSharp
      name:
        CSharp: AddFreeDimensionOverrideByName(String, Int64)
        VB: AddFreeDimensionOverrideByName(String, Int64)
      nameWithType:
        CSharp: SessionOptions.AddFreeDimensionOverrideByName(String, Int64)
        VB: SessionOptions.AddFreeDimensionOverrideByName(String, Int64)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverrideByName(System.String, System.Int64)
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverrideByName(System.String, System.Int64)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: AddFreeDimensionOverrideByName
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 518
      summary: "\nOverride symbolic dimensions (by specific name strings) with actual values if known at session initialization time to enable\noptimizations that can take advantage of fixed values (such as memory planning, etc)\n"
      example: []
      syntax:
        content:
          CSharp: public void AddFreeDimensionOverrideByName(string dimName, long dimValue)
          VB: Public Sub AddFreeDimensionOverrideByName(dimName As String, dimValue As Long)
        parameters:
        - id: dimName
          type: System.String
          description: dimension name
        - id: dimValue
          type: System.Int64
          description: dimension value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverrideByName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.IsInvalid
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.IsInvalid
      language: CSharp
      name:
        CSharp: IsInvalid
        VB: IsInvalid
      nameWithType:
        CSharp: SessionOptions.IsInvalid
        VB: SessionOptions.IsInvalid
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.IsInvalid
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.IsInvalid
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsInvalid
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 541
      summary: "\nOverrides SafeHandle.IsInvalid\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsInvalid { get; }
          VB: Public Overrides ReadOnly Property IsInvalid As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns true if handle is equal to Zero
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.IsInvalid*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.EnableMemoryPattern
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.EnableMemoryPattern
      language: CSharp
      name:
        CSharp: EnableMemoryPattern
        VB: EnableMemoryPattern
      nameWithType:
        CSharp: SessionOptions.EnableMemoryPattern
        VB: SessionOptions.EnableMemoryPattern
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.EnableMemoryPattern
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.EnableMemoryPattern
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: EnableMemoryPattern
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 547
      summary: "\nEnables the use of the memory allocation patterns in the first Run() call for subsequent runs. Default = true.\n"
      example: []
      syntax:
        content:
          CSharp: public bool EnableMemoryPattern { get; set; }
          VB: Public Property EnableMemoryPattern As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns enableMemoryPattern flag value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.EnableMemoryPattern*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.ProfileOutputPathPrefix
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.ProfileOutputPathPrefix
      language: CSharp
      name:
        CSharp: ProfileOutputPathPrefix
        VB: ProfileOutputPathPrefix
      nameWithType:
        CSharp: SessionOptions.ProfileOutputPathPrefix
        VB: SessionOptions.ProfileOutputPathPrefix
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.ProfileOutputPathPrefix
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.ProfileOutputPathPrefix
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ProfileOutputPathPrefix
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 572
      summary: "\nPath prefix to use for output of profiling data\n"
      example: []
      syntax:
        content:
          CSharp: public string ProfileOutputPathPrefix { get; set; }
          VB: Public Property ProfileOutputPathPrefix As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.ProfileOutputPathPrefix*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.EnableProfiling
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.EnableProfiling
      language: CSharp
      name:
        CSharp: EnableProfiling
        VB: EnableProfiling
      nameWithType:
        CSharp: SessionOptions.EnableProfiling
        VB: SessionOptions.EnableProfiling
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.EnableProfiling
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.EnableProfiling
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: EnableProfiling
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 581
      summary: "\nEnables profiling of InferenceSession.Run() calls. Default is false\n"
      example: []
      syntax:
        content:
          CSharp: public bool EnableProfiling { get; set; }
          VB: Public Property EnableProfiling As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns _enableProfiling flag value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.EnableProfiling*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.OptimizedModelFilePath
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.OptimizedModelFilePath
      language: CSharp
      name:
        CSharp: OptimizedModelFilePath
        VB: OptimizedModelFilePath
      nameWithType:
        CSharp: SessionOptions.OptimizedModelFilePath
        VB: SessionOptions.OptimizedModelFilePath
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.OptimizedModelFilePath
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.OptimizedModelFilePath
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: OptimizedModelFilePath
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 607
      summary: "\nSet filepath to save optimized model after graph level transformations. Default is empty, which implies saving is disabled.\n"
      example: []
      syntax:
        content:
          CSharp: public string OptimizedModelFilePath { get; set; }
          VB: Public Property OptimizedModelFilePath As String
        parameters: []
        return:
          type: System.String
          description: returns _optimizedModelFilePath flag value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.OptimizedModelFilePath*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.EnableCpuMemArena
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.EnableCpuMemArena
      language: CSharp
      name:
        CSharp: EnableCpuMemArena
        VB: EnableCpuMemArena
      nameWithType:
        CSharp: SessionOptions.EnableCpuMemArena
        VB: SessionOptions.EnableCpuMemArena
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.EnableCpuMemArena
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.EnableCpuMemArena
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: EnableCpuMemArena
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 628
      summary: "\nEnables Arena allocator for the CPU memory allocations. Default is true.\n"
      example: []
      syntax:
        content:
          CSharp: public bool EnableCpuMemArena { get; set; }
          VB: Public Property EnableCpuMemArena As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: returns _enableCpuMemArena flag value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.EnableCpuMemArena*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.LogId
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.LogId
      language: CSharp
      name:
        CSharp: LogId
        VB: LogId
      nameWithType:
        CSharp: SessionOptions.LogId
        VB: SessionOptions.LogId
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.LogId
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.LogId
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: LogId
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 654
      summary: "\nLog Id to be used for the session. Default is empty string.\n"
      example: []
      syntax:
        content:
          CSharp: public string LogId { get; set; }
          VB: Public Property LogId As String
        parameters: []
        return:
          type: System.String
          description: returns _logId value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.LogId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.LogSeverityLevel
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.LogSeverityLevel
      language: CSharp
      name:
        CSharp: LogSeverityLevel
        VB: LogSeverityLevel
      nameWithType:
        CSharp: SessionOptions.LogSeverityLevel
        VB: SessionOptions.LogSeverityLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.LogSeverityLevel
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.LogSeverityLevel
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: LogSeverityLevel
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 678
      summary: "\nLog Severity Level for the session logs. Default = ORT_LOGGING_LEVEL_WARNING\n"
      example: []
      syntax:
        content:
          CSharp: public OrtLoggingLevel LogSeverityLevel { get; set; }
          VB: Public Property LogSeverityLevel As OrtLoggingLevel
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
          description: returns _logSeverityLevel value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.LogSeverityLevel*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.LogVerbosityLevel
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.LogVerbosityLevel
      language: CSharp
      name:
        CSharp: LogVerbosityLevel
        VB: LogVerbosityLevel
      nameWithType:
        CSharp: SessionOptions.LogVerbosityLevel
        VB: SessionOptions.LogVerbosityLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.LogVerbosityLevel
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.LogVerbosityLevel
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: LogVerbosityLevel
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 697
      summary: "\nLog Verbosity Level for the session logs. Default = 0. Valid values are >=0.\nThis takes into effect only when the LogSeverityLevel is set to ORT_LOGGING_LEVEL_VERBOSE.\n"
      example: []
      syntax:
        content:
          CSharp: public int LogVerbosityLevel { get; set; }
          VB: Public Property LogVerbosityLevel As Integer
        parameters: []
        return:
          type: System.Int32
          description: returns _logVerbosityLevel value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.LogVerbosityLevel*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.IntraOpNumThreads
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.IntraOpNumThreads
      language: CSharp
      name:
        CSharp: IntraOpNumThreads
        VB: IntraOpNumThreads
      nameWithType:
        CSharp: SessionOptions.IntraOpNumThreads
        VB: SessionOptions.IntraOpNumThreads
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.IntraOpNumThreads
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.IntraOpNumThreads
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IntraOpNumThreads
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 716
      syntax:
        content:
          CSharp: public int IntraOpNumThreads { get; set; }
          VB: Public Property IntraOpNumThreads As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.IntraOpNumThreads*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.InterOpNumThreads
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.InterOpNumThreads
      language: CSharp
      name:
        CSharp: InterOpNumThreads
        VB: InterOpNumThreads
      nameWithType:
        CSharp: SessionOptions.InterOpNumThreads
        VB: SessionOptions.InterOpNumThreads
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.InterOpNumThreads
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.InterOpNumThreads
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: InterOpNumThreads
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 736
      syntax:
        content:
          CSharp: public int InterOpNumThreads { get; set; }
          VB: Public Property InterOpNumThreads As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.InterOpNumThreads*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.GraphOptimizationLevel
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.GraphOptimizationLevel
      language: CSharp
      name:
        CSharp: GraphOptimizationLevel
        VB: GraphOptimizationLevel
      nameWithType:
        CSharp: SessionOptions.GraphOptimizationLevel
        VB: SessionOptions.GraphOptimizationLevel
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.GraphOptimizationLevel
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.GraphOptimizationLevel
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GraphOptimizationLevel
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 754
      summary: "\nSets the graph optimization level for the session. Default is set to ORT_ENABLE_ALL.\n"
      example: []
      syntax:
        content:
          CSharp: public GraphOptimizationLevel GraphOptimizationLevel { get; set; }
          VB: Public Property GraphOptimizationLevel As GraphOptimizationLevel
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
          description: returns _graphOptimizationLevel value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.GraphOptimizationLevel*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.ExecutionMode
      commentId: P:Microsoft.ML.OnnxRuntime.SessionOptions.ExecutionMode
      language: CSharp
      name:
        CSharp: ExecutionMode
        VB: ExecutionMode
      nameWithType:
        CSharp: SessionOptions.ExecutionMode
        VB: SessionOptions.ExecutionMode
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.ExecutionMode
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.ExecutionMode
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ExecutionMode
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 773
      summary: "\nSets the execution mode for the session. Default is set to ORT_SEQUENTIAL.\nSee [ONNX_Runtime_Perf_Tuning.md] for more details.\n"
      example: []
      syntax:
        content:
          CSharp: public ExecutionMode ExecutionMode { get; set; }
          VB: Public Property ExecutionMode As ExecutionMode
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.ExecutionMode
          description: returns _executionMode value
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.ExecutionMode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.SessionOptions.ReleaseHandle
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptions.ReleaseHandle
      language: CSharp
      name:
        CSharp: ReleaseHandle()
        VB: ReleaseHandle()
      nameWithType:
        CSharp: SessionOptions.ReleaseHandle()
        VB: SessionOptions.ReleaseHandle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptions.ReleaseHandle()
        VB: Microsoft.ML.OnnxRuntime.SessionOptions.ReleaseHandle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ReleaseHandle
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptions.shared.cs
        startLine: 858
      summary: "\nOverrides SafeHandle.ReleaseHandle() to properly dispose of\nthe native instance of SessionOptions\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ReleaseHandle()
          VB: Protected Overrides Function ReleaseHandle As Boolean
        return:
          type: System.Boolean
          description: always returns true
      overload: Microsoft.ML.OnnxRuntime.SessionOptions.ReleaseHandle*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer
    commentId: T:Microsoft.ML.OnnxRuntime.SessionOptionsContainer
    language: CSharp
    name:
      CSharp: SessionOptionsContainer
      VB: SessionOptionsContainer
    nameWithType:
      CSharp: SessionOptionsContainer
      VB: SessionOptionsContainer
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.SessionOptionsContainer
      VB: Microsoft.ML.OnnxRuntime.SessionOptionsContainer
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: SessionOptionsContainer
      path: ../src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
      startLine: 11
    summary: "\nHelper to allow the creation/addition of session options based on pre-defined named entries.\n"
    example: []
    syntax:
      content:
        CSharp: 'public static class SessionOptionsContainer : object'
        VB: >-
          Public Module SessionOptionsContainer

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register(Action{Microsoft.ML.OnnxRuntime.SessionOptions})
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register(Action{Microsoft.ML.OnnxRuntime.SessionOptions})
      language: CSharp
      name:
        CSharp: Register(Action<SessionOptions>)
        VB: Register(Action(Of SessionOptions))
      nameWithType:
        CSharp: SessionOptionsContainer.Register(Action<SessionOptions>)
        VB: SessionOptionsContainer.Register(Action(Of SessionOptions))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register(Action<Microsoft.ML.OnnxRuntime.SessionOptions>)
        VB: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register(Action(Of Microsoft.ML.OnnxRuntime.SessionOptions))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Register
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
        startLine: 28
      summary: "\nRegister the default handler. This is used when a configuration name is not provided.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Register(Action<SessionOptions> defaultHandler)
          VB: Public Shared Sub Register(defaultHandler As Action(Of SessionOptions))
        parameters:
        - id: defaultHandler
          type: Action{Microsoft.ML.OnnxRuntime.SessionOptions}
          description: >
            Handler that applies the default settings to a SessionOptions instance.
      overload: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register(System.String,Action{Microsoft.ML.OnnxRuntime.SessionOptions})
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register(System.String,Action{Microsoft.ML.OnnxRuntime.SessionOptions})
      language: CSharp
      name:
        CSharp: Register(String, Action<SessionOptions>)
        VB: Register(String, Action(Of SessionOptions))
      nameWithType:
        CSharp: SessionOptionsContainer.Register(String, Action<SessionOptions>)
        VB: SessionOptionsContainer.Register(String, Action(Of SessionOptions))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register(System.String, Action<Microsoft.ML.OnnxRuntime.SessionOptions>)
        VB: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register(System.String, Action(Of Microsoft.ML.OnnxRuntime.SessionOptions))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Register
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
        startLine: 38
      summary: "\nRegister a named handler.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Register(string configuration, Action<SessionOptions> handler)
          VB: Public Shared Sub Register(configuration As String, handler As Action(Of SessionOptions))
        parameters:
        - id: configuration
          type: System.String
          description: Configuration name.
        - id: handler
          type: Action{Microsoft.ML.OnnxRuntime.SessionOptions}
          description: "\nHandler that applies the settings for the configuration to a SessionOptions instance.\n"
      overload: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Create(System.String,System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Create(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: Create(String, Boolean)
        VB: Create(String, Boolean)
      nameWithType:
        CSharp: SessionOptionsContainer.Create(String, Boolean)
        VB: SessionOptionsContainer.Create(String, Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Create(System.String, System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Create(System.String, System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Create
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
        startLine: 52
      summary: "\nCreate a SessionOptions instance with configuration applied.\n"
      example: []
      syntax:
        content:
          CSharp: public static SessionOptions Create(string configuration = null, bool useDefaultAsFallback = true)
          VB: Public Shared Function Create(configuration As String = Nothing, useDefaultAsFallback As Boolean = True) As SessionOptions
        parameters:
        - id: configuration
          type: System.String
          description: "\nConfiguration to use. \nIf not provided, the default set of session options will be applied if useDefaultAsFallback is true.\n"
        - id: useDefaultAsFallback
          type: System.Boolean
          description: "\nIf configuration is not provided or not found, use the default session options.\n"
        return:
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: SessionOptions with configuration applied.
      overload: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Create*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Reset
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: SessionOptionsContainer.Reset()
        VB: SessionOptionsContainer.Reset()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Reset()
        VB: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Reset()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Reset
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
        startLine: 58
      summary: "\nReset by removing all registered handlers.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Reset()
          VB: Public Shared Sub Reset
      overload: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Reset*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(Microsoft.ML.OnnxRuntime.SessionOptions,System.String,System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(Microsoft.ML.OnnxRuntime.SessionOptions,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: ApplyConfiguration(SessionOptions, String, Boolean)
        VB: ApplyConfiguration(SessionOptions, String, Boolean)
      nameWithType:
        CSharp: SessionOptionsContainer.ApplyConfiguration(SessionOptions, String, Boolean)
        VB: SessionOptionsContainer.ApplyConfiguration(SessionOptions, String, Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(Microsoft.ML.OnnxRuntime.SessionOptions, System.String, System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(Microsoft.ML.OnnxRuntime.SessionOptions, System.String, System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ApplyConfiguration
        path: ../src/Microsoft.ML.OnnxRuntime/SessionOptionsContainer.shared.cs
        startLine: 73
      summary: "\nApply a configuration to a SessionOptions instance.\n"
      example: []
      syntax:
        content:
          CSharp: public static SessionOptions ApplyConfiguration(this SessionOptions options, string configuration = null, bool useDefaultAsFallback = true)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ApplyConfiguration(options As SessionOptions, configuration As String = Nothing, useDefaultAsFallback As Boolean = True) As SessionOptions
        parameters:
        - id: options
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: SessionOptions to apply configuration to.
        - id: configuration
          type: System.String
          description: Configuration to use.
        - id: useDefaultAsFallback
          type: System.Boolean
          description: "\nUse the default configuration if &apos;configuration&apos; is not provided or not found.\n"
        return:
          type: Microsoft.ML.OnnxRuntime.SessionOptions
          description: Updated SessionOptions instance.
      overload: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Microsoft.ML.OnnxRuntime.Tensors
  commentId: N:Microsoft.ML.OnnxRuntime.Tensors
  language: CSharp
  name:
    CSharp: Microsoft.ML.OnnxRuntime.Tensors
    VB: Microsoft.ML.OnnxRuntime.Tensors
  nameWithType:
    CSharp: Microsoft.ML.OnnxRuntime.Tensors
    VB: Microsoft.ML.OnnxRuntime.Tensors
  qualifiedName:
    CSharp: Microsoft.ML.OnnxRuntime.Tensors
    VB: Microsoft.ML.OnnxRuntime.Tensors
  type: Namespace
  assemblies:
  - Microsoft.ML.OnnxRuntime
  modifiers: {}
  items:
  - id: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions
    language: CSharp
    name:
      CSharp: ArrayTensorExtensions
      VB: ArrayTensorExtensions
    nameWithType:
      CSharp: ArrayTensorExtensions
      VB: ArrayTensorExtensions
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions
      VB: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime.Tensors
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: ArrayTensorExtensions
      path: ../src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
      startLine: 19
    syntax:
      content:
        CSharp: 'public static class ArrayTensorExtensions : object'
        VB: >-
          Public Module ArrayTensorExtensions

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor``1(``0[])
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor``1(``0[])
      language: CSharp
      name:
        CSharp: ToTensor<T>(T[])
        VB: ToTensor(Of T)(T())
      nameWithType:
        CSharp: ArrayTensorExtensions.ToTensor<T>(T[])
        VB: ArrayTensorExtensions.ToTensor(Of T)(T())
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor<T>(T[])
        VB: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor(Of T)(T())
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ToTensor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
        startLine: 27
      summary: "\nCreates a copy of this single-dimensional array as a DenseTensor&lt;T>\n"
      example: []
      syntax:
        content:
          CSharp: public static DenseTensor<T> ToTensor<T>(this T[] array)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToTensor(Of T)(array As T()) As DenseTensor(Of T)
        parameters:
        - id: array
          type: '{T}[]'
          description: The array to create a DenseTensor&lt;T> from.
        typeParameters:
        - id: T
          description: Type contained in the array to copy to the DenseTensor&lt;T>.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor{{T}}
          description: A 1-dimensional DenseTensor&lt;T> with the same length and content as <code data-dev-comment-type="paramref" class="paramref">array</code>.
      overload: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor``1(``0[0:,0:],System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor``1(``0[0:,0:],System.Boolean)
      language: CSharp
      name:
        CSharp: ToTensor<T>(T[,], Boolean)
        VB: ToTensor(Of T)(T(,), Boolean)
      nameWithType:
        CSharp: ArrayTensorExtensions.ToTensor<T>(T[,], Boolean)
        VB: ArrayTensorExtensions.ToTensor(Of T)(T(,), Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor<T>(T[,], System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor(Of T)(T(,), System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ToTensor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
        startLine: 44
      summary: "\nCreates a copy of this two-dimensional array as a DenseTensor&lt;T>\n"
      example: []
      syntax:
        content:
          CSharp: public static DenseTensor<T> ToTensor<T>(this T[, ] array, bool reverseStride = false)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToTensor(Of T)(array As T(,), reverseStride As Boolean = False) As DenseTensor(Of T)
        parameters:
        - id: array
          type: '{T}[,]'
          description: The array to create a DenseTensor&lt;T> from.
        - id: reverseStride
          type: System.Boolean
          description: 'False (default) to indicate that the first dimension is most major (farthest apart) and the last dimension is most minor (closest together): row-major.  True to indicate that the last dimension is most major (farthest apart) and the first dimension is most minor (closest together): column-major.'
        typeParameters:
        - id: T
          description: Type contained in the array to copy to the DenseTensor&lt;T>.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor{{T}}
          description: A 2-dimensional DenseTensor&lt;T> with the same dimensions and content as <code data-dev-comment-type="paramref" class="paramref">array</code>.
      overload: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor``1(``0[0:,0:,0:],System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor``1(``0[0:,0:,0:],System.Boolean)
      language: CSharp
      name:
        CSharp: ToTensor<T>(T[,,], Boolean)
        VB: ToTensor(Of T)(T(,,), Boolean)
      nameWithType:
        CSharp: ArrayTensorExtensions.ToTensor<T>(T[,,], Boolean)
        VB: ArrayTensorExtensions.ToTensor(Of T)(T(,,), Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor<T>(T[,,], System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor(Of T)(T(,,), System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ToTensor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
        startLine: 74
      summary: "\nCreates a copy of this three-dimensional array as a DenseTensor&lt;T>\n"
      example: []
      syntax:
        content:
          CSharp: public static DenseTensor<T> ToTensor<T>(this T[,, ] array, bool reverseStride = false)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToTensor(Of T)(array As T(,,), reverseStride As Boolean = False) As DenseTensor(Of T)
        parameters:
        - id: array
          type: '{T}[,,]'
          description: The array to create a DenseTensor&lt;T> from.
        - id: reverseStride
          type: System.Boolean
          description: 'False (default) to indicate that the first dimension is most major (farthest apart) and the last dimension is most minor (closest together): akin to row-major in a rank-2 tensor.  True to indicate that the last dimension is most major (farthest apart) and the first dimension is most minor (closest together): akin to column-major in a rank-2 tensor.'
        typeParameters:
        - id: T
          description: Type contained in the array to copy to the DenseTensor&lt;T>.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor{{T}}
          description: A 3-dimensional DenseTensor&lt;T> with the same dimensions and content as <code data-dev-comment-type="paramref" class="paramref">array</code>.
      overload: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor``1(``0[0:,0:,0:,0:],System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor``1(``0[0:,0:,0:,0:],System.Boolean)
      language: CSharp
      name:
        CSharp: ToTensor<T>(T[,,,], Boolean)
        VB: ToTensor(Of T)(T(,,,), Boolean)
      nameWithType:
        CSharp: ArrayTensorExtensions.ToTensor<T>(T[,,,], Boolean)
        VB: ArrayTensorExtensions.ToTensor(Of T)(T(,,,), Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor<T>(T[,,,], System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor(Of T)(T(,,,), System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ToTensor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
        startLine: 104
      summary: "\nCreates a copy of this four-dimensional array as a DenseTensor&lt;T>\n"
      example: []
      syntax:
        content:
          CSharp: public static DenseTensor<T> ToTensor<T>(this T[,,, ] array, bool reverseStride = false)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToTensor(Of T)(array As T(,,,), reverseStride As Boolean = False) As DenseTensor(Of T)
        parameters:
        - id: array
          type: '{T}[,,,]'
          description: The array to create a DenseTensor&lt;T> from.
        - id: reverseStride
          type: System.Boolean
          description: 'False (default) to indicate that the first dimension is most major (farthest apart) and the last dimension is most minor (closest together): akin to row-major in a rank-2 tensor.  True to indicate that the last dimension is most major (farthest apart) and the first dimension is most minor (closest together): akin to column-major in a rank-2 tensor.'
        typeParameters:
        - id: T
          description: Type contained in the array to copy to the DenseTensor&lt;T>.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor{{T}}
          description: A 4-dimensional DenseTensor&lt;T> with the same dimensions and content as <code data-dev-comment-type="paramref" class="paramref">array</code>.
      overload: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor``1(Array,System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor``1(Array,System.Boolean)
      language: CSharp
      name:
        CSharp: ToTensor<T>(Array, Boolean)
        VB: ToTensor(Of T)(Array, Boolean)
      nameWithType:
        CSharp: ArrayTensorExtensions.ToTensor<T>(Array, Boolean)
        VB: ArrayTensorExtensions.ToTensor(Of T)(Array, Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor<T>(Array, System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor(Of T)(Array, System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ToTensor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/ArrayTensorExtensions.shared.cs
        startLine: 135
      summary: "\nCreates a copy of this n-dimensional array as a DenseTensor&lt;T>\n"
      example: []
      syntax:
        content:
          CSharp: public static DenseTensor<T> ToTensor<T>(this Array array, bool reverseStride = false)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToTensor(Of T)(array As Array, reverseStride As Boolean = False) As DenseTensor(Of T)
        parameters:
        - id: array
          type: Array
          description: The array to create a DenseTensor&lt;T> from.
        - id: reverseStride
          type: System.Boolean
          description: 'False (default) to indicate that the first dimension is most major (farthest apart) and the last dimension is most minor (closest together): akin to row-major in a rank-2 tensor.  True to indicate that the last dimension is most major (farthest apart) and the first dimension is most minor (closest together): akin to column-major in a rank-2 tensor.'
        typeParameters:
        - id: T
          description: Type contained in the array to copy to the DenseTensor&lt;T>.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor{{T}}
          description: A n-dimensional DenseTensor&lt;T> with the same dimensions and content as <code data-dev-comment-type="paramref" class="paramref">array</code>.
      overload: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1
    language: CSharp
    name:
      CSharp: DenseTensor<T>
      VB: DenseTensor(Of T)
    nameWithType:
      CSharp: DenseTensor<T>
      VB: DenseTensor(Of T)
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>
      VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T)
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime.Tensors
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: DenseTensor
      path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
      startLine: 25
    summary: "\nRepresents a multi-dimensional collection of objects of type T that can be accessed by indices.  \nDenseTensor stores values in a contiguous sequential block of memory where all values are represented.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DenseTensor<T> : Tensor<T>'
        VB: >-
          Public Class DenseTensor(Of T)

              Inherits Tensor(Of T)
      typeParameters:
      - id: T
        description: "\nType contained within the Tensor. Typically a value type such as int, double, float, etc.\n"
    inheritance:
    - System.Object
    - Microsoft.ML.OnnxRuntime.Tensors.TensorBase
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    implements:
    - IList
    - IList{{T}}
    - IReadOnlyList{{T}}
    - IStructuralComparable
    - IStructuralEquatable
    inheritedMembers:
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Length
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Rank
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.IsReversedStride
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Dimensions
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Strides
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Fill({T})
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.CloneEmpty
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.CloneEmpty(ReadOnlySpan{System.Int32})
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.CloneEmpty``1
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetDiagonal
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetDiagonal(System.Int32)
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetTriangle
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetTriangle(System.Int32)
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetUpperTriangle
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetUpperTriangle(System.Int32)
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetTriangle(System.Int32,System.Boolean)
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Item(System.Int32[])
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Item(ReadOnlySpan{System.Int32})
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}},Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}})
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}},Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}})
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.IsFixedSize
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.IsReadOnly
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Contains({T})
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.ToDenseTensor
    - Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetArrayString(System.Boolean)
    - Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo(Type)
    - Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType)
    - Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: DenseTensor(Int32)
        VB: DenseTensor(Int32)
      nameWithType:
        CSharp: DenseTensor<T>.DenseTensor(Int32)
        VB: DenseTensor(Of T).DenseTensor(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.DenseTensor(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).DenseTensor(System.Int32)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        startLine: 61
      summary: "\nInitializes a rank-1 Tensor using the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">length</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public DenseTensor(int length)
          VB: Public Sub New(length As Integer)
        parameters:
        - id: length
          type: System.Int32
          description: Size of the 1-dimensional tensor
      overload: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor(ReadOnlySpan{System.Int32},System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor(ReadOnlySpan{System.Int32},System.Boolean)
      language: CSharp
      name:
        CSharp: DenseTensor(ReadOnlySpan<Int32>, Boolean)
        VB: DenseTensor(ReadOnlySpan(Of Int32), Boolean)
      nameWithType:
        CSharp: DenseTensor<T>.DenseTensor(ReadOnlySpan<Int32>, Boolean)
        VB: DenseTensor(Of T).DenseTensor(ReadOnlySpan(Of Int32), Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.DenseTensor(ReadOnlySpan<System.Int32>, System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).DenseTensor(ReadOnlySpan(Of System.Int32), System.Boolean)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        startLine: 78
      summary: "\nInitializes a rank-n Tensor using the dimensions specified in <code data-dev-comment-type=\"paramref\" class=\"paramref\">dimensions</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public DenseTensor(ReadOnlySpan<int> dimensions, bool reverseStride = false)
          VB: Public Sub New(dimensions As ReadOnlySpan(Of Integer), reverseStride As Boolean = False)
        parameters:
        - id: dimensions
          type: ReadOnlySpan{System.Int32}
          description: "\nAn span of integers that represent the size of each dimension of the DenseTensor to create.\n"
        - id: reverseStride
          type: System.Boolean
          description: "\nFalse (default) to indicate that the first dimension is most major (farthest apart) and the last dimension \nis most minor (closest together): akin to row-major in a rank-2 tensor.  \nTrue to indicate that the last dimension is most major (farthest apart) and the first dimension is most \nminor (closest together): akin to column-major in a rank-2 tensor.\n"
      overload: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor(Memory{`0},ReadOnlySpan{System.Int32},System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor(Memory{`0},ReadOnlySpan{System.Int32},System.Boolean)
      language: CSharp
      name:
        CSharp: DenseTensor(Memory<T>, ReadOnlySpan<Int32>, Boolean)
        VB: DenseTensor(Memory(Of T), ReadOnlySpan(Of Int32), Boolean)
      nameWithType:
        CSharp: DenseTensor<T>.DenseTensor(Memory<T>, ReadOnlySpan<Int32>, Boolean)
        VB: DenseTensor(Of T).DenseTensor(Memory(Of T), ReadOnlySpan(Of Int32), Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.DenseTensor(Memory<T>, ReadOnlySpan<System.Int32>, System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).DenseTensor(Memory(Of T), ReadOnlySpan(Of System.Int32), System.Boolean)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        startLine: 95
      summary: "\nConstructs a new DenseTensor of the specified dimensions, wrapping existing backing memory for the contents.\n"
      example: []
      syntax:
        content:
          CSharp: public DenseTensor(Memory<T> memory, ReadOnlySpan<int> dimensions, bool reverseStride = false)
          VB: Public Sub New(memory As Memory(Of T), dimensions As ReadOnlySpan(Of Integer), reverseStride As Boolean = False)
        parameters:
        - id: memory
          type: Memory{{T}}
          description: ''
        - id: dimensions
          type: ReadOnlySpan{System.Int32}
          description: "\nAn span of integers that represent the size of each dimension of the DenseTensor to create."
        - id: reverseStride
          type: System.Boolean
          description: "\nFalse (default) to indicate that the first dimension is most major (farthest apart) and the last dimension \nis most minor (closest together): akin to row-major in a rank-2 tensor.  \nTrue to indicate that the last dimension is most major (farthest apart) and the first dimension is most \nminor (closest together): akin to column-major in a rank-2 tensor.\n"
      overload: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Buffer
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Buffer
      language: CSharp
      name:
        CSharp: Buffer
        VB: Buffer
      nameWithType:
        CSharp: DenseTensor<T>.Buffer
        VB: DenseTensor(Of T).Buffer
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.Buffer
        VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).Buffer
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Buffer
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        startLine: 111
      summary: "\nMemory storing backing values of this tensor.\n"
      example: []
      syntax:
        content:
          CSharp: public Memory<T> Buffer { get; }
          VB: Public ReadOnly Property Buffer As Memory(Of T)
        parameters: []
        return:
          type: Memory{{T}}
      overload: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Buffer*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.GetValue(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.GetValue(System.Int32)
      language: CSharp
      name:
        CSharp: GetValue(Int32)
        VB: GetValue(Int32)
      nameWithType:
        CSharp: DenseTensor<T>.GetValue(Int32)
        VB: DenseTensor(Of T).GetValue(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.GetValue(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).GetValue(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetValue
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        startLine: 119
      summary: "\nGets the value at the specified index, where index is a linearized version of n-dimension indices \nusing strides. For a scalar, use index = 0\n"
      example: []
      syntax:
        content:
          CSharp: public override T GetValue(int index)
          VB: Public Overrides Function GetValue(index As Integer) As T
        parameters:
        - id: index
          type: System.Int32
          description: An integer index computed as a dot-product of indices.
        return:
          type: '{T}'
          description: The value at the specified position in this Tensor.
      overload: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.GetValue*
      overridden: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetValue(System.Int32)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.SetValue(System.Int32,`0)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.SetValue(System.Int32,`0)
      language: CSharp
      name:
        CSharp: SetValue(Int32, T)
        VB: SetValue(Int32, T)
      nameWithType:
        CSharp: DenseTensor<T>.SetValue(Int32, T)
        VB: DenseTensor(Of T).SetValue(Int32, T)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.SetValue(System.Int32, T)
        VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).SetValue(System.Int32, T)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetValue
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        startLine: 130
      summary: "\nSets the value at the specified index, where index is a linearized version of n-dimension indices \nusing strides. For a scalar, use index = 0\n"
      example: []
      syntax:
        content:
          CSharp: public override void SetValue(int index, T value)
          VB: Public Overrides Sub SetValue(index As Integer, value As T)
        parameters:
        - id: index
          type: System.Int32
          description: An integer index computed as a dot-product of indices.
        - id: value
          type: '{T}'
          description: The new value to set at the specified position in this Tensor.
      overload: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.SetValue*
      overridden: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.SetValue(System.Int32,{T})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CopyTo(`0[],System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CopyTo(`0[],System.Int32)
      language: CSharp
      name:
        CSharp: CopyTo(T[], Int32)
        VB: CopyTo(T(), Int32)
      nameWithType:
        CSharp: DenseTensor<T>.CopyTo(T[], Int32)
        VB: DenseTensor(Of T).CopyTo(T(), Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.CopyTo(T[], System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).CopyTo(T(), System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CopyTo
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        startLine: 141
      summary: "\nOverrides Tensor.CopyTo(). Copies the content of the Tensor\nto the specified array starting with arrayIndex\n"
      example: []
      syntax:
        content:
          CSharp: protected override void CopyTo(T[] array, int arrayIndex)
          VB: Protected Overrides Sub CopyTo(array As T(), arrayIndex As Integer)
        parameters:
        - id: array
          type: '{T}[]'
          description: destination array
        - id: arrayIndex
          type: System.Int32
          description: start index
      overload: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CopyTo*
      overridden: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.CopyTo({T}[],System.Int32)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.IndexOf(`0)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.IndexOf(`0)
      language: CSharp
      name:
        CSharp: IndexOf(T)
        VB: IndexOf(T)
      nameWithType:
        CSharp: DenseTensor<T>.IndexOf(T)
        VB: DenseTensor(Of T).IndexOf(T)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.IndexOf(T)
        VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).IndexOf(T)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IndexOf
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        startLine: 162
      summary: "\nDetermines the index of a specific item in the Tensor&lt;T>.\n"
      example: []
      syntax:
        content:
          CSharp: protected override int IndexOf(T item)
          VB: Protected Overrides Function IndexOf(item As T) As Integer
        parameters:
        - id: item
          type: '{T}'
          description: Object to locate
        return:
          type: System.Int32
          description: The index of item if found in the tensor; otherwise, -1
      overload: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.IndexOf*
      overridden: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.IndexOf({T})
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Clone
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: DenseTensor<T>.Clone()
        VB: DenseTensor(Of T).Clone()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.Clone()
        VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).Clone()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Clone
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        startLine: 184
      summary: "\nCreates a shallow copy of this tensor, with new backing storage.\n"
      example: []
      syntax:
        content:
          CSharp: public override Tensor<T> Clone()
          VB: Public Overrides Function Clone As Tensor(Of T)
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: A shallow copy of this tensor.
      overload: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Clone*
      overridden: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Clone
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CloneEmpty``1(ReadOnlySpan{System.Int32})
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CloneEmpty``1(ReadOnlySpan{System.Int32})
      language: CSharp
      name:
        CSharp: CloneEmpty<TResult>(ReadOnlySpan<Int32>)
        VB: CloneEmpty(Of TResult)(ReadOnlySpan(Of Int32))
      nameWithType:
        CSharp: DenseTensor<T>.CloneEmpty<TResult>(ReadOnlySpan<Int32>)
        VB: DenseTensor(Of T).CloneEmpty(Of TResult)(ReadOnlySpan(Of Int32))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.CloneEmpty<TResult>(ReadOnlySpan<System.Int32>)
        VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).CloneEmpty(Of TResult)(ReadOnlySpan(Of System.Int32))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CloneEmpty
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        startLine: 198
      summary: "\nCreates a new Tensor of a different type with the specified dimensions and the same layout as this tensor \nwith elements initialized to their default value.\n"
      example: []
      syntax:
        content:
          CSharp: public override Tensor<TResult> CloneEmpty<TResult>(ReadOnlySpan<int> dimensions)
          VB: Public Overrides Function CloneEmpty(Of TResult)(dimensions As ReadOnlySpan(Of Integer)) As Tensor(Of TResult)
        parameters:
        - id: dimensions
          type: ReadOnlySpan{System.Int32}
          description: "\nAn span of integers that represent the size of each dimension of the DenseTensor to create."
        typeParameters:
        - id: TResult
          description: Type contained in the returned Tensor.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{TResult}}
          description: A new tensor with the same layout as this tensor but different type and dimensions.
      overload: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CloneEmpty*
      overridden: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.CloneEmpty``1(ReadOnlySpan{System.Int32})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Reshape(ReadOnlySpan{System.Int32})
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Reshape(ReadOnlySpan{System.Int32})
      language: CSharp
      name:
        CSharp: Reshape(ReadOnlySpan<Int32>)
        VB: Reshape(ReadOnlySpan(Of Int32))
      nameWithType:
        CSharp: DenseTensor<T>.Reshape(ReadOnlySpan<Int32>)
        VB: DenseTensor(Of T).Reshape(ReadOnlySpan(Of Int32))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.Reshape(ReadOnlySpan<System.Int32>)
        VB: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).Reshape(ReadOnlySpan(Of System.Int32))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Reshape
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/DenseTensor.shared.cs
        startLine: 209
      summary: "\nReshapes the current tensor to new dimensions, using the same backing storage.\n"
      example: []
      syntax:
        content:
          CSharp: public override Tensor<T> Reshape(ReadOnlySpan<int> dimensions)
          VB: Public Overrides Function Reshape(dimensions As ReadOnlySpan(Of Integer)) As Tensor(Of T)
        parameters:
        - id: dimensions
          type: ReadOnlySpan{System.Int32}
          description: "\nAn span of integers that represent the size of each dimension of the DenseTensor to create."
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: A new tensor that reinterprets backing Buffer of this tensor with different dimensions.
      overload: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Reshape*
      overridden: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Reshape(ReadOnlySpan{System.Int32})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
    language: CSharp
    name:
      CSharp: TensorElementType
      VB: TensorElementType
    nameWithType:
      CSharp: TensorElementType
      VB: TensorElementType
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
    type: Enum
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime.Tensors
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: TensorElementType
      path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      startLine: 25
    summary: "\nSupported Tensor DataType\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum TensorElementType : int'
        VB: Public Enum TensorElementType As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Float
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Float
      language: CSharp
      name:
        CSharp: Float
        VB: Float
      nameWithType:
        CSharp: TensorElementType.Float
        VB: TensorElementType.Float
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Float
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Float
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Float
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 27
      syntax:
        content:
          CSharp: Float = null
          VB: Float = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt8
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt8
      language: CSharp
      name:
        CSharp: UInt8
        VB: UInt8
      nameWithType:
        CSharp: TensorElementType.UInt8
        VB: TensorElementType.UInt8
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt8
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt8
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UInt8
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 28
      syntax:
        content:
          CSharp: UInt8 = null
          VB: UInt8 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int8
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int8
      language: CSharp
      name:
        CSharp: Int8
        VB: Int8
      nameWithType:
        CSharp: TensorElementType.Int8
        VB: TensorElementType.Int8
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int8
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int8
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Int8
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 29
      syntax:
        content:
          CSharp: Int8 = null
          VB: Int8 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt16
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt16
      language: CSharp
      name:
        CSharp: UInt16
        VB: UInt16
      nameWithType:
        CSharp: TensorElementType.UInt16
        VB: TensorElementType.UInt16
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt16
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt16
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UInt16
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 30
      syntax:
        content:
          CSharp: UInt16 = null
          VB: UInt16 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int16
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int16
      language: CSharp
      name:
        CSharp: Int16
        VB: Int16
      nameWithType:
        CSharp: TensorElementType.Int16
        VB: TensorElementType.Int16
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int16
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int16
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Int16
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 31
      syntax:
        content:
          CSharp: Int16 = null
          VB: Int16 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int32
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int32
      language: CSharp
      name:
        CSharp: Int32
        VB: Int32
      nameWithType:
        CSharp: TensorElementType.Int32
        VB: TensorElementType.Int32
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int32
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int32
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Int32
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 32
      syntax:
        content:
          CSharp: Int32 = null
          VB: Int32 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int64
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int64
      language: CSharp
      name:
        CSharp: Int64
        VB: Int64
      nameWithType:
        CSharp: TensorElementType.Int64
        VB: TensorElementType.Int64
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int64
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Int64
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Int64
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 33
      syntax:
        content:
          CSharp: Int64 = null
          VB: Int64 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.String
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.String
      language: CSharp
      name:
        CSharp: String
        VB: String
      nameWithType:
        CSharp: TensorElementType.String
        VB: TensorElementType.String
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.String
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.String
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: String
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 34
      syntax:
        content:
          CSharp: String = null
          VB: String = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Bool
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Bool
      language: CSharp
      name:
        CSharp: Bool
        VB: Bool
      nameWithType:
        CSharp: TensorElementType.Bool
        VB: TensorElementType.Bool
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Bool
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Bool
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Bool
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 35
      syntax:
        content:
          CSharp: Bool = null
          VB: Bool = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Float16
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Float16
      language: CSharp
      name:
        CSharp: Float16
        VB: Float16
      nameWithType:
        CSharp: TensorElementType.Float16
        VB: TensorElementType.Float16
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Float16
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Float16
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Float16
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 36
      syntax:
        content:
          CSharp: Float16 = null
          VB: Float16 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Double
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Double
      language: CSharp
      name:
        CSharp: Double
        VB: Double
      nameWithType:
        CSharp: TensorElementType.Double
        VB: TensorElementType.Double
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Double
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Double
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Double
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 37
      syntax:
        content:
          CSharp: Double = null
          VB: Double = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt32
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt32
      language: CSharp
      name:
        CSharp: UInt32
        VB: UInt32
      nameWithType:
        CSharp: TensorElementType.UInt32
        VB: TensorElementType.UInt32
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt32
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt32
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UInt32
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 38
      syntax:
        content:
          CSharp: UInt32 = null
          VB: UInt32 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt64
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt64
      language: CSharp
      name:
        CSharp: UInt64
        VB: UInt64
      nameWithType:
        CSharp: TensorElementType.UInt64
        VB: TensorElementType.UInt64
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt64
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.UInt64
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: UInt64
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 39
      syntax:
        content:
          CSharp: UInt64 = null
          VB: UInt64 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Complex64
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Complex64
      language: CSharp
      name:
        CSharp: Complex64
        VB: Complex64
      nameWithType:
        CSharp: TensorElementType.Complex64
        VB: TensorElementType.Complex64
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Complex64
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Complex64
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Complex64
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 40
      syntax:
        content:
          CSharp: Complex64 = null
          VB: Complex64 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Complex128
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Complex128
      language: CSharp
      name:
        CSharp: Complex128
        VB: Complex128
      nameWithType:
        CSharp: TensorElementType.Complex128
        VB: TensorElementType.Complex128
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Complex128
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.Complex128
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Complex128
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 41
      syntax:
        content:
          CSharp: Complex128 = null
          VB: Complex128 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.BFloat16
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.BFloat16
      language: CSharp
      name:
        CSharp: BFloat16
        VB: BFloat16
      nameWithType:
        CSharp: TensorElementType.BFloat16
        VB: TensorElementType.BFloat16
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.BFloat16
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.BFloat16
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: BFloat16
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 42
      syntax:
        content:
          CSharp: BFloat16 = null
          VB: BFloat16 = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.DataTypeMax
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.DataTypeMax
      language: CSharp
      name:
        CSharp: DataTypeMax
        VB: DataTypeMax
      nameWithType:
        CSharp: TensorElementType.DataTypeMax
        VB: TensorElementType.DataTypeMax
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.DataTypeMax
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType.DataTypeMax
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: DataTypeMax
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 43
      syntax:
        content:
          CSharp: DataTypeMax = null
          VB: DataTypeMax = Nothing
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Microsoft.ML.OnnxRuntime.Tensors.Float16
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.Float16
    language: CSharp
    name:
      CSharp: Float16
      VB: Float16
    nameWithType:
      CSharp: Float16
      VB: Float16
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.Tensors.Float16
      VB: Microsoft.ML.OnnxRuntime.Tensors.Float16
    type: Struct
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime.Tensors
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: Float16
      path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      startLine: 54
    summary: "\nThis value type represents A Float16 value\nit is blittable as defined in https://docs.microsoft.com/en-us/dotnet/framework/interop/blittable-and-non-blittable-types\nand as such, represented the same way in managed and native memories. This means that arrays of this type\ndo not have to be copied to be passed to native memory but simply pinnned and read by native code. Thus,\none can create a Tensor on top of an array of these structures and feed it directly to Onnxruntime library.\nBinary wise, it is the same as ushort[] (uint16_t in C++). However, we would like a separate type for type dispatching.\n"
    example: []
    syntax:
      content:
        CSharp: public struct Float16
        VB: Public Structure Float16
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.value
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.Float16.value
      language: CSharp
      name:
        CSharp: value
        VB: value
      nameWithType:
        CSharp: Float16.value
        VB: Float16.value
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Float16.value
        VB: Microsoft.ML.OnnxRuntime.Tensors.Float16.value
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: value
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 59
      summary: "\nfloat16 representation bits\n"
      example: []
      syntax:
        content:
          CSharp: public ushort value
          VB: Public value As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.#ctor(System.UInt16)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Float16.#ctor(System.UInt16)
      language: CSharp
      name:
        CSharp: Float16(UInt16)
        VB: Float16(UInt16)
      nameWithType:
        CSharp: Float16.Float16(UInt16)
        VB: Float16.Float16(UInt16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Float16.Float16(System.UInt16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Float16.Float16(System.UInt16)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 64
      summary: "\nCtor\n"
      example: []
      syntax:
        content:
          CSharp: public Float16(ushort v)
          VB: Public Sub New(v As UShort)
        parameters:
        - id: v
          type: System.UInt16
          description: ''
      overload: Microsoft.ML.OnnxRuntime.Tensors.Float16.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Implicit(Microsoft.ML.OnnxRuntime.Tensors.Float16)~System.UInt16
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Implicit(Microsoft.ML.OnnxRuntime.Tensors.Float16)~System.UInt16
      language: CSharp
      name:
        CSharp: Implicit(Float16 to UInt16)
        VB: Widening(Float16 to UInt16)
      nameWithType:
        CSharp: Float16.Implicit(Float16 to UInt16)
        VB: Float16.Widening(Float16 to UInt16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Float16.Implicit(Microsoft.ML.OnnxRuntime.Tensors.Float16 to System.UInt16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Float16.Widening(Microsoft.ML.OnnxRuntime.Tensors.Float16 to System.UInt16)
      type: Operator
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: op_Implicit
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 73
      summary: "\nConverts to ushort\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator ushort (Float16 f)
          VB: Public Shared Widening Operator CType(f As Float16) As UShort
        parameters:
        - id: f
          type: Microsoft.ML.OnnxRuntime.Tensors.Float16
          description: instance of Float16
        return:
          type: System.UInt16
          description: value member
      overload: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Implicit(System.UInt16)~Microsoft.ML.OnnxRuntime.Tensors.Float16
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Implicit(System.UInt16)~Microsoft.ML.OnnxRuntime.Tensors.Float16
      language: CSharp
      name:
        CSharp: Implicit(UInt16 to Float16)
        VB: Widening(UInt16 to Float16)
      nameWithType:
        CSharp: Float16.Implicit(UInt16 to Float16)
        VB: Float16.Widening(UInt16 to Float16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Float16.Implicit(System.UInt16 to Microsoft.ML.OnnxRuntime.Tensors.Float16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Float16.Widening(System.UInt16 to Microsoft.ML.OnnxRuntime.Tensors.Float16)
      type: Operator
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: op_Implicit
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 79
      summary: "\nConverts a 16-bit unsigned integer to a Float16.\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator Float16(ushort value)
          VB: Public Shared Widening Operator CType(value As UShort) As Float16
        parameters:
        - id: value
          type: System.UInt16
          description: A 16-bit unsigned integer.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Float16
          description: A Float16 that represents the converted 16-bit unsigned integer.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Equality(Microsoft.ML.OnnxRuntime.Tensors.Float16,Microsoft.ML.OnnxRuntime.Tensors.Float16)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Equality(Microsoft.ML.OnnxRuntime.Tensors.Float16,Microsoft.ML.OnnxRuntime.Tensors.Float16)
      language: CSharp
      name:
        CSharp: Equality(Float16, Float16)
        VB: Equality(Float16, Float16)
      nameWithType:
        CSharp: Float16.Equality(Float16, Float16)
        VB: Float16.Equality(Float16, Float16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equality(Microsoft.ML.OnnxRuntime.Tensors.Float16, Microsoft.ML.OnnxRuntime.Tensors.Float16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equality(Microsoft.ML.OnnxRuntime.Tensors.Float16, Microsoft.ML.OnnxRuntime.Tensors.Float16)
      type: Operator
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: op_Equality
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 86
      summary: "\nCompares values of two Float16 for binary equality\n"
      example: []
      syntax:
        content:
          CSharp: public static bool operator ==(Float16 lhs, Float16 rhs)
          VB: Public Shared Operator =(lhs As Float16, rhs As Float16) As Boolean
        parameters:
        - id: lhs
          type: Microsoft.ML.OnnxRuntime.Tensors.Float16
          description: ''
        - id: rhs
          type: Microsoft.ML.OnnxRuntime.Tensors.Float16
          description: ''
        return:
          type: System.Boolean
          description: result of value comparisons
      overload: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Inequality(Microsoft.ML.OnnxRuntime.Tensors.Float16,Microsoft.ML.OnnxRuntime.Tensors.Float16)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Inequality(Microsoft.ML.OnnxRuntime.Tensors.Float16,Microsoft.ML.OnnxRuntime.Tensors.Float16)
      language: CSharp
      name:
        CSharp: Inequality(Float16, Float16)
        VB: Inequality(Float16, Float16)
      nameWithType:
        CSharp: Float16.Inequality(Float16, Float16)
        VB: Float16.Inequality(Float16, Float16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Float16.Inequality(Microsoft.ML.OnnxRuntime.Tensors.Float16, Microsoft.ML.OnnxRuntime.Tensors.Float16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Float16.Inequality(Microsoft.ML.OnnxRuntime.Tensors.Float16, Microsoft.ML.OnnxRuntime.Tensors.Float16)
      type: Operator
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: op_Inequality
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 93
      summary: "\nCompares values of two Float16 for binary inequality\n"
      example: []
      syntax:
        content:
          CSharp: public static bool operator !=(Float16 lhs, Float16 rhs)
          VB: Public Shared Operator <>(lhs As Float16, rhs As Float16) As Boolean
        parameters:
        - id: lhs
          type: Microsoft.ML.OnnxRuntime.Tensors.Float16
          description: ''
        - id: rhs
          type: Microsoft.ML.OnnxRuntime.Tensors.Float16
          description: ''
        return:
          type: System.Boolean
          description: result of value comparisons
      overload: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals(Microsoft.ML.OnnxRuntime.Tensors.Float16)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals(Microsoft.ML.OnnxRuntime.Tensors.Float16)
      language: CSharp
      name:
        CSharp: Equals(Float16)
        VB: Equals(Float16)
      nameWithType:
        CSharp: Float16.Equals(Float16)
        VB: Float16.Equals(Float16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals(Microsoft.ML.OnnxRuntime.Tensors.Float16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals(Microsoft.ML.OnnxRuntime.Tensors.Float16)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Equals
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 99
      summary: "\nReturns a value indicating whether this instance and other Float16 represent the same value.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Equals(Float16 other)
          VB: Public Function Equals(other As Float16) As Boolean
        parameters:
        - id: other
          type: Microsoft.ML.OnnxRuntime.Tensors.Float16
          description: A Float16 object to compare to this instance.
        return:
          type: System.Boolean
          description: true if other.value is equal to this instance; otherwise, false.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals(System.Object)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: Float16.Equals(Object)
        VB: Float16.Equals(Object)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals(System.Object)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals(System.Object)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Equals
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 109
      summary: "\nReturns a value indicating whether this instance and a specified System.Object\nrepresent the same type and value.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
          description: An System.Object.
        return:
          type: System.Boolean
          description: true if obj is Float16 and its value is equal to this instance; otherwise, false.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.GetHashCode
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Float16.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: Float16.GetHashCode()
        VB: Float16.GetHashCode()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Float16.GetHashCode()
        VB: Microsoft.ML.OnnxRuntime.Tensors.Float16.GetHashCode()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetHashCode
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 123
      summary: "\nReturns the hash code for this instance.\n"
      example: []
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
          description: A 32-bit signed integer hash code.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Float16.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.BFloat16
    language: CSharp
    name:
      CSharp: BFloat16
      VB: BFloat16
    nameWithType:
      CSharp: BFloat16
      VB: BFloat16
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
      VB: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
    type: Struct
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime.Tensors
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: BFloat16
      path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      startLine: 137
    summary: "\nThis value type represents A BFloat16 value\nit is blittable as defined in https://docs.microsoft.com/en-us/dotnet/framework/interop/blittable-and-non-blittable-types\nand as such, represented the same way in managed and native memories. This means that arrays of this type\ndo not have to be copied to be passed to native memory but simply pinnned and read by native code. Thus,\none can create a Tensor on top of an array of these structures and feed it directly to Onnxruntime library.\nBinary wise, it is the same as ushort[] (uint16_t in C++). However, we would like a separate type for type dispatching.\n"
    example: []
    syntax:
      content:
        CSharp: public struct BFloat16
        VB: Public Structure BFloat16
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.value
      commentId: F:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.value
      language: CSharp
      name:
        CSharp: value
        VB: value
      nameWithType:
        CSharp: BFloat16.value
        VB: BFloat16.value
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.value
        VB: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.value
      type: Field
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: value
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 142
      summary: "\nbfloat16 representation bits\n"
      example: []
      syntax:
        content:
          CSharp: public ushort value
          VB: Public value As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.#ctor(System.UInt16)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.#ctor(System.UInt16)
      language: CSharp
      name:
        CSharp: BFloat16(UInt16)
        VB: BFloat16(UInt16)
      nameWithType:
        CSharp: BFloat16.BFloat16(UInt16)
        VB: BFloat16.BFloat16(UInt16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.BFloat16(System.UInt16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.BFloat16(System.UInt16)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 147
      summary: "\nCtor\n"
      example: []
      syntax:
        content:
          CSharp: public BFloat16(ushort v)
          VB: Public Sub New(v As UShort)
        parameters:
        - id: v
          type: System.UInt16
          description: ''
      overload: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Implicit(Microsoft.ML.OnnxRuntime.Tensors.BFloat16)~System.UInt16
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Implicit(Microsoft.ML.OnnxRuntime.Tensors.BFloat16)~System.UInt16
      language: CSharp
      name:
        CSharp: Implicit(BFloat16 to UInt16)
        VB: Widening(BFloat16 to UInt16)
      nameWithType:
        CSharp: BFloat16.Implicit(BFloat16 to UInt16)
        VB: BFloat16.Widening(BFloat16 to UInt16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Implicit(Microsoft.ML.OnnxRuntime.Tensors.BFloat16 to System.UInt16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Widening(Microsoft.ML.OnnxRuntime.Tensors.BFloat16 to System.UInt16)
      type: Operator
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: op_Implicit
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 156
      summary: "\nConverts to ushort\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator ushort (BFloat16 bf)
          VB: Public Shared Widening Operator CType(bf As BFloat16) As UShort
        parameters:
        - id: bf
          type: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
          description: instance of BFloat16
        return:
          type: System.UInt16
          description: value member
      overload: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Implicit(System.UInt16)~Microsoft.ML.OnnxRuntime.Tensors.BFloat16
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Implicit(System.UInt16)~Microsoft.ML.OnnxRuntime.Tensors.BFloat16
      language: CSharp
      name:
        CSharp: Implicit(UInt16 to BFloat16)
        VB: Widening(UInt16 to BFloat16)
      nameWithType:
        CSharp: BFloat16.Implicit(UInt16 to BFloat16)
        VB: BFloat16.Widening(UInt16 to BFloat16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Implicit(System.UInt16 to Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Widening(System.UInt16 to Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
      type: Operator
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: op_Implicit
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 162
      summary: "\nConverts a 16-bit unsigned integer to a BFloat16.\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator BFloat16(ushort value)
          VB: Public Shared Widening Operator CType(value As UShort) As BFloat16
        parameters:
        - id: value
          type: System.UInt16
          description: A 16-bit unsigned integer.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
          description: A BFloat16 that represents the converted 16-bit unsigned integer.
      overload: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Equality(Microsoft.ML.OnnxRuntime.Tensors.BFloat16,Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Equality(Microsoft.ML.OnnxRuntime.Tensors.BFloat16,Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
      language: CSharp
      name:
        CSharp: Equality(BFloat16, BFloat16)
        VB: Equality(BFloat16, BFloat16)
      nameWithType:
        CSharp: BFloat16.Equality(BFloat16, BFloat16)
        VB: BFloat16.Equality(BFloat16, BFloat16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equality(Microsoft.ML.OnnxRuntime.Tensors.BFloat16, Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equality(Microsoft.ML.OnnxRuntime.Tensors.BFloat16, Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
      type: Operator
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: op_Equality
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 169
      summary: "\nCompares values of two BFloat16 for binary equality\n"
      example: []
      syntax:
        content:
          CSharp: public static bool operator ==(BFloat16 lhs, BFloat16 rhs)
          VB: Public Shared Operator =(lhs As BFloat16, rhs As BFloat16) As Boolean
        parameters:
        - id: lhs
          type: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
          description: ''
        - id: rhs
          type: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
          description: ''
        return:
          type: System.Boolean
          description: result of value comparisons
      overload: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Inequality(Microsoft.ML.OnnxRuntime.Tensors.BFloat16,Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Inequality(Microsoft.ML.OnnxRuntime.Tensors.BFloat16,Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
      language: CSharp
      name:
        CSharp: Inequality(BFloat16, BFloat16)
        VB: Inequality(BFloat16, BFloat16)
      nameWithType:
        CSharp: BFloat16.Inequality(BFloat16, BFloat16)
        VB: BFloat16.Inequality(BFloat16, BFloat16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Inequality(Microsoft.ML.OnnxRuntime.Tensors.BFloat16, Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Inequality(Microsoft.ML.OnnxRuntime.Tensors.BFloat16, Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
      type: Operator
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: op_Inequality
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 176
      summary: "\nCompares values of two BFloat16 for binary inequality\n"
      example: []
      syntax:
        content:
          CSharp: public static bool operator !=(BFloat16 lhs, BFloat16 rhs)
          VB: Public Shared Operator <>(lhs As BFloat16, rhs As BFloat16) As Boolean
        parameters:
        - id: lhs
          type: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
          description: ''
        - id: rhs
          type: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
          description: ''
        return:
          type: System.Boolean
          description: result of value comparisons
      overload: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals(Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals(Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
      language: CSharp
      name:
        CSharp: Equals(BFloat16)
        VB: Equals(BFloat16)
      nameWithType:
        CSharp: BFloat16.Equals(BFloat16)
        VB: BFloat16.Equals(BFloat16)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals(Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
        VB: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals(Microsoft.ML.OnnxRuntime.Tensors.BFloat16)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Equals
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 183
      summary: "\nReturns a value indicating whether this instance and other BFloat16 represent the same value.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Equals(BFloat16 other)
          VB: Public Function Equals(other As BFloat16) As Boolean
        parameters:
        - id: other
          type: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
          description: A BFloat16 object to compare to this instance.
        return:
          type: System.Boolean
          description: true if other.value is equal to this instance; otherwise, false.
      overload: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals(System.Object)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: BFloat16.Equals(Object)
        VB: BFloat16.Equals(Object)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals(System.Object)
        VB: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals(System.Object)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Equals
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 194
      summary: "\nReturns a value indicating whether this instance and a specified System.Object\nrepresent the same type and value.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
          description: An System.Object.
        return:
          type: System.Boolean
          description: true if obj is BFloat16 its value is equal to this instance; otherwise, false.
      overload: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.GetHashCode
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: BFloat16.GetHashCode()
        VB: BFloat16.GetHashCode()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.GetHashCode()
        VB: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.GetHashCode()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetHashCode
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 208
      summary: "\nReturns the hash code for this instance.\n"
      example: []
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
          description: A 32-bit signed integer hash code.
      overload: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
    language: CSharp
    name:
      CSharp: TensorTypeInfo
      VB: TensorTypeInfo
    nameWithType:
      CSharp: TensorTypeInfo
      VB: TensorTypeInfo
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
      VB: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime.Tensors
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: TensorTypeInfo
      path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      startLine: 217
    summary: "\nHelps typecasting. Holds Tensor element type traits.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TensorTypeInfo : object'
        VB: >-
          Public Class TensorTypeInfo

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
      language: CSharp
      name:
        CSharp: ElementType
        VB: ElementType
      nameWithType:
        CSharp: TensorTypeInfo.ElementType
        VB: TensorTypeInfo.ElementType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ElementType
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 223
      summary: "\nTensorElementType enum\n"
      example: []
      syntax:
        content:
          CSharp: public TensorElementType ElementType { get; }
          VB: Public ReadOnly Property ElementType As TensorElementType
        parameters: []
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
          description: type enum value
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
      language: CSharp
      name:
        CSharp: TypeSize
        VB: TypeSize
      nameWithType:
        CSharp: TensorTypeInfo.TypeSize
        VB: TensorTypeInfo.TypeSize
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: TypeSize
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 228
      summary: "\nSize of the stored primitive type in bytes\n"
      example: []
      syntax:
        content:
          CSharp: public int TypeSize { get; }
          VB: Public ReadOnly Property TypeSize As Integer
        parameters: []
        return:
          type: System.Int32
          description: size in bytes
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
      language: CSharp
      name:
        CSharp: IsString
        VB: IsString
      nameWithType:
        CSharp: TensorTypeInfo.IsString
        VB: TensorTypeInfo.IsString
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsString
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 233
      summary: "\nIs the type is a string\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsString { get; }
          VB: Public ReadOnly Property IsString As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: true if Tensor element type is a string
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int32)
      language: CSharp
      name:
        CSharp: TensorTypeInfo(TensorElementType, Int32)
        VB: TensorTypeInfo(TensorElementType, Int32)
      nameWithType:
        CSharp: TensorTypeInfo.TensorTypeInfo(TensorElementType, Int32)
        VB: TensorTypeInfo.TensorTypeInfo(TensorElementType, Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TensorTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TensorTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, System.Int32)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 239
      summary: "\nCtor\n"
      example: []
      syntax:
        content:
          CSharp: public TensorTypeInfo(TensorElementType elementType, int typeSize)
          VB: Public Sub New(elementType As TensorElementType, typeSize As Integer)
        parameters:
        - id: elementType
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
          description: TensorElementType value
        - id: typeSize
          type: System.Int32
          description: size fo the type in bytes
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo
    language: CSharp
    name:
      CSharp: TensorElementTypeInfo
      VB: TensorElementTypeInfo
    nameWithType:
      CSharp: TensorElementTypeInfo
      VB: TensorElementTypeInfo
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo
      VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime.Tensors
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: TensorElementTypeInfo
      path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      startLine: 249
    summary: "\nHolds TensorElement traits\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TensorElementTypeInfo : object'
        VB: >-
          Public Class TensorElementTypeInfo

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorType
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorType
      language: CSharp
      name:
        CSharp: TensorType
        VB: TensorType
      nameWithType:
        CSharp: TensorElementTypeInfo.TensorType
        VB: TensorElementTypeInfo.TensorType
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorType
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorType
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: TensorType
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 255
      summary: "\nTensor element type\n"
      example: []
      syntax:
        content:
          CSharp: public Type TensorType { get; }
          VB: Public ReadOnly Property TensorType As Type
        parameters: []
        return:
          type: Type
          description: System.Type
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TypeSize
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TypeSize
      language: CSharp
      name:
        CSharp: TypeSize
        VB: TypeSize
      nameWithType:
        CSharp: TensorElementTypeInfo.TypeSize
        VB: TensorElementTypeInfo.TypeSize
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TypeSize
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TypeSize
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: TypeSize
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 260
      summary: "\nSize of the stored primitive type in bytes\n"
      example: []
      syntax:
        content:
          CSharp: public int TypeSize { get; }
          VB: Public ReadOnly Property TypeSize As Integer
        parameters: []
        return:
          type: System.Int32
          description: size in bytes
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TypeSize*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.IsString
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.IsString
      language: CSharp
      name:
        CSharp: IsString
        VB: IsString
      nameWithType:
        CSharp: TensorElementTypeInfo.IsString
        VB: TensorElementTypeInfo.IsString
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.IsString
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.IsString
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsString
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 265
      summary: "\nIs the type is a string\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsString { get; }
          VB: Public ReadOnly Property IsString As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: true if Tensor element type is a string
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.IsString*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.#ctor(Type,System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.#ctor(Type,System.Int32)
      language: CSharp
      name:
        CSharp: TensorElementTypeInfo(Type, Int32)
        VB: TensorElementTypeInfo(Type, Int32)
      nameWithType:
        CSharp: TensorElementTypeInfo.TensorElementTypeInfo(Type, Int32)
        VB: TensorElementTypeInfo.TensorElementTypeInfo(Type, Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorElementTypeInfo(Type, System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorElementTypeInfo(Type, System.Int32)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 271
      summary: "\nCtor\n"
      example: []
      syntax:
        content:
          CSharp: public TensorElementTypeInfo(Type type, int typeSize)
          VB: Public Sub New(type As Type, typeSize As Integer)
        parameters:
        - id: type
          type: Type
          description: Tensor element type
        - id: typeSize
          type: System.Int32
          description: typesize
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.TensorBase
    language: CSharp
    name:
      CSharp: TensorBase
      VB: TensorBase
    nameWithType:
      CSharp: TensorBase
      VB: TensorBase
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorBase
      VB: Microsoft.ML.OnnxRuntime.Tensors.TensorBase
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime.Tensors
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: TensorBase
      path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      startLine: 282
    summary: "\nThis class is a base for all Tensors. It hosts maps with type traits.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TensorBase : object'
        VB: >-
          Public Class TensorBase

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.#ctor(Type)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.TensorBase.#ctor(Type)
      language: CSharp
      name:
        CSharp: TensorBase(Type)
        VB: TensorBase(Type)
      nameWithType:
        CSharp: TensorBase.TensorBase(Type)
        VB: TensorBase.TensorBase(Type)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.TensorBase(Type)
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.TensorBase(Type)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 319
      summary: "\nConstructs TensorBae\n"
      example: []
      syntax:
        content:
          CSharp: protected TensorBase(Type primitiveType)
          VB: Protected Sub New(primitiveType As Type)
        parameters:
        - id: primitiveType
          type: Type
          description: primitive type the deriving class is using
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo(Type)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo(Type)
      language: CSharp
      name:
        CSharp: GetTypeInfo(Type)
        VB: GetTypeInfo(Type)
      nameWithType:
        CSharp: TensorBase.GetTypeInfo(Type)
        VB: TensorBase.GetTypeInfo(Type)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo(Type)
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo(Type)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 336
      summary: "\nQuery TensorTypeInfo by one of the supported types\n"
      example: []
      syntax:
        content:
          CSharp: public static TensorTypeInfo GetTypeInfo(Type type)
          VB: Public Shared Function GetTypeInfo(type As Type) As TensorTypeInfo
        parameters:
        - id: type
          type: Type
          description: ''
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
          description: TensorTypeInfo or null if not supported
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType)
      language: CSharp
      name:
        CSharp: GetElementTypeInfo(TensorElementType)
        VB: GetElementTypeInfo(TensorElementType)
      nameWithType:
        CSharp: TensorBase.GetElementTypeInfo(TensorElementType)
        VB: TensorBase.GetElementTypeInfo(TensorElementType)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType)
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetElementTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 348
      summary: "\nQuery TensorElementTypeInfo by enum\n"
      example: []
      syntax:
        content:
          CSharp: public static TensorElementTypeInfo GetElementTypeInfo(TensorElementType elementType)
          VB: Public Shared Function GetElementTypeInfo(elementType As TensorElementType) As TensorElementTypeInfo
        parameters:
        - id: elementType
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
          description: type enum
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo
          description: instance of TensorElementTypeInfo or null if not found
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
      language: CSharp
      name:
        CSharp: GetTypeInfo()
        VB: GetTypeInfo()
      nameWithType:
        CSharp: TensorBase.GetTypeInfo()
        VB: TensorBase.GetTypeInfo()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo()
        VB: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTypeInfo
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 359
      summary: "\nQuery TensorTypeInfo using this Tensor type\n"
      example: []
      syntax:
        content:
          CSharp: public TensorTypeInfo GetTypeInfo()
          VB: Public Function GetTypeInfo As TensorTypeInfo
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
          description: ''
      overload: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.Tensor
    language: CSharp
    name:
      CSharp: Tensor
      VB: Tensor
    nameWithType:
      CSharp: Tensor
      VB: Tensor
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime.Tensors
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: Tensor
      path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      startLine: 368
    summary: "\nVarious methods for creating and manipulating Tensor&lt;T>\n"
    example: []
    syntax:
      content:
        CSharp: 'public static class Tensor : object'
        VB: >-
          Public Module Tensor

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity``1(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity``1(System.Int32)
      language: CSharp
      name:
        CSharp: CreateIdentity<T>(Int32)
        VB: CreateIdentity(Of T)(Int32)
      nameWithType:
        CSharp: Tensor.CreateIdentity<T>(Int32)
        VB: Tensor.CreateIdentity(Of T)(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity<T>(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity(Of T)(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateIdentity
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 376
      summary: "\nCreates an identity tensor of the specified size.  An identity tensor is a two dimensional tensor with 1s in the diagonal.\n"
      example: []
      syntax:
        content:
          CSharp: public static Tensor<T> CreateIdentity<T>(int size)
          VB: Public Shared Function CreateIdentity(Of T)(size As Integer) As Tensor(Of T)
        parameters:
        - id: size
          type: System.Int32
          description: Width and height of the identity tensor to create.
        typeParameters:
        - id: T
          description: type contained within the Tensor.  Typically a value type such as int, double, float, etc.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: a <code data-dev-comment-type="paramref" class="paramref">size</code> by <code data-dev-comment-type="paramref" class="paramref">size</code> with 1s along the diagonal and zeros elsewhere.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity``1(System.Int32,System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity``1(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: CreateIdentity<T>(Int32, Boolean)
        VB: CreateIdentity(Of T)(Int32, Boolean)
      nameWithType:
        CSharp: Tensor.CreateIdentity<T>(Int32, Boolean)
        VB: Tensor.CreateIdentity(Of T)(Int32, Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity<T>(System.Int32, System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity(Of T)(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateIdentity
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 388
      summary: "\nCreates an identity tensor of the specified size and layout (row vs column major).  An identity tensor is a two dimensional tensor with 1s in the diagonal.\n"
      example: []
      syntax:
        content:
          CSharp: public static Tensor<T> CreateIdentity<T>(int size, bool columMajor)
          VB: Public Shared Function CreateIdentity(Of T)(size As Integer, columMajor As Boolean) As Tensor(Of T)
        parameters:
        - id: size
          type: System.Int32
          description: Width and height of the identity tensor to create.
        - id: columMajor
          type: System.Boolean
          description: '>False to indicate that the first dimension is most minor (closest) and the last dimension is most major (farthest): row-major.  True to indicate that the last dimension is most minor (closest together) and the first dimension is most major (farthest apart): column-major.'
        typeParameters:
        - id: T
          description: type contained within the Tensor.  Typically a value type such as int, double, float, etc.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: a <code data-dev-comment-type="paramref" class="paramref">size</code> by <code data-dev-comment-type="paramref" class="paramref">size</code> with 1s along the diagonal and zeros elsewhere.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity``1(System.Int32,System.Boolean,``0)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity``1(System.Int32,System.Boolean,``0)
      language: CSharp
      name:
        CSharp: CreateIdentity<T>(Int32, Boolean, T)
        VB: CreateIdentity(Of T)(Int32, Boolean, T)
      nameWithType:
        CSharp: Tensor.CreateIdentity<T>(Int32, Boolean, T)
        VB: Tensor.CreateIdentity(Of T)(Int32, Boolean, T)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity<T>(System.Int32, System.Boolean, T)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity(Of T)(System.Int32, System.Boolean, T)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateIdentity
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 401
      summary: "\nCreates an identity tensor of the specified size and layout (row vs column major) using the specified one value.  An identity tensor is a two dimensional tensor with 1s in the diagonal.  This may be used in case T is a type that doesn&apos;t have a known 1 value.\n"
      example: []
      syntax:
        content:
          CSharp: public static Tensor<T> CreateIdentity<T>(int size, bool columMajor, T oneValue)
          VB: Public Shared Function CreateIdentity(Of T)(size As Integer, columMajor As Boolean, oneValue As T) As Tensor(Of T)
        parameters:
        - id: size
          type: System.Int32
          description: Width and height of the identity tensor to create.
        - id: columMajor
          type: System.Boolean
          description: '>False to indicate that the first dimension is most minor (closest) and the last dimension is most major (farthest): row-major.  True to indicate that the last dimension is most minor (closest together) and the first dimension is most major (farthest apart): column-major.'
        - id: oneValue
          type: '{T}'
          description: Value of <code data-dev-comment-type="typeparamref" class="typeparamref">T</code> that is used along the diagonal.
        typeParameters:
        - id: T
          description: type contained within the Tensor.  Typically a value type such as int, double, float, etc.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: a <code data-dev-comment-type="paramref" class="paramref">size</code> by <code data-dev-comment-type="paramref" class="paramref">size</code> with 1s along the diagonal and zeros elsewhere.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal``1(Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal``1(Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
      language: CSharp
      name:
        CSharp: CreateFromDiagonal<T>(Tensor<T>)
        VB: CreateFromDiagonal(Of T)(Tensor(Of T))
      nameWithType:
        CSharp: Tensor.CreateFromDiagonal<T>(Tensor<T>)
        VB: Tensor.CreateFromDiagonal(Of T)(Tensor(Of T))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal<T>(Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal(Of T)(Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateFromDiagonal
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 425
      summary: "\nCreates a n+1-rank tensor using the specified n-rank diagonal.  Values not on the diagonal will be filled with zeros.\n"
      example: []
      syntax:
        content:
          CSharp: public static Tensor<T> CreateFromDiagonal<T>(Tensor<T> diagonal)
          VB: Public Shared Function CreateFromDiagonal(Of T)(diagonal As Tensor(Of T)) As Tensor(Of T)
        parameters:
        - id: diagonal
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: Tensor representing the diagonal to build the new tensor from.
        typeParameters:
        - id: T
          description: type contained within the Tensor.  Typically a value type such as int, double, float, etc.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: A new tensor of the same layout and order as <code data-dev-comment-type="paramref" class="paramref">diagonal</code> of one higher rank, with the values of <code data-dev-comment-type="paramref" class="paramref">diagonal</code> along the diagonal and zeros elsewhere.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal``1(Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0},System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal``1(Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0},System.Int32)
      language: CSharp
      name:
        CSharp: CreateFromDiagonal<T>(Tensor<T>, Int32)
        VB: CreateFromDiagonal(Of T)(Tensor(Of T), Int32)
      nameWithType:
        CSharp: Tensor.CreateFromDiagonal<T>(Tensor<T>, Int32)
        VB: Tensor.CreateFromDiagonal(Of T)(Tensor(Of T), Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal<T>(Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>, System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal(Of T)(Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T), System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CreateFromDiagonal
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 441
      summary: "\nCreates a n+1-dimension tensor using the specified n-dimension diagonal at the specified offset \nfrom the center.  Values not on the diagonal will be filled with zeros.\n"
      example: []
      syntax:
        content:
          CSharp: public static Tensor<T> CreateFromDiagonal<T>(Tensor<T> diagonal, int offset)
          VB: Public Shared Function CreateFromDiagonal(Of T)(diagonal As Tensor(Of T), offset As Integer) As Tensor(Of T)
        parameters:
        - id: diagonal
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: Tensor representing the diagonal to build the new tensor from.
        - id: offset
          type: System.Int32
          description: "Offset of diagonal to set in returned tensor.  0 for the main diagonal, \nless than zero for diagonals below, greater than zero from diagonals above."
        typeParameters:
        - id: T
          description: "\ntype contained within the Tensor. Typically a value type such as int, double, float, etc."
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
          description: "A new tensor of the same layout and order as <code data-dev-comment-type=\"paramref\" class=\"paramref\">diagonal</code> of one higher rank, \nwith the values of <code data-dev-comment-type=\"paramref\" class=\"paramref\">diagonal</code> along the specified diagonal and zeros elsewhere."
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
    language: CSharp
    name:
      CSharp: Tensor<T>
      VB: Tensor(Of T)
    nameWithType:
      CSharp: Tensor<T>
      VB: Tensor(Of T)
    qualifiedName:
      CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>
      VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T)
    type: Class
    assemblies:
    - Microsoft.ML.OnnxRuntime
    namespace: Microsoft.ML.OnnxRuntime.Tensors
    source:
      remote:
        path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        branch: csharp-docs
        repo: https://github.com/cassiebreviu/onnxruntime
      id: Tensor
      path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      startLine: 493
    summary: "\nRepresents a multi-dimensional collection of objects of type T that can be accessed by indices.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class Tensor<T> : TensorBase'
        VB: >-
          Public MustInherit Class Tensor(Of T)

              Inherits TensorBase
      typeParameters:
      - id: T
        description: type contained within the Tensor.  Typically a value type such as int, double, float, etc.
    inheritance:
    - System.Object
    - Microsoft.ML.OnnxRuntime.Tensors.TensorBase
    implements:
    - IList
    - IList{{T}}
    - IReadOnlyList{{T}}
    - IStructuralComparable
    - IStructuralEquatable
    inheritedMembers:
    - Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo(Type)
    - Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType)
    - Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: Tensor(Int32)
        VB: Tensor(Int32)
      nameWithType:
        CSharp: Tensor<T>.Tensor(Int32)
        VB: Tensor(Of T).Tensor(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Tensor(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Tensor(System.Int32)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 645
      summary: "\nInitialize a 1-dimensional tensor of the specified length\n"
      example: []
      syntax:
        content:
          CSharp: protected Tensor(int length)
          VB: Protected Sub New(length As Integer)
        parameters:
        - id: length
          type: System.Int32
          description: Size of the 1-dimensional tensor
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor(ReadOnlySpan{System.Int32},System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor(ReadOnlySpan{System.Int32},System.Boolean)
      language: CSharp
      name:
        CSharp: Tensor(ReadOnlySpan<Int32>, Boolean)
        VB: Tensor(ReadOnlySpan(Of Int32), Boolean)
      nameWithType:
        CSharp: Tensor<T>.Tensor(ReadOnlySpan<Int32>, Boolean)
        VB: Tensor(Of T).Tensor(ReadOnlySpan(Of Int32), Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Tensor(ReadOnlySpan<System.Int32>, System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Tensor(ReadOnlySpan(Of System.Int32), System.Boolean)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 658
      summary: "\nInitialize an n-dimensional tensor with the specified dimensions and layout.  ReverseStride=true gives a stride of 1-element width to the first dimension (0).  ReverseStride=false gives a stride of 1-element width to the last dimension (n-1).\n"
      example: []
      syntax:
        content:
          CSharp: protected Tensor(ReadOnlySpan<int> dimensions, bool reverseStride)
          VB: Protected Sub New(dimensions As ReadOnlySpan(Of Integer), reverseStride As Boolean)
        parameters:
        - id: dimensions
          type: ReadOnlySpan{System.Int32}
          description: An span of integers that represent the size of each dimension of the Tensor to create.
        - id: reverseStride
          type: System.Boolean
          description: 'False (default) to indicate that the first dimension is most major (farthest apart) and the last dimension is most minor (closest together): akin to row-major in a rank-2 tensor.  True to indicate that the last dimension is most major (farthest apart) and the first dimension is most minor (closest together): akin to column-major in a rank-2 tensor.'
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor(Array,System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor(Array,System.Boolean)
      language: CSharp
      name:
        CSharp: Tensor(Array, Boolean)
        VB: Tensor(Array, Boolean)
      nameWithType:
        CSharp: Tensor<T>.Tensor(Array, Boolean)
        VB: Tensor(Of T).Tensor(Array, Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Tensor(Array, System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Tensor(Array, System.Boolean)
      type: Constructor
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: .ctor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 694
      summary: "\nInitializes tensor with same dimensions as array, content of array is ignored.  \nReverseStride=true gives a stride of 1-element width to the first dimension (0).  \nReverseStride=false gives a stride of 1-element width to the last dimension (n-1).\n"
      example: []
      syntax:
        content:
          CSharp: protected Tensor(Array fromArray, bool reverseStride)
          VB: Protected Sub New(fromArray As Array, reverseStride As Boolean)
        parameters:
        - id: fromArray
          type: Array
          description: Array from which to derive dimensions.
        - id: reverseStride
          type: System.Boolean
          description: "\nFalse (default) to indicate that the first dimension is most major (farthest apart) and the \nlast dimension is most minor (closest together): akin to row-major in a rank-2 tensor.  \nTrue to indicate that the last dimension is most major (farthest apart) and the first dimension \nis most minor (closest together): akin to column-major in a rank-2 tensor."
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length
      language: CSharp
      name:
        CSharp: Length
        VB: Length
      nameWithType:
        CSharp: Tensor<T>.Length
        VB: Tensor(Of T).Length
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Length
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Length
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Length
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 718
      summary: "\nTotal length of the Tensor.\n"
      example: []
      syntax:
        content:
          CSharp: public long Length { get; }
          VB: Public ReadOnly Property Length As Long
        parameters: []
        return:
          type: System.Int64
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank
      language: CSharp
      name:
        CSharp: Rank
        VB: Rank
      nameWithType:
        CSharp: Tensor<T>.Rank
        VB: Tensor(Of T).Rank
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Rank
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Rank
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Rank
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 723
      summary: "\nRank of the tensor: number of dimensions.\n"
      example: []
      syntax:
        content:
          CSharp: public int Rank { get; }
          VB: Public ReadOnly Property Rank As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride
      language: CSharp
      name:
        CSharp: IsReversedStride
        VB: IsReversedStride
      nameWithType:
        CSharp: Tensor<T>.IsReversedStride
        VB: Tensor(Of T).IsReversedStride
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsReversedStride
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsReversedStride
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsReversedStride
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 728
      summary: "\nTrue if strides are reversed (AKA Column-major)\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsReversedStride { get; }
          VB: Public ReadOnly Property IsReversedStride As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions
      language: CSharp
      name:
        CSharp: Dimensions
        VB: Dimensions
      nameWithType:
        CSharp: Tensor<T>.Dimensions
        VB: Tensor(Of T).Dimensions
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Dimensions
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Dimensions
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Dimensions
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 733
      summary: "\nReturns a readonly view of the dimensions of this tensor.\n"
      example: []
      syntax:
        content:
          CSharp: public ReadOnlySpan<int> Dimensions { get; }
          VB: Public ReadOnly Property Dimensions As ReadOnlySpan(Of Integer)
        parameters: []
        return:
          type: ReadOnlySpan{System.Int32}
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides
      language: CSharp
      name:
        CSharp: Strides
        VB: Strides
      nameWithType:
        CSharp: Tensor<T>.Strides
        VB: Tensor(Of T).Strides
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Strides
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Strides
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Strides
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 738
      summary: "\nReturns a readonly view of the strides of this tensor.\n"
      example: []
      syntax:
        content:
          CSharp: public ReadOnlySpan<int> Strides { get; }
          VB: Public ReadOnly Property Strides As ReadOnlySpan(Of Integer)
        parameters: []
        return:
          type: ReadOnlySpan{System.Int32}
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill(`0)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill(`0)
      language: CSharp
      name:
        CSharp: Fill(T)
        VB: Fill(T)
      nameWithType:
        CSharp: Tensor<T>.Fill(T)
        VB: Tensor(Of T).Fill(T)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Fill(T)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Fill(T)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Fill
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 744
      summary: "\nSets all elements in Tensor to <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Fill(T value)
          VB: Public Overridable Sub Fill(value As T)
        parameters:
        - id: value
          type: '{T}'
          description: Value to fill
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: Tensor<T>.Clone()
        VB: Tensor(Of T).Clone()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Clone()
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Clone()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Clone
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 756
      summary: "\nCreates a shallow copy of this tensor, with new backing storage.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract Tensor<T> Clone()
          VB: Public MustOverride Function Clone As Tensor(Of T)
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: A shallow copy of this tensor.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty
      language: CSharp
      name:
        CSharp: CloneEmpty()
        VB: CloneEmpty()
      nameWithType:
        CSharp: Tensor<T>.CloneEmpty()
        VB: Tensor(Of T).CloneEmpty()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty()
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CloneEmpty
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 762
      summary: "\nCreates a new Tensor with the same layout and dimensions as this tensor with elements initialized to their default value.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual Tensor<T> CloneEmpty()
          VB: Public Overridable Function CloneEmpty As Tensor(Of T)
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: A new Tensor with the same layout and dimensions as this tensor with elements initialized to their default value.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty(ReadOnlySpan{System.Int32})
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty(ReadOnlySpan{System.Int32})
      language: CSharp
      name:
        CSharp: CloneEmpty(ReadOnlySpan<Int32>)
        VB: CloneEmpty(ReadOnlySpan(Of Int32))
      nameWithType:
        CSharp: Tensor<T>.CloneEmpty(ReadOnlySpan<Int32>)
        VB: Tensor(Of T).CloneEmpty(ReadOnlySpan(Of Int32))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty(ReadOnlySpan<System.Int32>)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty(ReadOnlySpan(Of System.Int32))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CloneEmpty
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 772
      summary: "\nCreates a new Tensor with the specified dimensions and the same layout as this tensor with elements initialized to their default value.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual Tensor<T> CloneEmpty(ReadOnlySpan<int> dimensions)
          VB: Public Overridable Function CloneEmpty(dimensions As ReadOnlySpan(Of Integer)) As Tensor(Of T)
        parameters:
        - id: dimensions
          type: ReadOnlySpan{System.Int32}
          description: An span of integers that represent the size of each dimension of the DenseTensor to create.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: A new Tensor with the same layout as this tensor and specified <code data-dev-comment-type="paramref" class="paramref">dimensions</code> with elements initialized to their default value.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1
      language: CSharp
      name:
        CSharp: CloneEmpty<TResult>()
        VB: CloneEmpty(Of TResult)()
      nameWithType:
        CSharp: Tensor<T>.CloneEmpty<TResult>()
        VB: Tensor(Of T).CloneEmpty(Of TResult)()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty<TResult>()
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty(Of TResult)()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CloneEmpty
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 782
      summary: "\nCreates a new Tensor of a different type with the same layout and size as this tensor with elements initialized to their default value.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual Tensor<TResult> CloneEmpty<TResult>()
          VB: Public Overridable Function CloneEmpty(Of TResult) As Tensor(Of TResult)
        typeParameters:
        - id: TResult
          description: Type contained within the new Tensor.  Typically a value type such as int, double, float, etc.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{TResult}}
          description: A new Tensor with the same layout and dimensions as this tensor with elements of <code data-dev-comment-type="typeparamref" class="typeparamref">TResult</code> type initialized to their default value.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1(ReadOnlySpan{System.Int32})
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1(ReadOnlySpan{System.Int32})
      language: CSharp
      name:
        CSharp: CloneEmpty<TResult>(ReadOnlySpan<Int32>)
        VB: CloneEmpty(Of TResult)(ReadOnlySpan(Of Int32))
      nameWithType:
        CSharp: Tensor<T>.CloneEmpty<TResult>(ReadOnlySpan<Int32>)
        VB: Tensor(Of T).CloneEmpty(Of TResult)(ReadOnlySpan(Of Int32))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty<TResult>(ReadOnlySpan<System.Int32>)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty(Of TResult)(ReadOnlySpan(Of System.Int32))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CloneEmpty
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 793
      summary: "\nCreates a new Tensor of a different type with the specified dimensions and the same layout as this tensor with elements initialized to their default value.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract Tensor<TResult> CloneEmpty<TResult>(ReadOnlySpan<int> dimensions)
          VB: Public MustOverride Function CloneEmpty(Of TResult)(dimensions As ReadOnlySpan(Of Integer)) As Tensor(Of TResult)
        parameters:
        - id: dimensions
          type: ReadOnlySpan{System.Int32}
          description: An span of integers that represent the size of each dimension of the DenseTensor to create.
        typeParameters:
        - id: TResult
          description: Type contained within the new Tensor.  Typically a value type such as int, double, float, etc.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{TResult}}
          description: A new Tensor with the same layout as this tensor of specified <code data-dev-comment-type="paramref" class="paramref">dimensions</code> with elements of <code data-dev-comment-type="typeparamref" class="typeparamref">TResult</code> type initialized to their default value.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal
      language: CSharp
      name:
        CSharp: GetDiagonal()
        VB: GetDiagonal()
      nameWithType:
        CSharp: Tensor<T>.GetDiagonal()
        VB: Tensor(Of T).GetDiagonal()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetDiagonal()
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetDiagonal()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetDiagonal
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 799
      summary: "\nGets the n-1 dimension diagonal from the n dimension tensor.\n"
      example: []
      syntax:
        content:
          CSharp: public Tensor<T> GetDiagonal()
          VB: Public Function GetDiagonal As Tensor(Of T)
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: An n-1 dimension tensor with the values from the main diagonal of this tensor.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal(System.Int32)
      language: CSharp
      name:
        CSharp: GetDiagonal(Int32)
        VB: GetDiagonal(Int32)
      nameWithType:
        CSharp: Tensor<T>.GetDiagonal(Int32)
        VB: Tensor(Of T).GetDiagonal(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetDiagonal(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetDiagonal(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetDiagonal
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 809
      summary: "\nGets the n-1 dimension diagonal from the n dimension tensor at the specified offset from center.\n"
      example: []
      syntax:
        content:
          CSharp: public Tensor<T> GetDiagonal(int offset)
          VB: Public Function GetDiagonal(offset As Integer) As Tensor(Of T)
        parameters:
        - id: offset
          type: System.Int32
          description: Offset of diagonal to set in returned tensor.  0 for the main diagonal, less than zero for diagonals below, greater than zero from diagonals above.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: An n-1 dimension tensor with the values from the specified diagonal of this tensor.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle
      language: CSharp
      name:
        CSharp: GetTriangle()
        VB: GetTriangle()
      nameWithType:
        CSharp: Tensor<T>.GetTriangle()
        VB: Tensor(Of T).GetTriangle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetTriangle()
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetTriangle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTriangle
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 890
      summary: "\nGets a tensor representing the elements below and including the diagonal, with the rest of the elements zero-ed.\n"
      example: []
      syntax:
        content:
          CSharp: public Tensor<T> GetTriangle()
          VB: Public Function GetTriangle As Tensor(Of T)
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: A tensor with the values from this tensor at and below the main diagonal and zeros elsewhere.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32)
      language: CSharp
      name:
        CSharp: GetTriangle(Int32)
        VB: GetTriangle(Int32)
      nameWithType:
        CSharp: Tensor<T>.GetTriangle(Int32)
        VB: Tensor(Of T).GetTriangle(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetTriangle(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetTriangle(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTriangle
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 900
      summary: "\nGets a tensor representing the elements below and including the specified diagonal, with the rest of the elements zero-ed.\n"
      example: []
      syntax:
        content:
          CSharp: public Tensor<T> GetTriangle(int offset)
          VB: Public Function GetTriangle(offset As Integer) As Tensor(Of T)
        parameters:
        - id: offset
          type: System.Int32
          description: Offset of diagonal to set in returned tensor.  0 for the main diagonal, less than zero for diagonals below, greater than zero from diagonals above.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: A tensor with the values from this tensor at and below the specified diagonal and zeros elsewhere.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle
      language: CSharp
      name:
        CSharp: GetUpperTriangle()
        VB: GetUpperTriangle()
      nameWithType:
        CSharp: Tensor<T>.GetUpperTriangle()
        VB: Tensor(Of T).GetUpperTriangle()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetUpperTriangle()
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetUpperTriangle()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetUpperTriangle
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 909
      summary: "\nGets a tensor representing the elements above and including the diagonal, with the rest of the elements zero-ed.\n"
      example: []
      syntax:
        content:
          CSharp: public Tensor<T> GetUpperTriangle()
          VB: Public Function GetUpperTriangle As Tensor(Of T)
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: A tensor with the values from this tensor at and above the main diagonal and zeros elsewhere.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle(System.Int32)
      language: CSharp
      name:
        CSharp: GetUpperTriangle(Int32)
        VB: GetUpperTriangle(Int32)
      nameWithType:
        CSharp: Tensor<T>.GetUpperTriangle(Int32)
        VB: Tensor(Of T).GetUpperTriangle(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetUpperTriangle(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetUpperTriangle(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetUpperTriangle
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 919
      summary: "\nGets a tensor representing the elements above and including the specified diagonal, with the rest of the elements zero-ed.\n"
      example: []
      syntax:
        content:
          CSharp: public Tensor<T> GetUpperTriangle(int offset)
          VB: Public Function GetUpperTriangle(offset As Integer) As Tensor(Of T)
        parameters:
        - id: offset
          type: System.Int32
          description: Offset of diagonal to set in returned tensor.  0 for the main diagonal, less than zero for diagonals below, greater than zero from diagonals above.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: A tensor with the values from this tensor at and above the specified diagonal and zeros elsewhere.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32,System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: GetTriangle(Int32, Boolean)
        VB: GetTriangle(Int32, Boolean)
      nameWithType:
        CSharp: Tensor<T>.GetTriangle(Int32, Boolean)
        VB: Tensor(Of T).GetTriangle(Int32, Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetTriangle(System.Int32, System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetTriangle(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetTriangle
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 930
      summary: "\nImplementation method for GetTriangle, GetLowerTriangle, GetUpperTriangle\n"
      example: []
      syntax:
        content:
          CSharp: public Tensor<T> GetTriangle(int offset, bool upper)
          VB: Public Function GetTriangle(offset As Integer, upper As Boolean) As Tensor(Of T)
        parameters:
        - id: offset
          type: System.Int32
          description: Offset of diagonal to set in returned tensor.
        - id: upper
          type: System.Boolean
          description: true for upper triangular and false otherwise
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: ''
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape(ReadOnlySpan{System.Int32})
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape(ReadOnlySpan{System.Int32})
      language: CSharp
      name:
        CSharp: Reshape(ReadOnlySpan<Int32>)
        VB: Reshape(ReadOnlySpan(Of Int32))
      nameWithType:
        CSharp: Tensor<T>.Reshape(ReadOnlySpan<Int32>)
        VB: Tensor(Of T).Reshape(ReadOnlySpan(Of Int32))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Reshape(ReadOnlySpan<System.Int32>)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Reshape(ReadOnlySpan(Of System.Int32))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Reshape
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1016
      summary: "\nReshapes the current tensor to new dimensions, using the same backing storage if possible.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract Tensor<T> Reshape(ReadOnlySpan<int> dimensions)
          VB: Public MustOverride Function Reshape(dimensions As ReadOnlySpan(Of Integer)) As Tensor(Of T)
        parameters:
        - id: dimensions
          type: ReadOnlySpan{System.Int32}
          description: An span of integers that represent the size of each dimension of the Tensor to create.
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: A new tensor that reinterprets this tensor with different dimensions.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(System.Int32[])
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(System.Int32[])
      language: CSharp
      name:
        CSharp: Item[Int32[]]
        VB: Item(Int32())
      nameWithType:
        CSharp: Tensor<T>.Item[Int32[]]
        VB: Tensor(Of T).Item(Int32())
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Item[System.Int32[]]
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Item(System.Int32())
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: this[]
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1023
      summary: "\nObtains the value at the specified indices\n"
      example: []
      syntax:
        content:
          CSharp: public virtual T this[params int[] indices] { get; set; }
          VB: Public Overridable Property Item(ParamArray indices As Integer()) As T
        parameters:
        - id: indices
          type: System.Int32[]
          description: A one-dimensional array of integers that represent the indices specifying the position of the element to get.
        return:
          type: '{T}'
          description: The value at the specified position in this Tensor.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item*
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(ReadOnlySpan{System.Int32})
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(ReadOnlySpan{System.Int32})
      language: CSharp
      name:
        CSharp: Item[ReadOnlySpan<Int32>]
        VB: Item(ReadOnlySpan(Of Int32))
      nameWithType:
        CSharp: Tensor<T>.Item[ReadOnlySpan<Int32>]
        VB: Tensor(Of T).Item(ReadOnlySpan(Of Int32))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Item[ReadOnlySpan<System.Int32>]
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Item(ReadOnlySpan(Of System.Int32))
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: this[]
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1051
      summary: "\nObtains the value at the specified indices\n"
      example: []
      syntax:
        content:
          CSharp: public virtual T this[ReadOnlySpan<int> indices] { get; set; }
          VB: Public Overridable Property Item(indices As ReadOnlySpan(Of Integer)) As T
        parameters:
        - id: indices
          type: ReadOnlySpan{System.Int32}
          description: A span integers that represent the indices specifying the position of the element to get.
        return:
          type: '{T}'
          description: The value at the specified position in this Tensor.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item*
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue(System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue(System.Int32)
      language: CSharp
      name:
        CSharp: GetValue(Int32)
        VB: GetValue(Int32)
      nameWithType:
        CSharp: Tensor<T>.GetValue(Int32)
        VB: Tensor(Of T).GetValue(Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetValue(System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetValue(System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetValue
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1069
      summary: "\nGets the value at the specied index, where index is a linearized version of n-dimension indices using strides.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract T GetValue(int index)
          VB: Public MustOverride Function GetValue(index As Integer) As T
        parameters:
        - id: index
          type: System.Int32
          description: An integer index computed as a dot-product of indices.
        return:
          type: '{T}'
          description: The value at the specified position in this Tensor.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue(System.Int32,`0)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue(System.Int32,`0)
      language: CSharp
      name:
        CSharp: SetValue(Int32, T)
        VB: SetValue(Int32, T)
      nameWithType:
        CSharp: Tensor<T>.SetValue(Int32, T)
        VB: Tensor(Of T).SetValue(Int32, T)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.SetValue(System.Int32, T)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).SetValue(System.Int32, T)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: SetValue
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1076
      summary: "\nSets the value at the specied index, where index is a linearized version of n-dimension indices using strides.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void SetValue(int index, T value)
          VB: Public MustOverride Sub SetValue(index As Integer, value As T)
        parameters:
        - id: index
          type: System.Int32
          description: An integer index computed as a dot-product of indices.
        - id: value
          type: '{T}'
          description: The new value to set at the specified position in this Tensor.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
      language: CSharp
      name:
        CSharp: Compare(Tensor<T>, Tensor<T>)
        VB: Compare(Tensor(Of T), Tensor(Of T))
      nameWithType:
        CSharp: Tensor<T>.Compare(Tensor<T>, Tensor<T>)
        VB: Tensor(Of T).Compare(Tensor(Of T), Tensor(Of T))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>, Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T), Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Compare
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1086
      summary: "\nPerforms a value comparison of the content and shape of two tensors.  Two tensors are equal if they have the same shape and same value at every set of indices.  If not equal a tensor is greater or less than another tensor based on the first non-equal element when enumerating in linear order.\n"
      example: []
      syntax:
        content:
          CSharp: public static int Compare(Tensor<T> left, Tensor<T> right)
          VB: Public Shared Function Compare(left As Tensor(Of T), right As Tensor(Of T)) As Integer
        parameters:
        - id: left
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: ''
        - id: right
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: ''
        return:
          type: System.Int32
          description: ''
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
      language: CSharp
      name:
        CSharp: Equals(Tensor<T>, Tensor<T>)
        VB: Equals(Tensor(Of T), Tensor(Of T))
      nameWithType:
        CSharp: Tensor<T>.Equals(Tensor<T>, Tensor<T>)
        VB: Tensor(Of T).Equals(Tensor(Of T), Tensor(Of T))
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>, Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T), Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T))
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Equals
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1097
      summary: "\nPerforms a value equality comparison of the content of two tensors. Two tensors are equal if they have the same shape and same value at every set of indices.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool Equals(Tensor<T> left, Tensor<T> right)
          VB: Public Shared Function Equals(left As Tensor(Of T), right As Tensor(Of T)) As Boolean
        parameters:
        - id: left
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: ''
        - id: right
          type: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
          description: ''
        return:
          type: System.Boolean
          description: ''
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize
      language: CSharp
      name:
        CSharp: IsFixedSize
        VB: IsFixedSize
      nameWithType:
        CSharp: Tensor<T>.IsFixedSize
        VB: Tensor(Of T).IsFixedSize
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsFixedSize
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsFixedSize
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsFixedSize
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1170
      summary: "\nAlways fixed size Tensor\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsFixedSize { get; }
          VB: Public ReadOnly Property IsFixedSize As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: always true
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly
      commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly
      language: CSharp
      name:
        CSharp: IsReadOnly
        VB: IsReadOnly
      nameWithType:
        CSharp: Tensor<T>.IsReadOnly
        VB: Tensor(Of T).IsReadOnly
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsReadOnly
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsReadOnly
      type: Property
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IsReadOnly
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1176
      summary: "\nTensor is not readonly\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsReadOnly { get; }
          VB: Public ReadOnly Property IsReadOnly As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: always false
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains(`0)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains(`0)
      language: CSharp
      name:
        CSharp: Contains(T)
        VB: Contains(T)
      nameWithType:
        CSharp: Tensor<T>.Contains(T)
        VB: Tensor(Of T).Contains(T)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Contains(T)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Contains(T)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: Contains
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1259
      summary: "\nDetermines whether an element is in the Tensor&lt;T>.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual bool Contains(T item)
          VB: Protected Overridable Function Contains(item As T) As Boolean
        parameters:
        - id: item
          type: '{T}'
          description: "\nThe object to locate in the Tensor&lt;T>. The value can be null for reference types.\n"
        return:
          type: System.Boolean
          description: "\ntrue if item is found in the Tensor&lt;T>; otherwise, false.\n"
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo(`0[],System.Int32)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo(`0[],System.Int32)
      language: CSharp
      name:
        CSharp: CopyTo(T[], Int32)
        VB: CopyTo(T(), Int32)
      nameWithType:
        CSharp: Tensor<T>.CopyTo(T[], Int32)
        VB: Tensor(Of T).CopyTo(T(), Int32)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CopyTo(T[], System.Int32)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CopyTo(T(), System.Int32)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: CopyTo
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1278
      summary: "\nCopies the elements of the Tensor&lt;T> to an Array, starting at a particular Array index.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void CopyTo(T[] array, int arrayIndex)
          VB: Protected Overridable Sub CopyTo(array As T(), arrayIndex As Integer)
        parameters:
        - id: array
          type: '{T}[]'
          description: "\nThe one-dimensional Array that is the destination of the elements copied from Tensor&lt;T>. The Array must have zero-based indexing.\n"
        - id: arrayIndex
          type: System.Int32
          description: "\nThe zero-based index in array at which copying begins.\n"
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf(`0)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf(`0)
      language: CSharp
      name:
        CSharp: IndexOf(T)
        VB: IndexOf(T)
      nameWithType:
        CSharp: Tensor<T>.IndexOf(T)
        VB: Tensor(Of T).IndexOf(T)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IndexOf(T)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IndexOf(T)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: IndexOf
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1324
      summary: "\nDetermines the index of a specific item in the Tensor&lt;T>.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual int IndexOf(T item)
          VB: Protected Overridable Function IndexOf(item As T) As Integer
        parameters:
        - id: item
          type: '{T}'
          description: The object to locate in the Tensor&lt;T>.
        return:
          type: System.Int32
          description: The index of item if found in the tensor; otherwise, -1.
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor
      language: CSharp
      name:
        CSharp: ToDenseTensor()
        VB: ToDenseTensor()
      nameWithType:
        CSharp: Tensor<T>.ToDenseTensor()
        VB: Tensor(Of T).ToDenseTensor()
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.ToDenseTensor()
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).ToDenseTensor()
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: ToDenseTensor
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1570
      summary: "\nCreates a copy of this tensor as a DenseTensor&lt;T>.  If this tensor is already a DenseTensor&lt;T> calling this method is equivalent to calling Clone().\n"
      example: []
      syntax:
        content:
          CSharp: public virtual DenseTensor<T> ToDenseTensor()
          VB: Public Overridable Function ToDenseTensor As DenseTensor(Of T)
        return:
          type: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor{{T}}
          description: ''
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString(System.Boolean)
      commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString(System.Boolean)
      language: CSharp
      name:
        CSharp: GetArrayString(Boolean)
        VB: GetArrayString(Boolean)
      nameWithType:
        CSharp: Tensor<T>.GetArrayString(Boolean)
        VB: Tensor(Of T).GetArrayString(Boolean)
      qualifiedName:
        CSharp: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetArrayString(System.Boolean)
        VB: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetArrayString(System.Boolean)
      type: Method
      assemblies:
      - Microsoft.ML.OnnxRuntime
      namespace: Microsoft.ML.OnnxRuntime.Tensors
      source:
        remote:
          path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
          branch: csharp-docs
          repo: https://github.com/cassiebreviu/onnxruntime
        id: GetArrayString
        path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
        startLine: 1587
      summary: "\nGet a string representation of Tensor\n"
      example: []
      syntax:
        content:
          CSharp: public string GetArrayString(bool includeWhitespace = true)
          VB: Public Function GetArrayString(includeWhitespace As Boolean = True) As String
        parameters:
        - id: includeWhitespace
          type: System.Boolean
          description: ''
        return:
          type: System.String
          description: ''
      overload: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1
        name: IDisposableReadOnlyCollection
        nameWithType: IDisposableReadOnlyCollection
        qualifiedName: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1
        name: IDisposableReadOnlyCollection
        nameWithType: IDisposableReadOnlyCollection
        qualifiedName: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1
  Microsoft.ML.OnnxRuntime:
    name:
      CSharp:
      - name: Microsoft.ML.OnnxRuntime
        nameWithType: Microsoft.ML.OnnxRuntime
        qualifiedName: Microsoft.ML.OnnxRuntime
      VB:
      - name: Microsoft.ML.OnnxRuntime
        nameWithType: Microsoft.ML.OnnxRuntime
        qualifiedName: Microsoft.ML.OnnxRuntime
    isDefinition: true
    commentId: N:Microsoft.ML.OnnxRuntime
  Microsoft.ML.OnnxRuntime.NamedOnnxValue:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue
        name: NamedOnnxValue
        nameWithType: NamedOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue
        name: NamedOnnxValue
        nameWithType: NamedOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.NamedOnnxValue
  Microsoft.ML.OnnxRuntime.NamedOnnxValue._value:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue._value
        name: _value
        nameWithType: NamedOnnxValue._value
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue._value
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue._value
        name: _value
        nameWithType: NamedOnnxValue._value
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue._value
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.NamedOnnxValue
    commentId: F:Microsoft.ML.OnnxRuntime.NamedOnnxValue._value
  Microsoft.ML.OnnxRuntime.NamedOnnxValue._name:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue._name
        name: _name
        nameWithType: NamedOnnxValue._name
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue._name
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue._name
        name: _name
        nameWithType: NamedOnnxValue._name
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue._name
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.NamedOnnxValue
    commentId: F:Microsoft.ML.OnnxRuntime.NamedOnnxValue._name
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
        name: CreateFromTensor<T>
        nameWithType: NamedOnnxValue.CreateFromTensor<T>
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
        name: CreateFromTensor(Of T)
        nameWithType: NamedOnnxValue.CreateFromTensor(Of T)
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
        name: CreateFromTensor<T>
        nameWithType: NamedOnnxValue.CreateFromTensor<T>
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
        name: CreateFromTensor(Of T)
        nameWithType: NamedOnnxValue.CreateFromTensor(Of T)
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
    parent: Microsoft.ML.OnnxRuntime.NamedOnnxValue
    commentId: M:Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor``1(System.String,Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0})
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
        name: Name
        nameWithType: NamedOnnxValue.Name
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
        name: Name
        nameWithType: NamedOnnxValue.Name
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.NamedOnnxValue
    commentId: P:Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
        name: Value
        nameWithType: NamedOnnxValue.Value
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
        name: Value
        nameWithType: NamedOnnxValue.Value
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.NamedOnnxValue
    commentId: P:Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor``1:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor``1
        name: AsTensor<T>
        nameWithType: NamedOnnxValue.AsTensor<T>
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor``1
        name: AsTensor(Of T)
        nameWithType: NamedOnnxValue.AsTensor(Of T)
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.NamedOnnxValue
    commentId: M:Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor``1
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable``1:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable``1
        name: AsEnumerable<T>
        nameWithType: NamedOnnxValue.AsEnumerable<T>
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable``1
        name: AsEnumerable(Of T)
        nameWithType: NamedOnnxValue.AsEnumerable(Of T)
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.NamedOnnxValue
    commentId: M:Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable``1
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary``2:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary``2
        name: AsDictionary<K, V>
        nameWithType: NamedOnnxValue.AsDictionary<K, V>
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary<K, V>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary``2
        name: AsDictionary(Of K, V)
        nameWithType: NamedOnnxValue.AsDictionary(Of K, V)
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary(Of K, V)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.NamedOnnxValue
    commentId: M:Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary``2
  IDisposable:
    name:
      CSharp:
      - id: IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: IDisposable
        isExternal: true
      VB:
      - id: IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: IDisposable
        isExternal: true
    isDefinition: true
    commentId: '!:IDisposable'
  Microsoft.ML.OnnxRuntime.OnnxValueType:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OnnxValueType
        name: OnnxValueType
        nameWithType: OnnxValueType
        qualifiedName: Microsoft.ML.OnnxRuntime.OnnxValueType
      VB:
      - id: Microsoft.ML.OnnxRuntime.OnnxValueType
        name: OnnxValueType
        nameWithType: OnnxValueType
        qualifiedName: Microsoft.ML.OnnxRuntime.OnnxValueType
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OnnxValueType
  Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ValueType*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ValueType*
        name: ValueType
        nameWithType: DisposableNamedOnnxValue.ValueType
        qualifiedName: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ValueType
      VB:
      - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ValueType*
        name: ValueType
        nameWithType: DisposableNamedOnnxValue.ValueType
        qualifiedName: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ValueType
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ValueType
  Microsoft.ML.OnnxRuntime.Tensors:
    name:
      CSharp:
      - name: Microsoft.ML.OnnxRuntime.Tensors
        nameWithType: Microsoft.ML.OnnxRuntime.Tensors
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors
      VB:
      - name: Microsoft.ML.OnnxRuntime.Tensors
        nameWithType: Microsoft.ML.OnnxRuntime.Tensors
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors
    isDefinition: true
    commentId: N:Microsoft.ML.OnnxRuntime.Tensors
  Microsoft.ML.OnnxRuntime.Tensors.TensorElementType:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
        name: TensorElementType
        nameWithType: TensorElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
        name: TensorElementType
        nameWithType: TensorElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.Tensors
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
  Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ElementType*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ElementType*
        name: ElementType
        nameWithType: DisposableNamedOnnxValue.ElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ElementType
      VB:
      - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ElementType*
        name: ElementType
        nameWithType: DisposableNamedOnnxValue.ElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ElementType
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.ElementType
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose*
        name: Dispose
        nameWithType: DisposableNamedOnnxValue.Dispose
        qualifiedName: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose
      VB:
      - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose*
        name: Dispose
        nameWithType: DisposableNamedOnnxValue.Dispose
        qualifiedName: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue.Dispose
  Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
        name: DisposableNamedOnnxValue
        nameWithType: DisposableNamedOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
      VB:
      - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
        name: DisposableNamedOnnxValue
        nameWithType: DisposableNamedOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
    isDefinition: true
    commentId: T:Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
  Microsoft.ML.OnnxRuntime.OnnxRuntimeException:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OnnxRuntimeException
        name: OnnxRuntimeException
        nameWithType: OnnxRuntimeException
        qualifiedName: Microsoft.ML.OnnxRuntime.OnnxRuntimeException
      VB:
      - id: Microsoft.ML.OnnxRuntime.OnnxRuntimeException
        name: OnnxRuntimeException
        nameWithType: OnnxRuntimeException
        qualifiedName: Microsoft.ML.OnnxRuntime.OnnxRuntimeException
    isDefinition: true
    commentId: T:Microsoft.ML.OnnxRuntime.OnnxRuntimeException
  Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
        name: FixedBufferOnnxValue
        nameWithType: FixedBufferOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
      VB:
      - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
        name: FixedBufferOnnxValue
        nameWithType: FixedBufferOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.Tensors
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
    parent: Microsoft.ML.OnnxRuntime.Tensors
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0}
  Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromTensor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromTensor*
        name: CreateFromTensor
        nameWithType: FixedBufferOnnxValue.CreateFromTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromTensor
      VB:
      - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromTensor*
        name: CreateFromTensor
        nameWithType: FixedBufferOnnxValue.CreateFromTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromTensor
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromTensor
  Microsoft.ML.OnnxRuntime.OrtMemoryInfo:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
        name: OrtMemoryInfo
        nameWithType: OrtMemoryInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
        name: OrtMemoryInfo
        nameWithType: OrtMemoryInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtMemoryInfo
  Memory`1:
    name:
      CSharp:
      - id: Memory`1
        name: Memory
        nameWithType: Memory
        qualifiedName: Memory
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Memory`1
        name: Memory
        nameWithType: Memory
        qualifiedName: Memory
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Memory{{T}}:
    name:
      CSharp:
      - id: Memory`1
        name: Memory
        nameWithType: Memory
        qualifiedName: Memory
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Memory`1
        name: Memory
        nameWithType: Memory
        qualifiedName: Memory
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Memory`1
    commentId: '!:Memory{``0}'
  System.Int64[]:
    name:
      CSharp:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Int64:
    name:
      CSharp:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      VB:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromMemory*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromMemory*
        name: CreateFromMemory
        nameWithType: FixedBufferOnnxValue.CreateFromMemory
        qualifiedName: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromMemory
      VB:
      - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromMemory*
        name: CreateFromMemory
        nameWithType: FixedBufferOnnxValue.CreateFromMemory
        qualifiedName: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromMemory
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.CreateFromMemory
  Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose*
        name: Dispose
        nameWithType: FixedBufferOnnxValue.Dispose
        qualifiedName: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose
      VB:
      - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose*
        name: Dispose
        nameWithType: FixedBufferOnnxValue.Dispose
        qualifiedName: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue.Dispose
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.InferenceSession.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor*
        name: InferenceSession
        nameWithType: InferenceSession.InferenceSession
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.#ctor*
        name: InferenceSession
        nameWithType: InferenceSession.InferenceSession
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.InferenceSession
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.#ctor
  Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
        name: PrePackedWeightsContainer
        nameWithType: PrePackedWeightsContainer
        qualifiedName: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
      VB:
      - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
        name: PrePackedWeightsContainer
        nameWithType: PrePackedWeightsContainer
        qualifiedName: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer
  Microsoft.ML.OnnxRuntime.SessionOptions:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions
        name: SessionOptions
        nameWithType: SessionOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions
        name: SessionOptions
        nameWithType: SessionOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.SessionOptions
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IReadOnlyDictionary`2:
    name:
      CSharp:
      - id: IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: IReadOnlyDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: IReadOnlyDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  IReadOnlyDictionary{System.String,Microsoft.ML.OnnxRuntime.NodeMetadata}:
    name:
      CSharp:
      - id: IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: IReadOnlyDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata
        name: NodeMetadata
        nameWithType: NodeMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: IReadOnlyDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata
        name: NodeMetadata
        nameWithType: NodeMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IReadOnlyDictionary`2
    commentId: '!:IReadOnlyDictionary{System.String,Microsoft.ML.OnnxRuntime.NodeMetadata}'
  Microsoft.ML.OnnxRuntime.InferenceSession.InputMetadata*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.InputMetadata*
        name: InputMetadata
        nameWithType: InferenceSession.InputMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.InputMetadata
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.InputMetadata*
        name: InputMetadata
        nameWithType: InferenceSession.InputMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.InputMetadata
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.InputMetadata
  Microsoft.ML.OnnxRuntime.InferenceSession.OutputMetadata*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.OutputMetadata*
        name: OutputMetadata
        nameWithType: InferenceSession.OutputMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.OutputMetadata
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.OutputMetadata*
        name: OutputMetadata
        nameWithType: InferenceSession.OutputMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.OutputMetadata
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.OutputMetadata
  Microsoft.ML.OnnxRuntime.InferenceSession.OverridableInitializerMetadata*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.OverridableInitializerMetadata*
        name: OverridableInitializerMetadata
        nameWithType: InferenceSession.OverridableInitializerMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.OverridableInitializerMetadata
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.OverridableInitializerMetadata*
        name: OverridableInitializerMetadata
        nameWithType: InferenceSession.OverridableInitializerMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.OverridableInitializerMetadata
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.OverridableInitializerMetadata
  Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue}:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1
        name: IDisposableReadOnlyCollection
        nameWithType: IDisposableReadOnlyCollection
        qualifiedName: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
        name: DisposableNamedOnnxValue
        nameWithType: DisposableNamedOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1
        name: IDisposableReadOnlyCollection
        nameWithType: IDisposableReadOnlyCollection
        qualifiedName: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
        name: DisposableNamedOnnxValue
        nameWithType: DisposableNamedOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.DisposableNamedOnnxValue}
  IReadOnlyCollection`1:
    name:
      CSharp:
      - id: IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: IReadOnlyCollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: IReadOnlyCollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}:
    name:
      CSharp:
      - id: IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: IReadOnlyCollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue
        name: NamedOnnxValue
        nameWithType: NamedOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: IReadOnlyCollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue
        name: NamedOnnxValue
        nameWithType: NamedOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IReadOnlyCollection`1
    commentId: '!:IReadOnlyCollection{Microsoft.ML.OnnxRuntime.NamedOnnxValue}'
  Microsoft.ML.OnnxRuntime.InferenceSession.Run*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
        name: Run
        nameWithType: InferenceSession.Run
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.Run
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.Run*
        name: Run
        nameWithType: InferenceSession.Run
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.Run
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.Run
  IReadOnlyCollection{System.String}:
    name:
      CSharp:
      - id: IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: IReadOnlyCollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: IReadOnlyCollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IReadOnlyCollection`1
    commentId: '!:IReadOnlyCollection{System.String}'
  Microsoft.ML.OnnxRuntime.RunOptions:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.RunOptions
        name: RunOptions
        nameWithType: RunOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.RunOptions
        name: RunOptions
        nameWithType: RunOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.RunOptions
  IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}:
    name:
      CSharp:
      - id: IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: IReadOnlyCollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
        name: FixedBufferOnnxValue
        nameWithType: FixedBufferOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: IReadOnlyCollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
        name: FixedBufferOnnxValue
        nameWithType: FixedBufferOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IReadOnlyCollection`1
    commentId: '!:IReadOnlyCollection{Microsoft.ML.OnnxRuntime.FixedBufferOnnxValue}'
  Microsoft.ML.OnnxRuntime.OrtIoBinding:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding
        name: OrtIoBinding
        nameWithType: OrtIoBinding
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding
        name: OrtIoBinding
        nameWithType: OrtIoBinding
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtIoBinding
  Microsoft.ML.OnnxRuntime.InferenceSession.CreateIoBinding*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.CreateIoBinding*
        name: CreateIoBinding
        nameWithType: InferenceSession.CreateIoBinding
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.CreateIoBinding
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.CreateIoBinding*
        name: CreateIoBinding
        nameWithType: InferenceSession.CreateIoBinding
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.CreateIoBinding
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.CreateIoBinding
  Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBinding*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBinding*
        name: RunWithBinding
        nameWithType: InferenceSession.RunWithBinding
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBinding
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBinding*
        name: RunWithBinding
        nameWithType: InferenceSession.RunWithBinding
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBinding
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBinding
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBindingAndNames*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBindingAndNames*
        name: RunWithBindingAndNames
        nameWithType: InferenceSession.RunWithBindingAndNames
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBindingAndNames
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBindingAndNames*
        name: RunWithBindingAndNames
        nameWithType: InferenceSession.RunWithBindingAndNames
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBindingAndNames
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.RunWithBindingAndNames
  Microsoft.ML.OnnxRuntime.InferenceSession.EndProfiling*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.EndProfiling*
        name: EndProfiling
        nameWithType: InferenceSession.EndProfiling
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.EndProfiling
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.EndProfiling*
        name: EndProfiling
        nameWithType: InferenceSession.EndProfiling
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.EndProfiling
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.EndProfiling
  Microsoft.ML.OnnxRuntime.ModelMetadata:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata
      VB:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.ModelMetadata
  Microsoft.ML.OnnxRuntime.InferenceSession.ModelMetadata*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.ModelMetadata*
        name: ModelMetadata
        nameWithType: InferenceSession.ModelMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.ModelMetadata
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.ModelMetadata*
        name: ModelMetadata
        nameWithType: InferenceSession.ModelMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.ModelMetadata
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.ModelMetadata
  System.UInt64:
    name:
      CSharp:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      VB:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
    isDefinition: true
    commentId: '!:System.UInt64'
  Microsoft.ML.OnnxRuntime.InferenceSession.ProfilingStartTimeNs*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.ProfilingStartTimeNs*
        name: ProfilingStartTimeNs
        nameWithType: InferenceSession.ProfilingStartTimeNs
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.ProfilingStartTimeNs
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.ProfilingStartTimeNs*
        name: ProfilingStartTimeNs
        nameWithType: InferenceSession.ProfilingStartTimeNs
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.ProfilingStartTimeNs
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.ProfilingStartTimeNs
  Microsoft.ML.OnnxRuntime.InferenceSession.Finalize*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.Finalize*
        name: Finalize
        nameWithType: InferenceSession.Finalize
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.Finalize
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.Finalize*
        name: Finalize
        nameWithType: InferenceSession.Finalize
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.Finalize
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.Finalize
  Microsoft.ML.OnnxRuntime.InferenceSession.Dispose*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose*
        name: Dispose
        nameWithType: InferenceSession.Dispose
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose*
        name: Dispose
        nameWithType: InferenceSession.Dispose
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession.Dispose
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.InferenceSession.Dispose
  Microsoft.ML.OnnxRuntime.InferenceSession:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession
        name: InferenceSession
        nameWithType: InferenceSession
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession
      VB:
      - id: Microsoft.ML.OnnxRuntime.InferenceSession
        name: InferenceSession
        nameWithType: InferenceSession
        qualifiedName: Microsoft.ML.OnnxRuntime.InferenceSession
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.InferenceSession
  Microsoft.ML.OnnxRuntime.NodeMetadata.OnnxValueType*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata.OnnxValueType*
        name: OnnxValueType
        nameWithType: NodeMetadata.OnnxValueType
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata.OnnxValueType
      VB:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata.OnnxValueType*
        name: OnnxValueType
        nameWithType: NodeMetadata.OnnxValueType
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata.OnnxValueType
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NodeMetadata.OnnxValueType
  System.Int32[]:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Microsoft.ML.OnnxRuntime.NodeMetadata.Dimensions*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata.Dimensions*
        name: Dimensions
        nameWithType: NodeMetadata.Dimensions
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata.Dimensions
      VB:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata.Dimensions*
        name: Dimensions
        nameWithType: NodeMetadata.Dimensions
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata.Dimensions
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NodeMetadata.Dimensions
  Microsoft.ML.OnnxRuntime.NodeMetadata.SymbolicDimensions*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata.SymbolicDimensions*
        name: SymbolicDimensions
        nameWithType: NodeMetadata.SymbolicDimensions
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata.SymbolicDimensions
      VB:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata.SymbolicDimensions*
        name: SymbolicDimensions
        nameWithType: NodeMetadata.SymbolicDimensions
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata.SymbolicDimensions
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NodeMetadata.SymbolicDimensions
  System.Type:
    name:
      CSharp:
      - id: System.Type
        name: System.Type
        nameWithType: System.Type
        qualifiedName: System.Type
        isExternal: true
      VB:
      - id: System.Type
        name: System.Type
        nameWithType: System.Type
        qualifiedName: System.Type
        isExternal: true
    isDefinition: true
    commentId: '!:System.Type'
  Microsoft.ML.OnnxRuntime.NodeMetadata.ElementType*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata.ElementType*
        name: ElementType
        nameWithType: NodeMetadata.ElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata.ElementType
      VB:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata.ElementType*
        name: ElementType
        nameWithType: NodeMetadata.ElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata.ElementType
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NodeMetadata.ElementType
  Microsoft.ML.OnnxRuntime.NodeMetadata.IsTensor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata.IsTensor*
        name: IsTensor
        nameWithType: NodeMetadata.IsTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata.IsTensor
      VB:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata.IsTensor*
        name: IsTensor
        nameWithType: NodeMetadata.IsTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata.IsTensor
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NodeMetadata.IsTensor
  Microsoft.ML.OnnxRuntime.NodeMetadata:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata
        name: NodeMetadata
        nameWithType: NodeMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata
      VB:
      - id: Microsoft.ML.OnnxRuntime.NodeMetadata
        name: NodeMetadata
        nameWithType: NodeMetadata
        qualifiedName: Microsoft.ML.OnnxRuntime.NodeMetadata
    isDefinition: true
    commentId: T:Microsoft.ML.OnnxRuntime.NodeMetadata
  Microsoft.ML.OnnxRuntime.ModelMetadata.ProducerName*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.ProducerName*
        name: ProducerName
        nameWithType: ModelMetadata.ProducerName
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.ProducerName
      VB:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.ProducerName*
        name: ProducerName
        nameWithType: ModelMetadata.ProducerName
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.ProducerName
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.ModelMetadata.ProducerName
  Microsoft.ML.OnnxRuntime.ModelMetadata.GraphName*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphName*
        name: GraphName
        nameWithType: ModelMetadata.GraphName
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphName
      VB:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphName*
        name: GraphName
        nameWithType: ModelMetadata.GraphName
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphName
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.ModelMetadata.GraphName
  Microsoft.ML.OnnxRuntime.ModelMetadata.Domain*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.Domain*
        name: Domain
        nameWithType: ModelMetadata.Domain
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.Domain
      VB:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.Domain*
        name: Domain
        nameWithType: ModelMetadata.Domain
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.Domain
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.ModelMetadata.Domain
  Microsoft.ML.OnnxRuntime.ModelMetadata.Description*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.Description*
        name: Description
        nameWithType: ModelMetadata.Description
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.Description
      VB:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.Description*
        name: Description
        nameWithType: ModelMetadata.Description
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.Description
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.ModelMetadata.Description
  Microsoft.ML.OnnxRuntime.ModelMetadata.GraphDescription*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphDescription*
        name: GraphDescription
        nameWithType: ModelMetadata.GraphDescription
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphDescription
      VB:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphDescription*
        name: GraphDescription
        nameWithType: ModelMetadata.GraphDescription
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.GraphDescription
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.ModelMetadata.GraphDescription
  Microsoft.ML.OnnxRuntime.ModelMetadata.Version*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.Version*
        name: Version
        nameWithType: ModelMetadata.Version
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.Version
      VB:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.Version*
        name: Version
        nameWithType: ModelMetadata.Version
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.Version
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.ModelMetadata.Version
  Dictionary`2:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Dictionary{System.String,System.String}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{System.String,System.String}'
  Microsoft.ML.OnnxRuntime.ModelMetadata.CustomMetadataMap*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.CustomMetadataMap*
        name: CustomMetadataMap
        nameWithType: ModelMetadata.CustomMetadataMap
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.CustomMetadataMap
      VB:
      - id: Microsoft.ML.OnnxRuntime.ModelMetadata.CustomMetadataMap*
        name: CustomMetadataMap
        nameWithType: ModelMetadata.CustomMetadataMap
        qualifiedName: Microsoft.ML.OnnxRuntime.ModelMetadata.CustomMetadataMap
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.ModelMetadata.CustomMetadataMap
  Object:
    name:
      CSharp:
      - id: Object
        name: Object
        nameWithType: Object
        qualifiedName: Object
        isExternal: true
      VB:
      - id: Object
        name: Object
        nameWithType: Object
        qualifiedName: Object
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.#ctor*
        name: NamedOnnxValue
        nameWithType: NamedOnnxValue.NamedOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.NamedOnnxValue
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.#ctor*
        name: NamedOnnxValue
        nameWithType: NamedOnnxValue.NamedOnnxValue
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.NamedOnnxValue
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NamedOnnxValue.#ctor
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor*
        name: CreateFromTensor
        nameWithType: NamedOnnxValue.CreateFromTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor*
        name: CreateFromTensor
        nameWithType: NamedOnnxValue.CreateFromTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NamedOnnxValue.CreateFromTensor
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name*
        name: Name
        nameWithType: NamedOnnxValue.Name
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name*
        name: Name
        nameWithType: NamedOnnxValue.Name
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NamedOnnxValue.Name
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value*
        name: Value
        nameWithType: NamedOnnxValue.Value
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value*
        name: Value
        nameWithType: NamedOnnxValue.Value
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NamedOnnxValue.Value
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor*
        name: AsTensor
        nameWithType: NamedOnnxValue.AsTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor*
        name: AsTensor
        nameWithType: NamedOnnxValue.AsTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsTensor
  IEnumerable`1:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:IEnumerable`1'
  IEnumerable{{T}}:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerable`1
    commentId: '!:IEnumerable{``0}'
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable*
        name: AsEnumerable
        nameWithType: NamedOnnxValue.AsEnumerable
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable*
        name: AsEnumerable
        nameWithType: NamedOnnxValue.AsEnumerable
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsEnumerable
  IDictionary`2:
    name:
      CSharp:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:IDictionary`2'
  IDictionary{{K},{V}}:
    name:
      CSharp:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: K
        nameWithType: K
        qualifiedName: K
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: V
        nameWithType: V
        qualifiedName: V
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: K
        nameWithType: K
        qualifiedName: K
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: V
        nameWithType: V
        qualifiedName: V
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IDictionary`2
    commentId: '!:IDictionary{``0,``1}'
  Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary*
        name: AsDictionary
        nameWithType: NamedOnnxValue.AsDictionary
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary
      VB:
      - id: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary*
        name: AsDictionary
        nameWithType: NamedOnnxValue.AsDictionary
        qualifiedName: Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.NamedOnnxValue.AsDictionary
  IntPtr:
    name:
      CSharp:
      - id: IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: IntPtr
        isExternal: true
      VB:
      - id: IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: IntPtr
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.OrtApiBase:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtApiBase
        name: OrtApiBase
        nameWithType: OrtApiBase
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtApiBase
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtApiBase
        name: OrtApiBase
        nameWithType: OrtApiBase
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtApiBase
    isDefinition: true
    commentId: T:Microsoft.ML.OnnxRuntime.OrtApiBase
  Microsoft.ML.OnnxRuntime.OrtApi:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtApi
        name: OrtApi
        nameWithType: OrtApi
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtApi
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtApi
        name: OrtApi
        nameWithType: OrtApi
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtApi
    isDefinition: true
    commentId: T:Microsoft.ML.OnnxRuntime.OrtApi
  Microsoft.ML.OnnxRuntime.LogLevel:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.LogLevel
        name: LogLevel
        nameWithType: LogLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.LogLevel
      VB:
      - id: Microsoft.ML.OnnxRuntime.LogLevel
        name: LogLevel
        nameWithType: LogLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.LogLevel
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.LogLevel
  Microsoft.ML.OnnxRuntime.OrtLanguageProjection:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
        name: OrtLanguageProjection
        nameWithType: OrtLanguageProjection
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
        name: OrtLanguageProjection
        nameWithType: OrtLanguageProjection
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtLanguageProjection
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtLanguageProjection
  Microsoft.ML.OnnxRuntime.OrtEnv:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv
        name: OrtEnv
        nameWithType: OrtEnv
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv
        name: OrtEnv
        nameWithType: OrtEnv
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtEnv
  Microsoft.ML.OnnxRuntime.OrtEnv.Instance*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.Instance*
        name: Instance
        nameWithType: OrtEnv.Instance
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.Instance
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.Instance*
        name: Instance
        nameWithType: OrtEnv.Instance
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.Instance
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtEnv.Instance
  Microsoft.ML.OnnxRuntime.OrtEnv.EnableTelemetryEvents*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.EnableTelemetryEvents*
        name: EnableTelemetryEvents
        nameWithType: OrtEnv.EnableTelemetryEvents
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.EnableTelemetryEvents
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.EnableTelemetryEvents*
        name: EnableTelemetryEvents
        nameWithType: OrtEnv.EnableTelemetryEvents
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.EnableTelemetryEvents
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtEnv.EnableTelemetryEvents
  Microsoft.ML.OnnxRuntime.OrtEnv.DisableTelemetryEvents*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.DisableTelemetryEvents*
        name: DisableTelemetryEvents
        nameWithType: OrtEnv.DisableTelemetryEvents
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.DisableTelemetryEvents
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.DisableTelemetryEvents*
        name: DisableTelemetryEvents
        nameWithType: OrtEnv.DisableTelemetryEvents
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.DisableTelemetryEvents
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtEnv.DisableTelemetryEvents
  Microsoft.ML.OnnxRuntime.OrtArenaCfg:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg
        name: OrtArenaCfg
        nameWithType: OrtArenaCfg
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtArenaCfg
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg
        name: OrtArenaCfg
        nameWithType: OrtArenaCfg
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtArenaCfg
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtArenaCfg
  Microsoft.ML.OnnxRuntime.OrtEnv.CreateAndRegisterAllocator*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.CreateAndRegisterAllocator*
        name: CreateAndRegisterAllocator
        nameWithType: OrtEnv.CreateAndRegisterAllocator
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.CreateAndRegisterAllocator
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.CreateAndRegisterAllocator*
        name: CreateAndRegisterAllocator
        nameWithType: OrtEnv.CreateAndRegisterAllocator
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.CreateAndRegisterAllocator
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtEnv.CreateAndRegisterAllocator
  Microsoft.ML.OnnxRuntime.OrtEnv.GetAvailableProviders*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.GetAvailableProviders*
        name: GetAvailableProviders
        nameWithType: OrtEnv.GetAvailableProviders
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.GetAvailableProviders
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.GetAvailableProviders*
        name: GetAvailableProviders
        nameWithType: OrtEnv.GetAvailableProviders
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.GetAvailableProviders
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtEnv.GetAvailableProviders
  Microsoft.ML.OnnxRuntime.OrtEnv.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.IsInvalid*
        name: IsInvalid
        nameWithType: OrtEnv.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.IsInvalid*
        name: IsInvalid
        nameWithType: OrtEnv.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtEnv.IsInvalid
  Microsoft.ML.OnnxRuntime.OrtEnv.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtEnv.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtEnv.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtEnv.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtEnv.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtEnv.ReleaseHandle
  Microsoft.ML.OnnxRuntime.OrtAllocatorType:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocatorType
        name: OrtAllocatorType
        nameWithType: OrtAllocatorType
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocatorType
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocatorType
        name: OrtAllocatorType
        nameWithType: OrtAllocatorType
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocatorType
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtAllocatorType
  Microsoft.ML.OnnxRuntime.OrtMemType:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemType
        name: OrtMemType
        nameWithType: OrtMemType
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemType
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemType
        name: OrtMemType
        nameWithType: OrtMemType
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemType
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtMemType
  System.UInt32:
    name:
      CSharp:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      VB:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
    isDefinition: true
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.OrtArenaCfg.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg.#ctor*
        name: OrtArenaCfg
        nameWithType: OrtArenaCfg.OrtArenaCfg
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtArenaCfg.OrtArenaCfg
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg.#ctor*
        name: OrtArenaCfg
        nameWithType: OrtArenaCfg.OrtArenaCfg
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtArenaCfg.OrtArenaCfg
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtArenaCfg.#ctor
  Microsoft.ML.OnnxRuntime.OrtArenaCfg.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg.IsInvalid*
        name: IsInvalid
        nameWithType: OrtArenaCfg.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtArenaCfg.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg.IsInvalid*
        name: IsInvalid
        nameWithType: OrtArenaCfg.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtArenaCfg.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtArenaCfg.IsInvalid
  Microsoft.ML.OnnxRuntime.OrtArenaCfg.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtArenaCfg.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtArenaCfg.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtArenaCfg.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtArenaCfg.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtArenaCfg.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtArenaCfg.ReleaseHandle
  Microsoft.ML.OnnxRuntime.OrtMemoryInfo.DefaultInstance*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.DefaultInstance*
        name: DefaultInstance
        nameWithType: OrtMemoryInfo.DefaultInstance
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.DefaultInstance
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.DefaultInstance*
        name: DefaultInstance
        nameWithType: OrtMemoryInfo.DefaultInstance
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.DefaultInstance
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.DefaultInstance
  Microsoft.ML.OnnxRuntime.OrtMemoryInfo.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.IsInvalid*
        name: IsInvalid
        nameWithType: OrtMemoryInfo.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.IsInvalid*
        name: IsInvalid
        nameWithType: OrtMemoryInfo.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.IsInvalid
  Microsoft.ML.OnnxRuntime.OrtMemoryInfo.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.#ctor*
        name: OrtMemoryInfo
        nameWithType: OrtMemoryInfo.OrtMemoryInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.OrtMemoryInfo
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.#ctor*
        name: OrtMemoryInfo
        nameWithType: OrtMemoryInfo.OrtMemoryInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.OrtMemoryInfo
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.#ctor
  Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Name*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Name*
        name: Name
        nameWithType: OrtMemoryInfo.Name
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Name
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Name*
        name: Name
        nameWithType: OrtMemoryInfo.Name
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Name
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Name
  Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Id*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Id*
        name: Id
        nameWithType: OrtMemoryInfo.Id
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Id
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Id*
        name: Id
        nameWithType: OrtMemoryInfo.Id
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Id
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Id
  Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetMemoryType*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetMemoryType*
        name: GetMemoryType
        nameWithType: OrtMemoryInfo.GetMemoryType
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetMemoryType
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetMemoryType*
        name: GetMemoryType
        nameWithType: OrtMemoryInfo.GetMemoryType
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetMemoryType
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetMemoryType
  Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetAllocatorType*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetAllocatorType*
        name: GetAllocatorType
        nameWithType: OrtMemoryInfo.GetAllocatorType
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetAllocatorType
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetAllocatorType*
        name: GetAllocatorType
        nameWithType: OrtMemoryInfo.GetAllocatorType
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetAllocatorType
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetAllocatorType
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals*
        name: Equals
        nameWithType: OrtMemoryInfo.Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals*
        name: Equals
        nameWithType: OrtMemoryInfo.Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.Equals
  Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetHashCode*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetHashCode*
        name: GetHashCode
        nameWithType: OrtMemoryInfo.GetHashCode
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetHashCode
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetHashCode*
        name: GetHashCode
        nameWithType: OrtMemoryInfo.GetHashCode
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetHashCode
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.GetHashCode
  Microsoft.ML.OnnxRuntime.OrtMemoryInfo.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtMemoryInfo.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtMemoryInfo.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryInfo.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryInfo.ReleaseHandle
  Microsoft.ML.OnnxRuntime.OrtExternalAllocation.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.#ctor*
        name: OrtExternalAllocation
        nameWithType: OrtExternalAllocation.OrtExternalAllocation
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.OrtExternalAllocation
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.#ctor*
        name: OrtExternalAllocation
        nameWithType: OrtExternalAllocation.OrtExternalAllocation
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.OrtExternalAllocation
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.#ctor
  Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Info*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Info*
        name: Info
        nameWithType: OrtExternalAllocation.Info
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Info
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Info*
        name: Info
        nameWithType: OrtExternalAllocation.Info
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Info
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Info
  Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Shape*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Shape*
        name: Shape
        nameWithType: OrtExternalAllocation.Shape
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Shape
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Shape*
        name: Shape
        nameWithType: OrtExternalAllocation.Shape
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Shape
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Shape
  Microsoft.ML.OnnxRuntime.OrtExternalAllocation.ElementType*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.ElementType*
        name: ElementType
        nameWithType: OrtExternalAllocation.ElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.ElementType
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.ElementType*
        name: ElementType
        nameWithType: OrtExternalAllocation.ElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.ElementType
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.ElementType
  Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Pointer*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Pointer*
        name: Pointer
        nameWithType: OrtExternalAllocation.Pointer
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Pointer
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Pointer*
        name: Pointer
        nameWithType: OrtExternalAllocation.Pointer
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Pointer
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Pointer
  Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Size*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Size*
        name: Size
        nameWithType: OrtExternalAllocation.Size
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Size
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Size*
        name: Size
        nameWithType: OrtExternalAllocation.Size
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Size
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtExternalAllocation.Size
  Microsoft.ML.OnnxRuntime.OrtExternalAllocation:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation
        name: OrtExternalAllocation
        nameWithType: OrtExternalAllocation
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtExternalAllocation
        name: OrtExternalAllocation
        nameWithType: OrtExternalAllocation
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtExternalAllocation
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtExternalAllocation
  Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.IsInvalid*
        name: IsInvalid
        nameWithType: OrtMemoryAllocation.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.IsInvalid*
        name: IsInvalid
        nameWithType: OrtMemoryAllocation.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.IsInvalid
  Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Size*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Size*
        name: Size
        nameWithType: OrtMemoryAllocation.Size
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Size
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Size*
        name: Size
        nameWithType: OrtMemoryAllocation.Size
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Size
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Size
  Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Info*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Info*
        name: Info
        nameWithType: OrtMemoryAllocation.Info
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Info
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Info*
        name: Info
        nameWithType: OrtMemoryAllocation.Info
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Info
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.Info
  Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtMemoryAllocation.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtMemoryAllocation.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtMemoryAllocation.ReleaseHandle
  Microsoft.ML.OnnxRuntime.OrtMemoryAllocation:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
        name: OrtMemoryAllocation
        nameWithType: OrtMemoryAllocation
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
        name: OrtMemoryAllocation
        nameWithType: OrtMemoryAllocation
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtMemoryAllocation
  Microsoft.ML.OnnxRuntime.OrtAllocator:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator
        name: OrtAllocator
        nameWithType: OrtAllocator
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator
        name: OrtAllocator
        nameWithType: OrtAllocator
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtAllocator
  Microsoft.ML.OnnxRuntime.OrtAllocator.DefaultInstance*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.DefaultInstance*
        name: DefaultInstance
        nameWithType: OrtAllocator.DefaultInstance
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.DefaultInstance
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.DefaultInstance*
        name: DefaultInstance
        nameWithType: OrtAllocator.DefaultInstance
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.DefaultInstance
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtAllocator.DefaultInstance
  Microsoft.ML.OnnxRuntime.OrtAllocator.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.IsInvalid*
        name: IsInvalid
        nameWithType: OrtAllocator.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.IsInvalid*
        name: IsInvalid
        nameWithType: OrtAllocator.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtAllocator.IsInvalid
  Microsoft.ML.OnnxRuntime.OrtAllocator.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.#ctor*
        name: OrtAllocator
        nameWithType: OrtAllocator.OrtAllocator
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.OrtAllocator
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.#ctor*
        name: OrtAllocator
        nameWithType: OrtAllocator.OrtAllocator
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.OrtAllocator
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtAllocator.#ctor
  Microsoft.ML.OnnxRuntime.OrtAllocator.Info*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.Info*
        name: Info
        nameWithType: OrtAllocator.Info
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.Info
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.Info*
        name: Info
        nameWithType: OrtAllocator.Info
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.Info
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtAllocator.Info
  Microsoft.ML.OnnxRuntime.OrtAllocator.Allocate*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.Allocate*
        name: Allocate
        nameWithType: OrtAllocator.Allocate
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.Allocate
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.Allocate*
        name: Allocate
        nameWithType: OrtAllocator.Allocate
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.Allocate
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtAllocator.Allocate
  Microsoft.ML.OnnxRuntime.OrtAllocator.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtAllocator.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtAllocator.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtAllocator.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtAllocator.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtAllocator.ReleaseHandle
  Microsoft.ML.OnnxRuntime.OrtIoBinding.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.IsInvalid*
        name: IsInvalid
        nameWithType: OrtIoBinding.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.IsInvalid*
        name: IsInvalid
        nameWithType: OrtIoBinding.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtIoBinding.IsInvalid
  Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput*
        name: BindInput
        nameWithType: OrtIoBinding.BindInput
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput*
        name: BindInput
        nameWithType: OrtIoBinding.BindInput
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtIoBinding.BindInput
  Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundInputs*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundInputs*
        name: SynchronizeBoundInputs
        nameWithType: OrtIoBinding.SynchronizeBoundInputs
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundInputs
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundInputs*
        name: SynchronizeBoundInputs
        nameWithType: OrtIoBinding.SynchronizeBoundInputs
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundInputs
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundInputs
  Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput*
        name: BindOutput
        nameWithType: OrtIoBinding.BindOutput
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput*
        name: BindOutput
        nameWithType: OrtIoBinding.BindOutput
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutput
  Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutputToDevice*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutputToDevice*
        name: BindOutputToDevice
        nameWithType: OrtIoBinding.BindOutputToDevice
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutputToDevice
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutputToDevice*
        name: BindOutputToDevice
        nameWithType: OrtIoBinding.BindOutputToDevice
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutputToDevice
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtIoBinding.BindOutputToDevice
  Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundOutputs*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundOutputs*
        name: SynchronizeBoundOutputs
        nameWithType: OrtIoBinding.SynchronizeBoundOutputs
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundOutputs
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundOutputs*
        name: SynchronizeBoundOutputs
        nameWithType: OrtIoBinding.SynchronizeBoundOutputs
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundOutputs
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtIoBinding.SynchronizeBoundOutputs
  Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputNames*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputNames*
        name: GetOutputNames
        nameWithType: OrtIoBinding.GetOutputNames
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputNames
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputNames*
        name: GetOutputNames
        nameWithType: OrtIoBinding.GetOutputNames
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputNames
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputNames
  Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.OrtValue}:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1
        name: IDisposableReadOnlyCollection
        nameWithType: IDisposableReadOnlyCollection
        qualifiedName: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.ML.OnnxRuntime.OrtValue
        name: OrtValue
        nameWithType: OrtValue
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1
        name: IDisposableReadOnlyCollection
        nameWithType: IDisposableReadOnlyCollection
        qualifiedName: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.ML.OnnxRuntime.OrtValue
        name: OrtValue
        nameWithType: OrtValue
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection`1
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.IDisposableReadOnlyCollection{Microsoft.ML.OnnxRuntime.OrtValue}
  Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputValues*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputValues*
        name: GetOutputValues
        nameWithType: OrtIoBinding.GetOutputValues
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputValues
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputValues*
        name: GetOutputValues
        nameWithType: OrtIoBinding.GetOutputValues
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputValues
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtIoBinding.GetOutputValues
  Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundInputs*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundInputs*
        name: ClearBoundInputs
        nameWithType: OrtIoBinding.ClearBoundInputs
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundInputs
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundInputs*
        name: ClearBoundInputs
        nameWithType: OrtIoBinding.ClearBoundInputs
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundInputs
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundInputs
  Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundOutputs*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundOutputs*
        name: ClearBoundOutputs
        nameWithType: OrtIoBinding.ClearBoundOutputs
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundOutputs
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundOutputs*
        name: ClearBoundOutputs
        nameWithType: OrtIoBinding.ClearBoundOutputs
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundOutputs
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtIoBinding.ClearBoundOutputs
  Microsoft.ML.OnnxRuntime.OrtIoBinding.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtIoBinding.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtIoBinding.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtIoBinding.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtIoBinding.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtIoBinding.ReleaseHandle
  Microsoft.ML.OnnxRuntime.OrtLoggingLevel:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
        name: OrtLoggingLevel
        nameWithType: OrtLoggingLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
        name: OrtLoggingLevel
        nameWithType: OrtLoggingLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtLoggingLevel
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtLoggingLevel
  Microsoft.ML.OnnxRuntime.OrtValue.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtValue.IsInvalid*
        name: IsInvalid
        nameWithType: OrtValue.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtValue.IsInvalid*
        name: IsInvalid
        nameWithType: OrtValue.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtValue.IsInvalid
  Microsoft.ML.OnnxRuntime.OrtValue:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtValue
        name: OrtValue
        nameWithType: OrtValue
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtValue
        name: OrtValue
        nameWithType: OrtValue
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtValue
  Microsoft.ML.OnnxRuntime.OrtValue.CreateTensorValueWithData*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtValue.CreateTensorValueWithData*
        name: CreateTensorValueWithData
        nameWithType: OrtValue.CreateTensorValueWithData
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue.CreateTensorValueWithData
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtValue.CreateTensorValueWithData*
        name: CreateTensorValueWithData
        nameWithType: OrtValue.CreateTensorValueWithData
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue.CreateTensorValueWithData
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtValue.CreateTensorValueWithData
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:System.Nullable`1'
  System.Nullable{MemoryHandle}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MemoryHandle
        name: MemoryHandle
        nameWithType: MemoryHandle
        qualifiedName: MemoryHandle
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MemoryHandle
        name: MemoryHandle
        nameWithType: MemoryHandle
        qualifiedName: MemoryHandle
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    commentId: '!:System.Nullable{MemoryHandle}'
  Microsoft.ML.OnnxRuntime.OrtValue.CreateFromTensorObject*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtValue.CreateFromTensorObject*
        name: CreateFromTensorObject
        nameWithType: OrtValue.CreateFromTensorObject
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue.CreateFromTensorObject
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtValue.CreateFromTensorObject*
        name: CreateFromTensorObject
        nameWithType: OrtValue.CreateFromTensorObject
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue.CreateFromTensorObject
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtValue.CreateFromTensorObject
  Microsoft.ML.OnnxRuntime.OrtValue.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtValue.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtValue.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtValue.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtValue.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtValue.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtValue.ReleaseHandle
  Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.#ctor*
        name: PrePackedWeightsContainer
        nameWithType: PrePackedWeightsContainer.PrePackedWeightsContainer
        qualifiedName: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.PrePackedWeightsContainer
      VB:
      - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.#ctor*
        name: PrePackedWeightsContainer
        nameWithType: PrePackedWeightsContainer.PrePackedWeightsContainer
        qualifiedName: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.PrePackedWeightsContainer
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.#ctor
  Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.IsInvalid*
        name: IsInvalid
        nameWithType: PrePackedWeightsContainer.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.IsInvalid*
        name: IsInvalid
        nameWithType: PrePackedWeightsContainer.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.IsInvalid
  Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: PrePackedWeightsContainer.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: PrePackedWeightsContainer.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.PrePackedWeightsContainer.ReleaseHandle
  Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.#ctor*
        name: OrtTensorRTProviderOptions
        nameWithType: OrtTensorRTProviderOptions.OrtTensorRTProviderOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.OrtTensorRTProviderOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.#ctor*
        name: OrtTensorRTProviderOptions
        nameWithType: OrtTensorRTProviderOptions.OrtTensorRTProviderOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.OrtTensorRTProviderOptions
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.#ctor
  Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetOptions*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetOptions*
        name: GetOptions
        nameWithType: OrtTensorRTProviderOptions.GetOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetOptions*
        name: GetOptions
        nameWithType: OrtTensorRTProviderOptions.GetOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetOptions
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetOptions
  Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.UpdateOptions*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.UpdateOptions*
        name: UpdateOptions
        nameWithType: OrtTensorRTProviderOptions.UpdateOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.UpdateOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.UpdateOptions*
        name: UpdateOptions
        nameWithType: OrtTensorRTProviderOptions.UpdateOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.UpdateOptions
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.UpdateOptions
  Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetDeviceId*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetDeviceId*
        name: GetDeviceId
        nameWithType: OrtTensorRTProviderOptions.GetDeviceId
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetDeviceId
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetDeviceId*
        name: GetDeviceId
        nameWithType: OrtTensorRTProviderOptions.GetDeviceId
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetDeviceId
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.GetDeviceId
  Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.IsInvalid*
        name: IsInvalid
        nameWithType: OrtTensorRTProviderOptions.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.IsInvalid*
        name: IsInvalid
        nameWithType: OrtTensorRTProviderOptions.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.IsInvalid
  Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtTensorRTProviderOptions.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtTensorRTProviderOptions.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions.ReleaseHandle
  Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions
        name: OrtTensorRTProviderOptions
        nameWithType: OrtTensorRTProviderOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions
        name: OrtTensorRTProviderOptions
        nameWithType: OrtTensorRTProviderOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtTensorRTProviderOptions
  Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.#ctor*
        name: OrtCUDAProviderOptions
        nameWithType: OrtCUDAProviderOptions.OrtCUDAProviderOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.OrtCUDAProviderOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.#ctor*
        name: OrtCUDAProviderOptions
        nameWithType: OrtCUDAProviderOptions.OrtCUDAProviderOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.OrtCUDAProviderOptions
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.#ctor
  Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.GetOptions*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.GetOptions*
        name: GetOptions
        nameWithType: OrtCUDAProviderOptions.GetOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.GetOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.GetOptions*
        name: GetOptions
        nameWithType: OrtCUDAProviderOptions.GetOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.GetOptions
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.GetOptions
  Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.UpdateOptions*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.UpdateOptions*
        name: UpdateOptions
        nameWithType: OrtCUDAProviderOptions.UpdateOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.UpdateOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.UpdateOptions*
        name: UpdateOptions
        nameWithType: OrtCUDAProviderOptions.UpdateOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.UpdateOptions
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.UpdateOptions
  Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.IsInvalid*
        name: IsInvalid
        nameWithType: OrtCUDAProviderOptions.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.IsInvalid*
        name: IsInvalid
        nameWithType: OrtCUDAProviderOptions.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.IsInvalid
  Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtCUDAProviderOptions.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: OrtCUDAProviderOptions.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions.ReleaseHandle
  Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions
        name: OrtCUDAProviderOptions
        nameWithType: OrtCUDAProviderOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions
        name: OrtCUDAProviderOptions
        nameWithType: OrtCUDAProviderOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.OrtCUDAProviderOptions
  Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper.StringToDict*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper.StringToDict*
        name: StringToDict
        nameWithType: ProviderOptionsValueHelper.StringToDict
        qualifiedName: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper.StringToDict
      VB:
      - id: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper.StringToDict*
        name: StringToDict
        nameWithType: ProviderOptionsValueHelper.StringToDict
        qualifiedName: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper.StringToDict
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper.StringToDict
  Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper
        name: ProviderOptionsValueHelper
        nameWithType: ProviderOptionsValueHelper
        qualifiedName: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper
      VB:
      - id: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper
        name: ProviderOptionsValueHelper
        nameWithType: ProviderOptionsValueHelper
        qualifiedName: Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper
    isDefinition: true
    commentId: T:Microsoft.ML.OnnxRuntime.ProviderOptionsValueHelper
  Microsoft.ML.OnnxRuntime.CoreMLFlags:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.CoreMLFlags
        name: CoreMLFlags
        nameWithType: CoreMLFlags
        qualifiedName: Microsoft.ML.OnnxRuntime.CoreMLFlags
      VB:
      - id: Microsoft.ML.OnnxRuntime.CoreMLFlags
        name: CoreMLFlags
        nameWithType: CoreMLFlags
        qualifiedName: Microsoft.ML.OnnxRuntime.CoreMLFlags
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.CoreMLFlags
  Microsoft.ML.OnnxRuntime.NnapiFlags:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.NnapiFlags
        name: NnapiFlags
        nameWithType: NnapiFlags
        qualifiedName: Microsoft.ML.OnnxRuntime.NnapiFlags
      VB:
      - id: Microsoft.ML.OnnxRuntime.NnapiFlags
        name: NnapiFlags
        nameWithType: NnapiFlags
        qualifiedName: Microsoft.ML.OnnxRuntime.NnapiFlags
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.NnapiFlags
  Microsoft.ML.OnnxRuntime.RunOptions.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.#ctor*
        name: RunOptions
        nameWithType: RunOptions.RunOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.RunOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.#ctor*
        name: RunOptions
        nameWithType: RunOptions.RunOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.RunOptions
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.RunOptions.#ctor
  Microsoft.ML.OnnxRuntime.RunOptions.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.IsInvalid*
        name: IsInvalid
        nameWithType: RunOptions.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.IsInvalid*
        name: IsInvalid
        nameWithType: RunOptions.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.RunOptions.IsInvalid
  Microsoft.ML.OnnxRuntime.RunOptions.LogSeverityLevel*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.LogSeverityLevel*
        name: LogSeverityLevel
        nameWithType: RunOptions.LogSeverityLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.LogSeverityLevel
      VB:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.LogSeverityLevel*
        name: LogSeverityLevel
        nameWithType: RunOptions.LogSeverityLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.LogSeverityLevel
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.RunOptions.LogSeverityLevel
  Microsoft.ML.OnnxRuntime.RunOptions.LogVerbosityLevel*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.LogVerbosityLevel*
        name: LogVerbosityLevel
        nameWithType: RunOptions.LogVerbosityLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.LogVerbosityLevel
      VB:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.LogVerbosityLevel*
        name: LogVerbosityLevel
        nameWithType: RunOptions.LogVerbosityLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.LogVerbosityLevel
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.RunOptions.LogVerbosityLevel
  Microsoft.ML.OnnxRuntime.RunOptions.LogId*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.LogId*
        name: LogId
        nameWithType: RunOptions.LogId
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.LogId
      VB:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.LogId*
        name: LogId
        nameWithType: RunOptions.LogId
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.LogId
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.RunOptions.LogId
  Microsoft.ML.OnnxRuntime.RunOptions.Terminate*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.Terminate*
        name: Terminate
        nameWithType: RunOptions.Terminate
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.Terminate
      VB:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.Terminate*
        name: Terminate
        nameWithType: RunOptions.Terminate
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.Terminate
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.RunOptions.Terminate
  Microsoft.ML.OnnxRuntime.RunOptions.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: RunOptions.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.RunOptions.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: RunOptions.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.RunOptions.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.RunOptions.ReleaseHandle
  Microsoft.ML.OnnxRuntime.GraphOptimizationLevel:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
        name: GraphOptimizationLevel
        nameWithType: GraphOptimizationLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
      VB:
      - id: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
        name: GraphOptimizationLevel
        nameWithType: GraphOptimizationLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.GraphOptimizationLevel
  Microsoft.ML.OnnxRuntime.ExecutionMode:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.ExecutionMode
        name: ExecutionMode
        nameWithType: ExecutionMode
        qualifiedName: Microsoft.ML.OnnxRuntime.ExecutionMode
      VB:
      - id: Microsoft.ML.OnnxRuntime.ExecutionMode
        name: ExecutionMode
        nameWithType: ExecutionMode
        qualifiedName: Microsoft.ML.OnnxRuntime.ExecutionMode
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.ExecutionMode
  ? Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(Microsoft.ML.OnnxRuntime.SessionOptions,System.String,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(Microsoft.ML.OnnxRuntime.SessionOptions,System.String,System.Boolean)
        name: ApplyConfiguration
        nameWithType: SessionOptionsContainer.ApplyConfiguration
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.SessionOptions
        name: SessionOptions
        nameWithType: SessionOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(Microsoft.ML.OnnxRuntime.SessionOptions,System.String,System.Boolean)
        name: ApplyConfiguration
        nameWithType: SessionOptionsContainer.ApplyConfiguration
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.SessionOptions
        name: SessionOptions
        nameWithType: SessionOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(Microsoft.ML.OnnxRuntime.SessionOptions,System.String,System.Boolean)
  Microsoft.ML.OnnxRuntime.SessionOptionsContainer:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer
        name: SessionOptionsContainer
        nameWithType: SessionOptionsContainer
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer
        name: SessionOptionsContainer
        nameWithType: SessionOptionsContainer
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime
    commentId: T:Microsoft.ML.OnnxRuntime.SessionOptionsContainer
  ? Microsoft.ML.OnnxRuntime.SessionOptions.Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(System.String,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(System.String,System.Boolean)
        name: ApplyConfiguration
        nameWithType: SessionOptionsContainer.ApplyConfiguration
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(System.String,System.Boolean)
        name: ApplyConfiguration
        nameWithType: SessionOptionsContainer.ApplyConfiguration
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(Microsoft.ML.OnnxRuntime.SessionOptions,System.String,System.Boolean)
    parent: Microsoft.ML.OnnxRuntime.SessionOptionsContainer
    commentId: M:Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration(Microsoft.ML.OnnxRuntime.SessionOptions,System.String,System.Boolean)
  Microsoft.ML.OnnxRuntime.SessionOptions.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.#ctor*
        name: SessionOptions
        nameWithType: SessionOptions.SessionOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.SessionOptions
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.#ctor*
        name: SessionOptions
        nameWithType: SessionOptions.SessionOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.SessionOptions
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.#ctor
  Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider*
        name: MakeSessionOptionWithCudaProvider
        nameWithType: SessionOptions.MakeSessionOptionWithCudaProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider*
        name: MakeSessionOptionWithCudaProvider
        nameWithType: SessionOptions.MakeSessionOptionWithCudaProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithCudaProvider
  Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider*
        name: MakeSessionOptionWithTensorrtProvider
        nameWithType: SessionOptions.MakeSessionOptionWithTensorrtProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider*
        name: MakeSessionOptionWithTensorrtProvider
        nameWithType: SessionOptions.MakeSessionOptionWithTensorrtProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTensorrtProvider
  String:
    name:
      CSharp:
      - id: String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      VB:
      - id: String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithNupharProvider*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithNupharProvider*
        name: MakeSessionOptionWithNupharProvider
        nameWithType: SessionOptions.MakeSessionOptionWithNupharProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithNupharProvider
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithNupharProvider*
        name: MakeSessionOptionWithNupharProvider
        nameWithType: SessionOptions.MakeSessionOptionWithNupharProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithNupharProvider
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithNupharProvider
  Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTvmProvider*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTvmProvider*
        name: MakeSessionOptionWithTvmProvider
        nameWithType: SessionOptions.MakeSessionOptionWithTvmProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTvmProvider
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTvmProvider*
        name: MakeSessionOptionWithTvmProvider
        nameWithType: SessionOptions.MakeSessionOptionWithTvmProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTvmProvider
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithTvmProvider
  Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithRocmProvider*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithRocmProvider*
        name: MakeSessionOptionWithRocmProvider
        nameWithType: SessionOptions.MakeSessionOptionWithRocmProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithRocmProvider
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithRocmProvider*
        name: MakeSessionOptionWithRocmProvider
        nameWithType: SessionOptions.MakeSessionOptionWithRocmProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithRocmProvider
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.MakeSessionOptionWithRocmProvider
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CPU*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CPU*
        name: AppendExecutionProvider_CPU
        nameWithType: SessionOptions.AppendExecutionProvider_CPU
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CPU
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CPU*
        name: AppendExecutionProvider_CPU
        nameWithType: SessionOptions.AppendExecutionProvider_CPU
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CPU
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CPU
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Dnnl*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Dnnl*
        name: AppendExecutionProvider_Dnnl
        nameWithType: SessionOptions.AppendExecutionProvider_Dnnl
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Dnnl
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Dnnl*
        name: AppendExecutionProvider_Dnnl
        nameWithType: SessionOptions.AppendExecutionProvider_Dnnl
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Dnnl
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Dnnl
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA*
        name: AppendExecutionProvider_CUDA
        nameWithType: SessionOptions.AppendExecutionProvider_CUDA
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA*
        name: AppendExecutionProvider_CUDA
        nameWithType: SessionOptions.AppendExecutionProvider_CUDA
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CUDA
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_DML*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_DML*
        name: AppendExecutionProvider_DML
        nameWithType: SessionOptions.AppendExecutionProvider_DML
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_DML
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_DML*
        name: AppendExecutionProvider_DML
        nameWithType: SessionOptions.AppendExecutionProvider_DML
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_DML
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_DML
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_OpenVINO*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_OpenVINO*
        name: AppendExecutionProvider_OpenVINO
        nameWithType: SessionOptions.AppendExecutionProvider_OpenVINO
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_OpenVINO
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_OpenVINO*
        name: AppendExecutionProvider_OpenVINO
        nameWithType: SessionOptions.AppendExecutionProvider_OpenVINO
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_OpenVINO
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_OpenVINO
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt*
        name: AppendExecutionProvider_Tensorrt
        nameWithType: SessionOptions.AppendExecutionProvider_Tensorrt
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt*
        name: AppendExecutionProvider_Tensorrt
        nameWithType: SessionOptions.AppendExecutionProvider_Tensorrt
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tensorrt
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_ROCM*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_ROCM*
        name: AppendExecutionProvider_ROCM
        nameWithType: SessionOptions.AppendExecutionProvider_ROCM
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_ROCM
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_ROCM*
        name: AppendExecutionProvider_ROCM
        nameWithType: SessionOptions.AppendExecutionProvider_ROCM
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_ROCM
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_ROCM
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_MIGraphX*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_MIGraphX*
        name: AppendExecutionProvider_MIGraphX
        nameWithType: SessionOptions.AppendExecutionProvider_MIGraphX
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_MIGraphX
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_MIGraphX*
        name: AppendExecutionProvider_MIGraphX
        nameWithType: SessionOptions.AppendExecutionProvider_MIGraphX
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_MIGraphX
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_MIGraphX
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nnapi*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nnapi*
        name: AppendExecutionProvider_Nnapi
        nameWithType: SessionOptions.AppendExecutionProvider_Nnapi
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nnapi
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nnapi*
        name: AppendExecutionProvider_Nnapi
        nameWithType: SessionOptions.AppendExecutionProvider_Nnapi
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nnapi
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nnapi
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CoreML*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CoreML*
        name: AppendExecutionProvider_CoreML
        nameWithType: SessionOptions.AppendExecutionProvider_CoreML
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CoreML
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CoreML*
        name: AppendExecutionProvider_CoreML
        nameWithType: SessionOptions.AppendExecutionProvider_CoreML
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CoreML
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_CoreML
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nuphar*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nuphar*
        name: AppendExecutionProvider_Nuphar
        nameWithType: SessionOptions.AppendExecutionProvider_Nuphar
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nuphar
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nuphar*
        name: AppendExecutionProvider_Nuphar
        nameWithType: SessionOptions.AppendExecutionProvider_Nuphar
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nuphar
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Nuphar
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tvm*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tvm*
        name: AppendExecutionProvider_Tvm
        nameWithType: SessionOptions.AppendExecutionProvider_Tvm
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tvm
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tvm*
        name: AppendExecutionProvider_Tvm
        nameWithType: SessionOptions.AppendExecutionProvider_Tvm
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tvm
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider_Tvm
  Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider*
        name: AppendExecutionProvider
        nameWithType: SessionOptions.AppendExecutionProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider*
        name: AppendExecutionProvider
        nameWithType: SessionOptions.AppendExecutionProvider
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AppendExecutionProvider
  Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibrary*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibrary*
        name: RegisterCustomOpLibrary
        nameWithType: SessionOptions.RegisterCustomOpLibrary
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibrary
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibrary*
        name: RegisterCustomOpLibrary
        nameWithType: SessionOptions.RegisterCustomOpLibrary
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibrary
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibrary
  Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibraryV2*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibraryV2*
        name: RegisterCustomOpLibraryV2
        nameWithType: SessionOptions.RegisterCustomOpLibraryV2
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibraryV2
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibraryV2*
        name: RegisterCustomOpLibraryV2
        nameWithType: SessionOptions.RegisterCustomOpLibraryV2
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibraryV2
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.RegisterCustomOpLibraryV2
  Microsoft.ML.OnnxRuntime.SessionOptions.AddInitializer*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddInitializer*
        name: AddInitializer
        nameWithType: SessionOptions.AddInitializer
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AddInitializer
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddInitializer*
        name: AddInitializer
        nameWithType: SessionOptions.AddInitializer
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AddInitializer
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AddInitializer
  Microsoft.ML.OnnxRuntime.SessionOptions.AddSessionConfigEntry*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddSessionConfigEntry*
        name: AddSessionConfigEntry
        nameWithType: SessionOptions.AddSessionConfigEntry
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AddSessionConfigEntry
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddSessionConfigEntry*
        name: AddSessionConfigEntry
        nameWithType: SessionOptions.AddSessionConfigEntry
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AddSessionConfigEntry
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AddSessionConfigEntry
  Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverride*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverride*
        name: AddFreeDimensionOverride
        nameWithType: SessionOptions.AddFreeDimensionOverride
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverride
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverride*
        name: AddFreeDimensionOverride
        nameWithType: SessionOptions.AddFreeDimensionOverride
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverride
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverride
  Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverrideByName*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverrideByName*
        name: AddFreeDimensionOverrideByName
        nameWithType: SessionOptions.AddFreeDimensionOverrideByName
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverrideByName
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverrideByName*
        name: AddFreeDimensionOverrideByName
        nameWithType: SessionOptions.AddFreeDimensionOverrideByName
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverrideByName
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.AddFreeDimensionOverrideByName
  Microsoft.ML.OnnxRuntime.SessionOptions.IsInvalid*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.IsInvalid*
        name: IsInvalid
        nameWithType: SessionOptions.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.IsInvalid
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.IsInvalid*
        name: IsInvalid
        nameWithType: SessionOptions.IsInvalid
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.IsInvalid
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.IsInvalid
  Microsoft.ML.OnnxRuntime.SessionOptions.EnableMemoryPattern*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.EnableMemoryPattern*
        name: EnableMemoryPattern
        nameWithType: SessionOptions.EnableMemoryPattern
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.EnableMemoryPattern
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.EnableMemoryPattern*
        name: EnableMemoryPattern
        nameWithType: SessionOptions.EnableMemoryPattern
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.EnableMemoryPattern
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.EnableMemoryPattern
  Microsoft.ML.OnnxRuntime.SessionOptions.ProfileOutputPathPrefix*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.ProfileOutputPathPrefix*
        name: ProfileOutputPathPrefix
        nameWithType: SessionOptions.ProfileOutputPathPrefix
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.ProfileOutputPathPrefix
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.ProfileOutputPathPrefix*
        name: ProfileOutputPathPrefix
        nameWithType: SessionOptions.ProfileOutputPathPrefix
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.ProfileOutputPathPrefix
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.ProfileOutputPathPrefix
  Microsoft.ML.OnnxRuntime.SessionOptions.EnableProfiling*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.EnableProfiling*
        name: EnableProfiling
        nameWithType: SessionOptions.EnableProfiling
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.EnableProfiling
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.EnableProfiling*
        name: EnableProfiling
        nameWithType: SessionOptions.EnableProfiling
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.EnableProfiling
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.EnableProfiling
  Microsoft.ML.OnnxRuntime.SessionOptions.OptimizedModelFilePath*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.OptimizedModelFilePath*
        name: OptimizedModelFilePath
        nameWithType: SessionOptions.OptimizedModelFilePath
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.OptimizedModelFilePath
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.OptimizedModelFilePath*
        name: OptimizedModelFilePath
        nameWithType: SessionOptions.OptimizedModelFilePath
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.OptimizedModelFilePath
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.OptimizedModelFilePath
  Microsoft.ML.OnnxRuntime.SessionOptions.EnableCpuMemArena*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.EnableCpuMemArena*
        name: EnableCpuMemArena
        nameWithType: SessionOptions.EnableCpuMemArena
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.EnableCpuMemArena
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.EnableCpuMemArena*
        name: EnableCpuMemArena
        nameWithType: SessionOptions.EnableCpuMemArena
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.EnableCpuMemArena
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.EnableCpuMemArena
  Microsoft.ML.OnnxRuntime.SessionOptions.LogId*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.LogId*
        name: LogId
        nameWithType: SessionOptions.LogId
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.LogId
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.LogId*
        name: LogId
        nameWithType: SessionOptions.LogId
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.LogId
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.LogId
  Microsoft.ML.OnnxRuntime.SessionOptions.LogSeverityLevel*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.LogSeverityLevel*
        name: LogSeverityLevel
        nameWithType: SessionOptions.LogSeverityLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.LogSeverityLevel
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.LogSeverityLevel*
        name: LogSeverityLevel
        nameWithType: SessionOptions.LogSeverityLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.LogSeverityLevel
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.LogSeverityLevel
  Microsoft.ML.OnnxRuntime.SessionOptions.LogVerbosityLevel*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.LogVerbosityLevel*
        name: LogVerbosityLevel
        nameWithType: SessionOptions.LogVerbosityLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.LogVerbosityLevel
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.LogVerbosityLevel*
        name: LogVerbosityLevel
        nameWithType: SessionOptions.LogVerbosityLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.LogVerbosityLevel
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.LogVerbosityLevel
  Microsoft.ML.OnnxRuntime.SessionOptions.IntraOpNumThreads*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.IntraOpNumThreads*
        name: IntraOpNumThreads
        nameWithType: SessionOptions.IntraOpNumThreads
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.IntraOpNumThreads
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.IntraOpNumThreads*
        name: IntraOpNumThreads
        nameWithType: SessionOptions.IntraOpNumThreads
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.IntraOpNumThreads
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.IntraOpNumThreads
  Microsoft.ML.OnnxRuntime.SessionOptions.InterOpNumThreads*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.InterOpNumThreads*
        name: InterOpNumThreads
        nameWithType: SessionOptions.InterOpNumThreads
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.InterOpNumThreads
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.InterOpNumThreads*
        name: InterOpNumThreads
        nameWithType: SessionOptions.InterOpNumThreads
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.InterOpNumThreads
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.InterOpNumThreads
  Microsoft.ML.OnnxRuntime.SessionOptions.GraphOptimizationLevel*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.GraphOptimizationLevel*
        name: GraphOptimizationLevel
        nameWithType: SessionOptions.GraphOptimizationLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.GraphOptimizationLevel
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.GraphOptimizationLevel*
        name: GraphOptimizationLevel
        nameWithType: SessionOptions.GraphOptimizationLevel
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.GraphOptimizationLevel
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.GraphOptimizationLevel
  Microsoft.ML.OnnxRuntime.SessionOptions.ExecutionMode*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.ExecutionMode*
        name: ExecutionMode
        nameWithType: SessionOptions.ExecutionMode
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.ExecutionMode
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.ExecutionMode*
        name: ExecutionMode
        nameWithType: SessionOptions.ExecutionMode
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.ExecutionMode
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.ExecutionMode
  Microsoft.ML.OnnxRuntime.SessionOptions.ReleaseHandle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: SessionOptions.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.ReleaseHandle
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptions.ReleaseHandle*
        name: ReleaseHandle
        nameWithType: SessionOptions.ReleaseHandle
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions.ReleaseHandle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptions.ReleaseHandle
  Action`1:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Action{Microsoft.ML.OnnxRuntime.SessionOptions}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.ML.OnnxRuntime.SessionOptions
        name: SessionOptions
        nameWithType: SessionOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.ML.OnnxRuntime.SessionOptions
        name: SessionOptions
        nameWithType: SessionOptions
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptions
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{Microsoft.ML.OnnxRuntime.SessionOptions}'
  Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register*
        name: Register
        nameWithType: SessionOptionsContainer.Register
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register*
        name: Register
        nameWithType: SessionOptionsContainer.Register
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Register
  Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Create*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Create*
        name: Create
        nameWithType: SessionOptionsContainer.Create
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Create
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Create*
        name: Create
        nameWithType: SessionOptionsContainer.Create
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Create
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Create
  Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Reset*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Reset*
        name: Reset
        nameWithType: SessionOptionsContainer.Reset
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Reset
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Reset*
        name: Reset
        nameWithType: SessionOptionsContainer.Reset
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Reset
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptionsContainer.Reset
  Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration*
        name: ApplyConfiguration
        nameWithType: SessionOptionsContainer.ApplyConfiguration
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration
      VB:
      - id: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration*
        name: ApplyConfiguration
        nameWithType: SessionOptionsContainer.ApplyConfiguration
        qualifiedName: Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.SessionOptionsContainer.ApplyConfiguration
  Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1
        name: DenseTensor
        nameWithType: DenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1
        name: DenseTensor
        nameWithType: DenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1
  Microsoft.ML.OnnxRuntime.Tensors.DenseTensor{{T}}:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1
        name: DenseTensor
        nameWithType: DenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1
        name: DenseTensor
        nameWithType: DenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1
    parent: Microsoft.ML.OnnxRuntime.Tensors
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor{``0}
  '{T}[]':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor*
        name: ToTensor
        nameWithType: ArrayTensorExtensions.ToTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor*
        name: ToTensor
        nameWithType: ArrayTensorExtensions.ToTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions.ToTensor
  '{T}[,]':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '[,]'
        nameWithType: '[,]'
        qualifiedName: '[,]'
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: (,)
        nameWithType: (,)
        qualifiedName: (,)
    isDefinition: false
  '{T}[,,]':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '[,,]'
        nameWithType: '[,,]'
        qualifiedName: '[,,]'
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: (,,)
        nameWithType: (,,)
        qualifiedName: (,,)
    isDefinition: false
  '{T}[,,,]':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '[,,,]'
        nameWithType: '[,,,]'
        qualifiedName: '[,,,]'
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: (,,,)
        nameWithType: (,,,)
        qualifiedName: (,,,)
    isDefinition: false
  Array:
    name:
      CSharp:
      - id: Array
        name: Array
        nameWithType: Array
        qualifiedName: Array
        isExternal: true
      VB:
      - id: Array
        name: Array
        nameWithType: Array
        qualifiedName: Array
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions
        name: ArrayTensorExtensions
        nameWithType: ArrayTensorExtensions
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions
        name: ArrayTensorExtensions
        nameWithType: ArrayTensorExtensions
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions
    isDefinition: true
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.ArrayTensorExtensions
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length
        name: Length
        nameWithType: Tensor<T>.Length
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Length
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length
        name: Length
        nameWithType: Tensor(Of T).Length
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Length
    isDefinition: true
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Length:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length
        name: Length
        nameWithType: Tensor<T>.Length
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Length
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length
        name: Length
        nameWithType: Tensor(Of T).Length
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Length
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Length
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank
        name: Rank
        nameWithType: Tensor<T>.Rank
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Rank
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank
        name: Rank
        nameWithType: Tensor(Of T).Rank
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Rank
    isDefinition: true
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Rank:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank
        name: Rank
        nameWithType: Tensor<T>.Rank
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Rank
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank
        name: Rank
        nameWithType: Tensor(Of T).Rank
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Rank
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Rank
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride
        name: IsReversedStride
        nameWithType: Tensor<T>.IsReversedStride
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsReversedStride
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride
        name: IsReversedStride
        nameWithType: Tensor(Of T).IsReversedStride
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsReversedStride
    isDefinition: true
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.IsReversedStride:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride
        name: IsReversedStride
        nameWithType: Tensor<T>.IsReversedStride
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsReversedStride
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride
        name: IsReversedStride
        nameWithType: Tensor(Of T).IsReversedStride
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsReversedStride
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.IsReversedStride
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions
        name: Dimensions
        nameWithType: Tensor<T>.Dimensions
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Dimensions
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions
        name: Dimensions
        nameWithType: Tensor(Of T).Dimensions
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Dimensions
    isDefinition: true
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Dimensions:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions
        name: Dimensions
        nameWithType: Tensor<T>.Dimensions
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Dimensions
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions
        name: Dimensions
        nameWithType: Tensor(Of T).Dimensions
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Dimensions
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Dimensions
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides
        name: Strides
        nameWithType: Tensor<T>.Strides
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Strides
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides
        name: Strides
        nameWithType: Tensor(Of T).Strides
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Strides
    isDefinition: true
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Strides:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides
        name: Strides
        nameWithType: Tensor<T>.Strides
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Strides
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides
        name: Strides
        nameWithType: Tensor(Of T).Strides
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Strides
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Strides
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill(`0):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill(`0)
        name: Fill
        nameWithType: Tensor<T>.Fill
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Fill
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill(`0)
        name: Fill
        nameWithType: Tensor(Of T).Fill
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Fill
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill(`0)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Fill({T}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill(`0)
        name: Fill
        nameWithType: Tensor<T>.Fill
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Fill
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill(`0)
        name: Fill
        nameWithType: Tensor(Of T).Fill
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Fill
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill(`0)
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Fill(`0)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty
        name: CloneEmpty
        nameWithType: Tensor<T>.CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty
        name: CloneEmpty
        nameWithType: Tensor(Of T).CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.CloneEmpty:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty
        name: CloneEmpty
        nameWithType: Tensor<T>.CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty
        name: CloneEmpty
        nameWithType: Tensor(Of T).CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.CloneEmpty
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty(ReadOnlySpan{System.Int32}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty(ReadOnlySpan{System.Int32})
        name: CloneEmpty
        nameWithType: Tensor<T>.CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty(ReadOnlySpan{System.Int32})
        name: CloneEmpty
        nameWithType: Tensor(Of T).CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty(ReadOnlySpan{System.Int32})
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.CloneEmpty(ReadOnlySpan{System.Int32}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty(ReadOnlySpan{System.Int32})
        name: CloneEmpty
        nameWithType: Tensor<T>.CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty(ReadOnlySpan{System.Int32})
        name: CloneEmpty
        nameWithType: Tensor(Of T).CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty(ReadOnlySpan{System.Int32})
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.CloneEmpty(ReadOnlySpan{System.Int32})
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1
        name: CloneEmpty<TResult>
        nameWithType: Tensor<T>.CloneEmpty<TResult>
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty<TResult>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1
        name: CloneEmpty(Of TResult)
        nameWithType: Tensor(Of T).CloneEmpty(Of TResult)
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty(Of TResult)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.CloneEmpty``1:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1
        name: CloneEmpty<TResult>
        nameWithType: Tensor<T>.CloneEmpty<TResult>
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty<TResult>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1
        name: CloneEmpty(Of TResult)
        nameWithType: Tensor(Of T).CloneEmpty(Of TResult)
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty(Of TResult)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.CloneEmpty``1
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal
        name: GetDiagonal
        nameWithType: Tensor<T>.GetDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetDiagonal
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal
        name: GetDiagonal
        nameWithType: Tensor(Of T).GetDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetDiagonal
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetDiagonal:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal
        name: GetDiagonal
        nameWithType: Tensor<T>.GetDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetDiagonal
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal
        name: GetDiagonal
        nameWithType: Tensor(Of T).GetDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetDiagonal
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.GetDiagonal
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal(System.Int32):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal(System.Int32)
        name: GetDiagonal
        nameWithType: Tensor<T>.GetDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetDiagonal
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal(System.Int32)
        name: GetDiagonal
        nameWithType: Tensor(Of T).GetDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetDiagonal
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal(System.Int32)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetDiagonal(System.Int32):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal(System.Int32)
        name: GetDiagonal
        nameWithType: Tensor<T>.GetDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetDiagonal
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal(System.Int32)
        name: GetDiagonal
        nameWithType: Tensor(Of T).GetDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetDiagonal
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal(System.Int32)
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.GetDiagonal(System.Int32)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle
        name: GetTriangle
        nameWithType: Tensor<T>.GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle
        name: GetTriangle
        nameWithType: Tensor(Of T).GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetTriangle:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle
        name: GetTriangle
        nameWithType: Tensor<T>.GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle
        name: GetTriangle
        nameWithType: Tensor(Of T).GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.GetTriangle
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32)
        name: GetTriangle
        nameWithType: Tensor<T>.GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32)
        name: GetTriangle
        nameWithType: Tensor(Of T).GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetTriangle(System.Int32):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32)
        name: GetTriangle
        nameWithType: Tensor<T>.GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32)
        name: GetTriangle
        nameWithType: Tensor(Of T).GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32)
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.GetTriangle(System.Int32)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle
        name: GetUpperTriangle
        nameWithType: Tensor<T>.GetUpperTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetUpperTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle
        name: GetUpperTriangle
        nameWithType: Tensor(Of T).GetUpperTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetUpperTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetUpperTriangle:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle
        name: GetUpperTriangle
        nameWithType: Tensor<T>.GetUpperTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetUpperTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle
        name: GetUpperTriangle
        nameWithType: Tensor(Of T).GetUpperTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetUpperTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.GetUpperTriangle
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle(System.Int32):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle(System.Int32)
        name: GetUpperTriangle
        nameWithType: Tensor<T>.GetUpperTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetUpperTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle(System.Int32)
        name: GetUpperTriangle
        nameWithType: Tensor(Of T).GetUpperTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetUpperTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle(System.Int32)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetUpperTriangle(System.Int32):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle(System.Int32)
        name: GetUpperTriangle
        nameWithType: Tensor<T>.GetUpperTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetUpperTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle(System.Int32)
        name: GetUpperTriangle
        nameWithType: Tensor(Of T).GetUpperTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetUpperTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle(System.Int32)
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.GetUpperTriangle(System.Int32)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32,System.Boolean)
        name: GetTriangle
        nameWithType: Tensor<T>.GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32,System.Boolean)
        name: GetTriangle
        nameWithType: Tensor(Of T).GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32,System.Boolean)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetTriangle(System.Int32,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32,System.Boolean)
        name: GetTriangle
        nameWithType: Tensor<T>.GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32,System.Boolean)
        name: GetTriangle
        nameWithType: Tensor(Of T).GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetTriangle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle(System.Int32,System.Boolean)
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.GetTriangle(System.Int32,System.Boolean)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(System.Int32[]):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(System.Int32[])
        name: Item
        nameWithType: Tensor<T>.Item
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(System.Int32[])
        name: Item
        nameWithType: Tensor(Of T).Item
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(System.Int32[])
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Item(System.Int32[]):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(System.Int32[])
        name: Item
        nameWithType: Tensor<T>.Item
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(System.Int32[])
        name: Item
        nameWithType: Tensor(Of T).Item
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(System.Int32[])
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Item(System.Int32[])
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(ReadOnlySpan{System.Int32}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(ReadOnlySpan{System.Int32})
        name: Item
        nameWithType: Tensor<T>.Item
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(ReadOnlySpan{System.Int32})
        name: Item
        nameWithType: Tensor(Of T).Item
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(ReadOnlySpan{System.Int32})
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Item(ReadOnlySpan{System.Int32}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(ReadOnlySpan{System.Int32})
        name: Item
        nameWithType: Tensor<T>.Item
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(ReadOnlySpan{System.Int32})
        name: Item
        nameWithType: Tensor(Of T).Item
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item(ReadOnlySpan{System.Int32})
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Item(ReadOnlySpan{System.Int32})
  ? Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
  : name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
        name: Compare
        nameWithType: Tensor<T>.Compare
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Compare
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
        name: Compare
        nameWithType: Tensor(Of T).Compare
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Compare
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
  ? Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}},Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}})
  : name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
        name: Compare
        nameWithType: Tensor<T>.Compare
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Compare
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
        name: Compare
        nameWithType: Tensor(Of T).Compare
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Compare
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Compare(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
  ? Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
  : name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
        name: Equals
        nameWithType: Tensor<T>.Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
        name: Equals
        nameWithType: Tensor(Of T).Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
  ? Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}},Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}})
  : name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
        name: Equals
        nameWithType: Tensor<T>.Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
        name: Equals
        nameWithType: Tensor(Of T).Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Equals(Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0},Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0})
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize
        name: IsFixedSize
        nameWithType: Tensor<T>.IsFixedSize
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsFixedSize
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize
        name: IsFixedSize
        nameWithType: Tensor(Of T).IsFixedSize
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsFixedSize
    isDefinition: true
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.IsFixedSize:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize
        name: IsFixedSize
        nameWithType: Tensor<T>.IsFixedSize
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsFixedSize
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize
        name: IsFixedSize
        nameWithType: Tensor(Of T).IsFixedSize
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsFixedSize
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.IsFixedSize
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly
        name: IsReadOnly
        nameWithType: Tensor<T>.IsReadOnly
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsReadOnly
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly
        name: IsReadOnly
        nameWithType: Tensor(Of T).IsReadOnly
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsReadOnly
    isDefinition: true
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.IsReadOnly:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly
        name: IsReadOnly
        nameWithType: Tensor<T>.IsReadOnly
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsReadOnly
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly
        name: IsReadOnly
        nameWithType: Tensor(Of T).IsReadOnly
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsReadOnly
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: P:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.IsReadOnly
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains(`0):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains(`0)
        name: Contains
        nameWithType: Tensor<T>.Contains
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains(`0)
        name: Contains
        nameWithType: Tensor(Of T).Contains
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains(`0)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Contains({T}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains(`0)
        name: Contains
        nameWithType: Tensor<T>.Contains
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains(`0)
        name: Contains
        nameWithType: Tensor(Of T).Contains
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains(`0)
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Contains(`0)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor
        name: ToDenseTensor
        nameWithType: Tensor<T>.ToDenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.ToDenseTensor
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor
        name: ToDenseTensor
        nameWithType: Tensor(Of T).ToDenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).ToDenseTensor
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.ToDenseTensor:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor
        name: ToDenseTensor
        nameWithType: Tensor<T>.ToDenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.ToDenseTensor
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor
        name: ToDenseTensor
        nameWithType: Tensor(Of T).ToDenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).ToDenseTensor
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.ToDenseTensor
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString(System.Boolean):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString(System.Boolean)
        name: GetArrayString
        nameWithType: Tensor<T>.GetArrayString
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetArrayString
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString(System.Boolean)
        name: GetArrayString
        nameWithType: Tensor(Of T).GetArrayString
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetArrayString
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString(System.Boolean)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetArrayString(System.Boolean):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString(System.Boolean)
        name: GetArrayString
        nameWithType: Tensor<T>.GetArrayString
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetArrayString
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString(System.Boolean)
        name: GetArrayString
        nameWithType: Tensor(Of T).GetArrayString
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetArrayString
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString(System.Boolean)
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.GetArrayString(System.Boolean)
  Microsoft.ML.OnnxRuntime.Tensors.TensorBase:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase
        name: TensorBase
        nameWithType: TensorBase
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase
        name: TensorBase
        nameWithType: TensorBase
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.Tensors
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.TensorBase
  Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo(Type):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo(Type)
        name: GetTypeInfo
        nameWithType: TensorBase.GetTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo(Type)
        name: GetTypeInfo
        nameWithType: TensorBase.GetTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.Tensors.TensorBase
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo(Type)
  Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType)
        name: GetElementTypeInfo
        nameWithType: TensorBase.GetElementTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
        name: TensorElementType
        nameWithType: TensorElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType)
        name: GetElementTypeInfo
        nameWithType: TensorBase.GetElementTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
        name: TensorElementType
        nameWithType: TensorElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.Tensors.TensorBase
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType)
  Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
        name: GetTypeInfo
        nameWithType: TensorBase.GetTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
        name: GetTypeInfo
        nameWithType: TensorBase.GetTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.Tensors.TensorBase
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
  IList:
    name:
      CSharp:
      - id: IList
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      VB:
      - id: IList
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
    isDefinition: true
  IList`1:
    name:
      CSharp:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  IList{{T}}:
    name:
      CSharp:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IList`1
    commentId: '!:IList{`0}'
  IReadOnlyList`1:
    name:
      CSharp:
      - id: IReadOnlyList`1
        name: IReadOnlyList
        nameWithType: IReadOnlyList
        qualifiedName: IReadOnlyList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IReadOnlyList`1
        name: IReadOnlyList
        nameWithType: IReadOnlyList
        qualifiedName: IReadOnlyList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  IReadOnlyList{{T}}:
    name:
      CSharp:
      - id: IReadOnlyList`1
        name: IReadOnlyList
        nameWithType: IReadOnlyList
        qualifiedName: IReadOnlyList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IReadOnlyList`1
        name: IReadOnlyList
        nameWithType: IReadOnlyList
        qualifiedName: IReadOnlyList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IReadOnlyList`1
    commentId: '!:IReadOnlyList{`0}'
  IStructuralComparable:
    name:
      CSharp:
      - id: IStructuralComparable
        name: IStructuralComparable
        nameWithType: IStructuralComparable
        qualifiedName: IStructuralComparable
        isExternal: true
      VB:
      - id: IStructuralComparable
        name: IStructuralComparable
        nameWithType: IStructuralComparable
        qualifiedName: IStructuralComparable
        isExternal: true
    isDefinition: true
  IStructuralEquatable:
    name:
      CSharp:
      - id: IStructuralEquatable
        name: IStructuralEquatable
        nameWithType: IStructuralEquatable
        qualifiedName: IStructuralEquatable
        isExternal: true
      VB:
      - id: IStructuralEquatable
        name: IStructuralEquatable
        nameWithType: IStructuralEquatable
        qualifiedName: IStructuralEquatable
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor*
        name: DenseTensor
        nameWithType: DenseTensor<T>.DenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.DenseTensor
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor*
        name: DenseTensor
        nameWithType: DenseTensor(Of T).DenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).DenseTensor
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.#ctor
  ReadOnlySpan`1:
    name:
      CSharp:
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  ReadOnlySpan{System.Int32}:
    name:
      CSharp:
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ReadOnlySpan`1
    commentId: '!:ReadOnlySpan{System.Int32}'
  Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Buffer*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Buffer*
        name: Buffer
        nameWithType: DenseTensor<T>.Buffer
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.Buffer
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Buffer*
        name: Buffer
        nameWithType: DenseTensor(Of T).Buffer
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).Buffer
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Buffer
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue(System.Int32):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue(System.Int32)
        name: GetValue
        nameWithType: Tensor<T>.GetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue(System.Int32)
        name: GetValue
        nameWithType: Tensor(Of T).GetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue(System.Int32)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.GetValue(System.Int32):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue(System.Int32)
        name: GetValue
        nameWithType: Tensor<T>.GetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue(System.Int32)
        name: GetValue
        nameWithType: Tensor(Of T).GetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue(System.Int32)
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.GetValue(System.Int32)
  Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.GetValue*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.GetValue*
        name: GetValue
        nameWithType: DenseTensor<T>.GetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.GetValue
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.GetValue*
        name: GetValue
        nameWithType: DenseTensor(Of T).GetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).GetValue
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.GetValue
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue(System.Int32,`0):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue(System.Int32,`0)
        name: SetValue
        nameWithType: Tensor<T>.SetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.SetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue(System.Int32,`0)
        name: SetValue
        nameWithType: Tensor(Of T).SetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).SetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue(System.Int32,`0)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.SetValue(System.Int32,{T}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue(System.Int32,`0)
        name: SetValue
        nameWithType: Tensor<T>.SetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.SetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue(System.Int32,`0)
        name: SetValue
        nameWithType: Tensor(Of T).SetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).SetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue(System.Int32,`0)
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.SetValue(System.Int32,`0)
  Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.SetValue*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.SetValue*
        name: SetValue
        nameWithType: DenseTensor<T>.SetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.SetValue
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.SetValue*
        name: SetValue
        nameWithType: DenseTensor(Of T).SetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).SetValue
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.SetValue
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo(`0[],System.Int32):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: Tensor<T>.CopyTo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: Tensor(Of T).CopyTo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo(`0[],System.Int32)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.CopyTo({T}[],System.Int32):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: Tensor<T>.CopyTo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: Tensor(Of T).CopyTo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo(`0[],System.Int32)
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.CopyTo(`0[],System.Int32)
  Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CopyTo*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CopyTo*
        name: CopyTo
        nameWithType: DenseTensor<T>.CopyTo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.CopyTo
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CopyTo*
        name: CopyTo
        nameWithType: DenseTensor(Of T).CopyTo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).CopyTo
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CopyTo
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf(`0):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf(`0)
        name: IndexOf
        nameWithType: Tensor<T>.IndexOf
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf(`0)
        name: IndexOf
        nameWithType: Tensor(Of T).IndexOf
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf(`0)
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.IndexOf({T}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf(`0)
        name: IndexOf
        nameWithType: Tensor<T>.IndexOf
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf(`0)
        name: IndexOf
        nameWithType: Tensor(Of T).IndexOf
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf(`0)
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.IndexOf(`0)
  Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.IndexOf*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.IndexOf*
        name: IndexOf
        nameWithType: DenseTensor<T>.IndexOf
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.IndexOf
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.IndexOf*
        name: IndexOf
        nameWithType: DenseTensor(Of T).IndexOf
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).IndexOf
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.IndexOf
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone
        name: Clone
        nameWithType: Tensor<T>.Clone
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Clone
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone
        name: Clone
        nameWithType: Tensor(Of T).Clone
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Clone
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Clone:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone
        name: Clone
        nameWithType: Tensor<T>.Clone
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Clone
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone
        name: Clone
        nameWithType: Tensor(Of T).Clone
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Clone
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Clone
  Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Clone*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Clone*
        name: Clone
        nameWithType: DenseTensor<T>.Clone
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.Clone
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Clone*
        name: Clone
        nameWithType: DenseTensor(Of T).Clone
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).Clone
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Clone
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{TResult}}:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1
    parent: Microsoft.ML.OnnxRuntime.Tensors
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.Tensor{``0}
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1(ReadOnlySpan{System.Int32}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1(ReadOnlySpan{System.Int32})
        name: CloneEmpty<TResult>
        nameWithType: Tensor<T>.CloneEmpty<TResult>
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty<TResult>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1(ReadOnlySpan{System.Int32})
        name: CloneEmpty(Of TResult)
        nameWithType: Tensor(Of T).CloneEmpty(Of TResult)
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty(Of TResult)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1(ReadOnlySpan{System.Int32})
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.CloneEmpty``1(ReadOnlySpan{System.Int32}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1(ReadOnlySpan{System.Int32})
        name: CloneEmpty<TResult>
        nameWithType: Tensor<T>.CloneEmpty<TResult>
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty<TResult>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1(ReadOnlySpan{System.Int32})
        name: CloneEmpty(Of TResult)
        nameWithType: Tensor(Of T).CloneEmpty(Of TResult)
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty(Of TResult)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty``1(ReadOnlySpan{System.Int32})
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.CloneEmpty``1(ReadOnlySpan{System.Int32})
  Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CloneEmpty*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CloneEmpty*
        name: CloneEmpty
        nameWithType: DenseTensor<T>.CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.CloneEmpty
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CloneEmpty*
        name: CloneEmpty
        nameWithType: DenseTensor(Of T).CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).CloneEmpty
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.CloneEmpty
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape(ReadOnlySpan{System.Int32}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape(ReadOnlySpan{System.Int32})
        name: Reshape
        nameWithType: Tensor<T>.Reshape
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Reshape
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape(ReadOnlySpan{System.Int32})
        name: Reshape
        nameWithType: Tensor(Of T).Reshape
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Reshape
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape(ReadOnlySpan{System.Int32})
  Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}.Reshape(ReadOnlySpan{System.Int32}):
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape(ReadOnlySpan{System.Int32})
        name: Reshape
        nameWithType: Tensor<T>.Reshape
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Reshape
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape(ReadOnlySpan{System.Int32})
        name: Reshape
        nameWithType: Tensor(Of T).Reshape
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Reshape
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ReadOnlySpan`1
        name: ReadOnlySpan
        nameWithType: ReadOnlySpan
        qualifiedName: ReadOnlySpan
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape(ReadOnlySpan{System.Int32})
    parent: Microsoft.ML.OnnxRuntime.Tensors.Tensor{{T}}
    commentId: M:Microsoft.ML.OnnxRuntime.Tensors.Tensor{`0}.Reshape(ReadOnlySpan{System.Int32})
  Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Reshape*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Reshape*
        name: Reshape
        nameWithType: DenseTensor<T>.Reshape
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor<T>.Reshape
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Reshape*
        name: Reshape
        nameWithType: DenseTensor(Of T).Reshape
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.DenseTensor(Of T).Reshape
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.DenseTensor`1.Reshape
  System.UInt16:
    name:
      CSharp:
      - id: System.UInt16
        name: UInt16
        nameWithType: UInt16
        qualifiedName: System.UInt16
        isExternal: true
      VB:
      - id: System.UInt16
        name: UInt16
        nameWithType: UInt16
        qualifiedName: System.UInt16
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.Tensors.Float16.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.#ctor*
        name: Float16
        nameWithType: Float16.Float16
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.Float16
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.#ctor*
        name: Float16
        nameWithType: Float16.Float16
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.Float16
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Float16.#ctor
  Microsoft.ML.OnnxRuntime.Tensors.Float16:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16
        name: Float16
        nameWithType: Float16
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16
        name: Float16
        nameWithType: Float16
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.Tensors
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.Float16
  Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Implicit*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Implicit*
        name: Implicit
        nameWithType: Float16.Implicit
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.Implicit
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Implicit*
        name: Widening
        nameWithType: Float16.Widening
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.Widening
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Implicit
  Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Equality*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Equality*
        name: Equality
        nameWithType: Float16.Equality
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equality
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Equality*
        name: Equality
        nameWithType: Float16.Equality
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equality
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Equality
  Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Inequality*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Inequality*
        name: Inequality
        nameWithType: Float16.Inequality
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.Inequality
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Inequality*
        name: Inequality
        nameWithType: Float16.Inequality
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.Inequality
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Float16.op_Inequality
  Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals*
        name: Equals
        nameWithType: Float16.Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals*
        name: Equals
        nameWithType: Float16.Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Float16.Equals
  Microsoft.ML.OnnxRuntime.Tensors.Float16.GetHashCode*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.GetHashCode*
        name: GetHashCode
        nameWithType: Float16.GetHashCode
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.GetHashCode
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Float16.GetHashCode*
        name: GetHashCode
        nameWithType: Float16.GetHashCode
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Float16.GetHashCode
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Float16.GetHashCode
  Microsoft.ML.OnnxRuntime.Tensors.BFloat16.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.#ctor*
        name: BFloat16
        nameWithType: BFloat16.BFloat16
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.BFloat16
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.#ctor*
        name: BFloat16
        nameWithType: BFloat16.BFloat16
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.BFloat16
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.#ctor
  Microsoft.ML.OnnxRuntime.Tensors.BFloat16:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
        name: BFloat16
        nameWithType: BFloat16
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
        name: BFloat16
        nameWithType: BFloat16
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.Tensors
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.BFloat16
  Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Implicit*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Implicit*
        name: Implicit
        nameWithType: BFloat16.Implicit
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Implicit
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Implicit*
        name: Widening
        nameWithType: BFloat16.Widening
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Widening
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Implicit
  Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Equality*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Equality*
        name: Equality
        nameWithType: BFloat16.Equality
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equality
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Equality*
        name: Equality
        nameWithType: BFloat16.Equality
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equality
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Equality
  Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Inequality*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Inequality*
        name: Inequality
        nameWithType: BFloat16.Inequality
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Inequality
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Inequality*
        name: Inequality
        nameWithType: BFloat16.Inequality
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Inequality
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.op_Inequality
  Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals*
        name: Equals
        nameWithType: BFloat16.Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals*
        name: Equals
        nameWithType: BFloat16.Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.Equals
  Microsoft.ML.OnnxRuntime.Tensors.BFloat16.GetHashCode*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.GetHashCode*
        name: GetHashCode
        nameWithType: BFloat16.GetHashCode
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.GetHashCode
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.GetHashCode*
        name: GetHashCode
        nameWithType: BFloat16.GetHashCode
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.BFloat16.GetHashCode
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.BFloat16.GetHashCode
  Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType*
        name: ElementType
        nameWithType: TensorTypeInfo.ElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType*
        name: ElementType
        nameWithType: TensorTypeInfo.ElementType
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
  Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize*
        name: TypeSize
        nameWithType: TensorTypeInfo.TypeSize
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize*
        name: TypeSize
        nameWithType: TensorTypeInfo.TypeSize
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
  Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString*
        name: IsString
        nameWithType: TensorTypeInfo.IsString
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString*
        name: IsString
        nameWithType: TensorTypeInfo.IsString
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
  Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor*
        name: TensorTypeInfo
        nameWithType: TensorTypeInfo.TensorTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TensorTypeInfo
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor*
        name: TensorTypeInfo
        nameWithType: TensorTypeInfo.TensorTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TensorTypeInfo
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor
  Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
        name: TensorTypeInfo
        nameWithType: TensorTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
        name: TensorTypeInfo
        nameWithType: TensorTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.Tensors
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
  Type:
    name:
      CSharp:
      - id: Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
      VB:
      - id: Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
    isDefinition: true
  Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorType*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorType*
        name: TensorType
        nameWithType: TensorElementTypeInfo.TensorType
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorType
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorType*
        name: TensorType
        nameWithType: TensorElementTypeInfo.TensorType
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorType
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorType
  Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TypeSize*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TypeSize*
        name: TypeSize
        nameWithType: TensorElementTypeInfo.TypeSize
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TypeSize
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TypeSize*
        name: TypeSize
        nameWithType: TensorElementTypeInfo.TypeSize
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TypeSize
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TypeSize
  Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.IsString*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.IsString*
        name: IsString
        nameWithType: TensorElementTypeInfo.IsString
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.IsString
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.IsString*
        name: IsString
        nameWithType: TensorElementTypeInfo.IsString
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.IsString
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.IsString
  Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.#ctor*
        name: TensorElementTypeInfo
        nameWithType: TensorElementTypeInfo.TensorElementTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorElementTypeInfo
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.#ctor*
        name: TensorElementTypeInfo
        nameWithType: TensorElementTypeInfo.TensorElementTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.TensorElementTypeInfo
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo.#ctor
  Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo
        name: TensorElementTypeInfo
        nameWithType: TensorElementTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo
        name: TensorElementTypeInfo
        nameWithType: TensorElementTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo
    isDefinition: true
    parent: Microsoft.ML.OnnxRuntime.Tensors
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.TensorElementTypeInfo
  Microsoft.ML.OnnxRuntime.Tensors.TensorBase.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.#ctor*
        name: TensorBase
        nameWithType: TensorBase.TensorBase
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.TensorBase
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.#ctor*
        name: TensorBase
        nameWithType: TensorBase.TensorBase
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.TensorBase
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorBase.#ctor
  Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo*
        name: GetTypeInfo
        nameWithType: TensorBase.GetTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo*
        name: GetTypeInfo
        nameWithType: TensorBase.GetTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetTypeInfo
  Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo*
        name: GetElementTypeInfo
        nameWithType: TensorBase.GetElementTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo*
        name: GetElementTypeInfo
        nameWithType: TensorBase.GetElementTypeInfo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorBase.GetElementTypeInfo
  Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity*
        name: CreateIdentity
        nameWithType: Tensor.CreateIdentity
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity*
        name: CreateIdentity
        nameWithType: Tensor.CreateIdentity
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateIdentity
  Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal*
        name: CreateFromDiagonal
        nameWithType: Tensor.CreateFromDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal*
        name: CreateFromDiagonal
        nameWithType: Tensor.CreateFromDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor.CreateFromDiagonal
  Microsoft.ML.OnnxRuntime.Tensors.Tensor:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor
        name: Tensor
        nameWithType: Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor
    isDefinition: true
    commentId: T:Microsoft.ML.OnnxRuntime.Tensors.Tensor
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor*
        name: Tensor
        nameWithType: Tensor<T>.Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Tensor
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor*
        name: Tensor
        nameWithType: Tensor(Of T).Tensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Tensor
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.#ctor
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length*
        name: Length
        nameWithType: Tensor<T>.Length
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Length
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length*
        name: Length
        nameWithType: Tensor(Of T).Length
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Length
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Length
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank*
        name: Rank
        nameWithType: Tensor<T>.Rank
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Rank
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank*
        name: Rank
        nameWithType: Tensor(Of T).Rank
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Rank
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Rank
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride*
        name: IsReversedStride
        nameWithType: Tensor<T>.IsReversedStride
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsReversedStride
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride*
        name: IsReversedStride
        nameWithType: Tensor(Of T).IsReversedStride
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsReversedStride
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReversedStride
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions*
        name: Dimensions
        nameWithType: Tensor<T>.Dimensions
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Dimensions
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions*
        name: Dimensions
        nameWithType: Tensor(Of T).Dimensions
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Dimensions
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Dimensions
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides*
        name: Strides
        nameWithType: Tensor<T>.Strides
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Strides
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides*
        name: Strides
        nameWithType: Tensor(Of T).Strides
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Strides
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Strides
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill*
        name: Fill
        nameWithType: Tensor<T>.Fill
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Fill
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill*
        name: Fill
        nameWithType: Tensor(Of T).Fill
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Fill
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Fill
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone*
        name: Clone
        nameWithType: Tensor<T>.Clone
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Clone
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone*
        name: Clone
        nameWithType: Tensor(Of T).Clone
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Clone
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Clone
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty*
        name: CloneEmpty
        nameWithType: Tensor<T>.CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CloneEmpty
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty*
        name: CloneEmpty
        nameWithType: Tensor(Of T).CloneEmpty
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CloneEmpty
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CloneEmpty
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal*
        name: GetDiagonal
        nameWithType: Tensor<T>.GetDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetDiagonal
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal*
        name: GetDiagonal
        nameWithType: Tensor(Of T).GetDiagonal
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetDiagonal
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetDiagonal
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle*
        name: GetTriangle
        nameWithType: Tensor<T>.GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetTriangle
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle*
        name: GetTriangle
        nameWithType: Tensor(Of T).GetTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetTriangle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetTriangle
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle*
        name: GetUpperTriangle
        nameWithType: Tensor<T>.GetUpperTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetUpperTriangle
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle*
        name: GetUpperTriangle
        nameWithType: Tensor(Of T).GetUpperTriangle
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetUpperTriangle
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetUpperTriangle
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape*
        name: Reshape
        nameWithType: Tensor<T>.Reshape
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Reshape
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape*
        name: Reshape
        nameWithType: Tensor(Of T).Reshape
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Reshape
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Reshape
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item*
        name: Item
        nameWithType: Tensor<T>.Item
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Item
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item*
        name: Item
        nameWithType: Tensor(Of T).Item
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Item
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Item
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue*
        name: GetValue
        nameWithType: Tensor<T>.GetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetValue
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue*
        name: GetValue
        nameWithType: Tensor(Of T).GetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetValue
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetValue
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue*
        name: SetValue
        nameWithType: Tensor<T>.SetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.SetValue
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue*
        name: SetValue
        nameWithType: Tensor(Of T).SetValue
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).SetValue
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.SetValue
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare*
        name: Compare
        nameWithType: Tensor<T>.Compare
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Compare
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare*
        name: Compare
        nameWithType: Tensor(Of T).Compare
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Compare
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Compare
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals*
        name: Equals
        nameWithType: Tensor<T>.Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Equals
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals*
        name: Equals
        nameWithType: Tensor(Of T).Equals
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Equals
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Equals
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize*
        name: IsFixedSize
        nameWithType: Tensor<T>.IsFixedSize
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsFixedSize
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize*
        name: IsFixedSize
        nameWithType: Tensor(Of T).IsFixedSize
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsFixedSize
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsFixedSize
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly*
        name: IsReadOnly
        nameWithType: Tensor<T>.IsReadOnly
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IsReadOnly
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly*
        name: IsReadOnly
        nameWithType: Tensor(Of T).IsReadOnly
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IsReadOnly
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IsReadOnly
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains*
        name: Contains
        nameWithType: Tensor<T>.Contains
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.Contains
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains*
        name: Contains
        nameWithType: Tensor(Of T).Contains
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).Contains
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.Contains
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo*
        name: CopyTo
        nameWithType: Tensor<T>.CopyTo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.CopyTo
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo*
        name: CopyTo
        nameWithType: Tensor(Of T).CopyTo
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).CopyTo
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.CopyTo
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf*
        name: IndexOf
        nameWithType: Tensor<T>.IndexOf
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.IndexOf
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf*
        name: IndexOf
        nameWithType: Tensor(Of T).IndexOf
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).IndexOf
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.IndexOf
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor*
        name: ToDenseTensor
        nameWithType: Tensor<T>.ToDenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.ToDenseTensor
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor*
        name: ToDenseTensor
        nameWithType: Tensor(Of T).ToDenseTensor
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).ToDenseTensor
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.ToDenseTensor
  Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString*:
    name:
      CSharp:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString*
        name: GetArrayString
        nameWithType: Tensor<T>.GetArrayString
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor<T>.GetArrayString
      VB:
      - id: Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString*
        name: GetArrayString
        nameWithType: Tensor(Of T).GetArrayString
        qualifiedName: Microsoft.ML.OnnxRuntime.Tensors.Tensor(Of T).GetArrayString
    isDefinition: true
    commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.Tensor`1.GetArrayString
